import nextcord
from nextcord.ext import commands
from nextcord import Interaction, SelectOption, ButtonStyle, ui, Permissions, Embed, TextInputStyle
from nextcord.ui import Button, Modal, TextInput, View, Select
import random
import os
import json
import pytz
import urllib
import requests
import datetime
from io import BytesIO
from PIL import Image, ImageDraw, ImageFont
from nextcord.utils import get
import time




bot = commands.Bot(command_prefix='a!', intents=nextcord.Intents.all())

token = "MTM3NDE5MzEzMTkxMzg3NTQ3Ng.GByY95.PC3mw2TkBWV58olp0h1raJxXyEonJjHNJcqhi0"

ROLE_ID = 1373721230271578192  # vfy role

log_vfy = 1374192317107273808

log_77 = "üßæÔ∏±‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"

log_kick = "üßæÔ∏±‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•" #‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏£‡∏∑‡πâ‡∏≠‡∏ô

log_out = "üßæÔ∏±‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"

log_join = "üßæÔ∏±‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"

log_voice = 1182010203789598741

gu = 1373912396216926268

ch = 1374192317107273808

phocute = 1374217978618581032

log_invite = 1374192317107273808


@bot.event
async def on_ready():
    bot.add_view(Button())
    print(f"‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏ô : {bot.user}")
    await bot.change_presence(status=nextcord.Status.idle, activity=nextcord.Game(name="‡ºí Arcane Domain ‡ºí"))
    


    
    
@bot.event
async def on_voice_state_update(member, before, after):
   
    if after.channel and after.self_stream:
        print(f'{member.name} is in {after.channel.name} and started speaking.')
    


# Event ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ñ‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
@bot.event
async def on_member_join(member):
    log_channel = nextcord.utils.get(member.guild.channels, name=log_join)
    
    if log_channel:
        embed = nextcord.Embed(
            description=f"> **‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö {member.mention} ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå **<a:jungwad_anime:1297070556419592202>",
            color=0x3151F7
        )
        embed.set_thumbnail(url=member.avatar.url if member.avatar else member.default_avatar.url)
        embed.add_field(name="**‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ**", value=member.name, inline=True)
        embed.add_field(name="**ID ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ**", value=str(member.id), inline=True)
        embed.set_footer(text=f"‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: {member.joined_at}")
        embed.set_image(url="https://cdn.discordapp.com/attachments/1297759703270690816/1297960070147080254/IMG_1045.jpg?ex=6717d303&is=67168183&hm=32dfed5a213192b1fc1d6157deede48a3a4fb3f7835d8bfd93b1ac526261956d&")
        
        await log_channel.send(embed=embed)

# Event ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ñ‡∏ô‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
@bot.event
async def on_member_remove(member):
    log_channel = nextcord.utils.get(member.guild.channels, name=log_out)
    
    if log_channel:
        embed = nextcord.Embed(
            description=f"> **{member.mention} ‡πÑ‡∏î‡πâ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏±‡πâ‡∏ö**",
            color=0x3151F7
        )
        embed.set_thumbnail(url=member.avatar.url if member.avatar else member.default_avatar.url)
        embed.add_field(name="**‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ**", value=member.name, inline=True)
        embed.add_field(name="**ID ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ**", value=str(member.id), inline=True)
        embed.set_footer(text=f"‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏≠‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: {nextcord.utils.utcnow()}")
        embed.set_image(url="https://cdn.discordapp.com/attachments/1297759703270690816/1297960070147080254/IMG_1045.jpg?ex=6717d303&is=67168183&hm=32dfed5a213192b1fc1d6157deede48a3a4fb3f7835d8bfd93b1ac526261956d&")
        
        await log_channel.send(embed=embed)

        
########]#]#]##]#]#]#]##]]#]##]

@bot.event
async def on_voice_state_update(member, before, after):
    # ‡∏î‡∏∂‡∏á channel ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
    log_channel = bot.get_channel(log_voice)  # ‡πÉ‡∏ä‡πâ log_voice ‡πÅ‡∏ó‡∏ô

    # ‡∏Å‡∏£‡∏ì‡∏µ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á
    if before.channel is None and after.channel is not None:
        embed = nextcord.Embed(
            title="> ‡∏°‡∏µ‡∏Ñ‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏Ç‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á",
            description=f"> **{member.name} ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á {after.channel.name}**",
            color=nextcord.Color.green()
        )
        embed.set_thumbnail(url=member.avatar.url)  # ‡∏ï‡∏±‡πâ‡∏á‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô embed
        await log_channel.send(embed=embed)

    # ‡∏Å‡∏£‡∏ì‡∏µ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á
    elif before.channel is not None and after.channel is None:
        embed = nextcord.Embed(
            title="> ‡∏°‡∏µ‡∏Ñ‡∏ô‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á",
            description=f"> **{member.name} ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á {before.channel.name}**",
            color=nextcord.Color.red()
        )
        embed.set_thumbnail(url=member.avatar.url)
        await log_channel.send(embed=embed)

    # ‡∏Å‡∏£‡∏ì‡∏µ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏¢‡πâ‡∏≤‡∏¢‡∏à‡∏≤‡∏Å‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏´‡∏ô‡∏∂‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏≠‡∏µ‡∏Å‡∏ä‡πà‡∏≠‡∏á‡∏´‡∏ô‡∏∂‡πà‡∏á
    elif before.channel is not None and after.channel is not None and before.channel.id != after.channel.id:
        embed = nextcord.Embed(
            title="> ‡∏°‡∏µ‡∏Ñ‡∏ô‡∏¢‡πâ‡∏≤‡∏¢‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á",
            description=f"> **{member.name} ‡∏¢‡πâ‡∏≤‡∏¢‡∏à‡∏≤‡∏Å {before.channel.name} ‡πÑ‡∏õ‡∏¢‡∏±‡∏á {after.channel.name}**",
            color=nextcord.Color.yellow()
        )
        embed.set_thumbnail(url=member.avatar.url)
        await log_channel.send(embed=embed)



###[#[##[#[#[##[#[#[#[##[#[#








class VerificationModal(nextcord.ui.Modal):
    def __init__(self):
        super().__init__(title="‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ï‡∏±‡∏ß")

        # TextInput ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏•‡πà‡∏ô
        self.nickname = nextcord.ui.TextInput(
            label="‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏•‡πà‡∏ô",
            placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏•‡πà‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì",
            style=TextInputStyle.short,
            required=True
        )
        self.add_item(self.nickname)

        # TextInput ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏≤‡∏¢‡∏∏
        self.age = nextcord.ui.TextInput(
            label="‡∏≠‡∏≤‡∏¢‡∏∏",
            placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏≤‡∏¢‡∏∏‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì",
            style=TextInputStyle.short,
            required=True
        )
        self.add_item(self.age)

        # TextInput ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏û‡∏®
        self.gender = nextcord.ui.TextInput(
            label="‡πÄ‡∏û‡∏®",
            placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏û‡∏®‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì",
            style=TextInputStyle.short,
            required=True
        )
        self.add_item(self.gender)
        
       

        # TextInput ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏£‡∏≠‡∏Å Link Facebook
        self.favorite_animal = nextcord.ui.TextInput(
            label="Link Facebook",
            placeholder="‡∏Å‡∏£‡∏≠‡∏Å Link Facebook",
            style=TextInputStyle.short,
            required=True
        )
        self.add_item(self.favorite_animal)
        
        
         # TextInput ID Discord
        self.favorite = nextcord.ui.TextInput(
            label="ID Discord",
            placeholder="‡∏Å‡∏£‡∏≠‡∏Å ID discord ‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á",
            style=TextInputStyle.short,
            required=True
        )
        self.add_item(self.favorite)
        
        

    async def callback(self, interaction: Interaction):
        # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
        role = interaction.guild.get_role(ROLE_ID)
        if role:
            await interaction.user.add_roles(role)

        # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° Embed ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡πâ‡∏≠‡∏á log
        log_embed = Embed(title="> ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å", color=nextcord.Color.green())
        log_embed.set_author(name=str(interaction.user), icon_url=interaction.user.avatar.url)
        log_embed.add_field(name="**‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏•‡πà‡∏ô**", value=self.nickname.value, inline=False)
        log_embed.add_field(name="**‡∏≠‡∏≤‡∏¢‡∏∏**", value=self.age.value, inline=False)
        log_embed.add_field(name="**‡πÄ‡∏û‡∏®**", value=self.gender.value, inline=False)
       
        log_embed.add_field(name="**Link Facebook**", value=self.favorite_animal.value, inline=False)
        log_embed.add_field(name="**ID Discord**", value=self.favorite.value, inline=False)

        # ‡∏™‡πà‡∏á Embed ‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏≠‡∏á log
        log_channel = interaction.guild.get_channel(log_vfy)
        if log_channel:
            await log_channel.send(embed=log_embed)

        # ‡πÅ‡∏à‡πâ‡∏á‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏£‡∏≤‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏î‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß
        await interaction.response.send_message("> ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß ‚úÖ", ephemeral=True)

class VerifyButton(nextcord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

    @nextcord.ui.button(label="‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ï‡∏±‡∏ß", emoji="<:scarfacemessage:1293494716880388096>", style=nextcord.ButtonStyle.secondary, custom_id="verify_button")
    async def verify_button_callback(self, button: nextcord.ui.Button, interaction: Interaction):
        # ‡πÄ‡∏õ‡∏¥‡∏î Modal ‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        await interaction.response.send_modal(VerificationModal())

@bot.command()
async def setupvfy(ctx):
    
    embed0 = Embed(description=
    "```‡∏≠‡πà‡∏≤‡∏ô‡∏Å‡∏è‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡∏Å‡πà‡∏≠‡∏ô‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•                                  ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô                          ‡∏°‡∏¥‡πÄ‡∏ä‡πà‡∏ô‡∏ô‡∏±‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡πÄ‡∏£‡∏≤‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ```")
    
     
    embed0.set_image(url="https://media.discordapp.net/attachments/1374192317107273808/1374201374606098525/Arcane_Domain__icon.png?ex=682d3043&is=682bdec3&hm=17d94301af24f77703d2c459ce06dee07e94666a16c4a93b665abf5d7bd7721f&=&format=webp&quality=lossless")

    
    await ctx.send(embed=embed0 , view=VerifyButton())



















#####[#[#[#[#[#[#]]]]]]]]]]]]]]]]]
#####[#[#[#[##[#[#[#[##[#[#[##[#




quotes = [
    # ‡πÅ‡∏ô‡∏ß‡∏£‡∏±‡∏Å
    "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô ‡πÅ‡∏°‡πâ‡∏ö‡∏≤‡∏á‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏¢‡∏∏‡∏î‡∏û‡∏±‡∏Å‡∏ö‡πâ‡∏≤‡∏á ‡πÅ‡∏ï‡πà‡∏Ç‡∏≠‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡πÄ‡∏î‡∏¥‡∏ô‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏±‡∏ô‡∏à‡∏ô‡∏™‡∏∏‡∏î‡∏ó‡∏≤‡∏á",
    "‡∏Ñ‡∏ô‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏£‡∏±‡∏Å‡πÉ‡∏Ñ‡∏£‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏• ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏∞‡πÑ‡∏£‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå‡πÅ‡∏ö‡∏ö",
    "‡∏ö‡∏≤‡∏á‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏Å‡∏•‡πâ‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏£‡∏±‡∏Å ‡∏Å‡πá‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤‡πÉ‡∏à‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î",
    
    # ‡πÅ‡∏ô‡∏ß‡πÄ‡∏®‡∏£‡πâ‡∏≤
    "‡∏ö‡∏≤‡∏á‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏µ‡∏¢‡∏ö‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î",
    "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏õ ‡∏°‡∏±‡∏Å‡∏ó‡∏¥‡πâ‡∏á‡∏£‡∏≠‡∏¢‡∏¢‡∏¥‡πâ‡∏°‡πÅ‡∏•‡∏∞‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡πÑ‡∏ß‡πâ‡πÄ‡∏™‡∏°‡∏≠",
    "‡∏Ñ‡∏¥‡∏î‡∏ñ‡∏∂‡∏á‡∏Ñ‡∏∑‡∏≠‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏£‡πâ‡∏≤‡∏¢ ‡πÅ‡∏ï‡πà‡∏Å‡πá‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏£‡∏π‡πâ‡∏ß‡πà‡∏≤‡πÄ‡∏£‡∏≤‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏´‡∏±‡∏ß‡πÉ‡∏à",
    
    # ‡πÅ‡∏ô‡∏ß‡∏Å‡∏ß‡∏ô‡πÜ
    "‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏Ñ‡∏£‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå‡πÅ‡∏ö‡∏ö ‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÄ‡∏Å‡πà‡∏á ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ó‡∏µ‡πà‡∏ï‡∏¥",
    "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡∏Å‡πá‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Ç‡πâ‡∏≤‡∏ß‡∏™‡∏ß‡∏¢ ‡∏ñ‡πâ‡∏≤‡∏õ‡∏•‡πà‡∏≠‡∏¢‡πÑ‡∏ß‡πâ‡πÉ‡∏ô‡∏´‡∏°‡πâ‡∏≠ ‡πÄ‡∏î‡∏µ‡πã‡∏¢‡∏ß‡∏°‡∏±‡∏ô‡∏Å‡πá‡πÅ‡∏´‡πâ‡∏á‡πÅ‡∏•‡∏∞‡πÄ‡∏´‡∏°‡πá‡∏ô",
    "‡πÅ‡∏ü‡∏ô‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ ‡πÅ‡∏ï‡πà‡∏£‡∏´‡∏±‡∏™ Wi-Fi ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ!",
    
    # ‡πÅ‡∏ô‡∏ß‡∏ï‡∏•‡∏Å
    "‡πÄ‡∏Ñ‡∏¢‡∏≠‡∏Å‡∏´‡∏±‡∏Å‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡∏£‡∏±‡πâ‡∏á ‡∏à‡∏ô‡∏ö‡∏≤‡∏á‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Å‡πá‡∏≠‡∏¢‡∏≤‡∏Å‡∏Ç‡∏≠‡∏Ñ‡πà‡∏≤‡πÅ‡∏£‡∏á‡∏à‡∏≤‡∏Å‡∏´‡∏±‡∏ß‡πÉ‡∏à‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á",
    "‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡πÉ‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï ‡∏°‡∏±‡∏Å‡∏°‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ä‡∏ß‡∏ô‡∏Å‡∏¥‡∏ô ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ü‡∏ô",
    "‡∏ñ‡πâ‡∏≤‡πÄ‡∏ò‡∏≠‡πÑ‡∏°‡πà‡∏£‡∏±‡∏Å‡πÄ‡∏£‡∏≤ ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏£‡∏±‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡πÉ‡∏´‡πâ‡∏î‡∏µ‡∏Å‡∏ß‡πà‡∏≤",
    
    # ‡πÅ‡∏ô‡∏ß‡πÄ‡∏Ñ‡∏£‡∏µ‡∏¢‡∏î
    "‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ñ‡∏£‡∏µ‡∏¢‡∏î‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏´‡∏ç‡πà ‡πÅ‡∏ï‡πà‡∏Å‡πá‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏î‡πá‡∏Å‡∏•‡∏á‡∏î‡πâ‡∏ß‡∏¢",
    "‡∏ö‡∏≤‡∏á‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡πÉ‡∏´‡πâ‡πÑ‡∏Å‡∏• ‡∏Å‡πá‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏û‡πâ‡∏ô‡∏à‡∏≤‡∏Å‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÄ‡∏î‡∏¥‡∏°",
    "‡∏ñ‡πâ‡∏≤‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏°‡∏±‡∏ô‡∏á‡πà‡∏≤‡∏¢ ‡∏Ñ‡∏ô‡∏Ñ‡∏á‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç‡πÄ‡∏ï‡πá‡∏°‡πÑ‡∏õ‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß",
    
    # ‡πÅ‡∏ô‡∏ß‡πÄ‡∏´‡∏ô‡∏∑‡πà‡∏≠‡∏¢
    "‡∏ö‡∏≤‡∏á‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Å‡∏≤‡∏£‡∏´‡∏¢‡∏∏‡∏î‡∏û‡∏±‡∏Å‡∏Å‡πá‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡πà‡∏≤‡∏¢‡πÅ‡∏û‡πâ ‡πÅ‡∏ï‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏π‡πâ‡∏ï‡πà‡∏≠",
    "‡πÄ‡∏´‡∏ô‡∏∑‡πà‡∏≠‡∏¢‡πÅ‡∏Ñ‡πà‡πÑ‡∏´‡∏ô‡∏Å‡πá‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏õ‡∏ï‡πà‡∏≠ ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ó‡∏≤‡∏á‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö",
    "‡∏ñ‡πâ‡∏≤‡πÄ‡∏´‡∏ô‡∏∑‡πà‡∏≠‡∏¢‡∏Å‡πá‡∏û‡∏±‡∏Å ‡∏≠‡∏¢‡πà‡∏≤‡∏ù‡∏∑‡∏ô ‡∏à‡∏á‡πÉ‡∏´‡πâ‡∏£‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏û‡∏±‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏û‡∏•‡∏±‡∏á‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô"
]

@bot.command(name="‡∏Ñ‡∏≥‡∏Ñ‡∏°")
async def ‡∏Ñ‡∏≥‡∏Ñ‡∏°(ctx):
    # ‡∏™‡∏∏‡πà‡∏°‡∏Ñ‡∏≥‡∏Ñ‡∏°‡∏à‡∏≤‡∏Å‡∏•‡∏¥‡∏™‡∏ï‡πå
    quote = random.choice(quotes)

    # ‡∏™‡∏£‡πâ‡∏≤‡∏á Embed ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö
    embed = nextcord.Embed(title="> **‡∏Ñ‡∏≥‡∏Ñ‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì**", description=quote)
    embed.set_footer(text="‡∏Ñ‡∏≥‡∏Ñ‡∏°‡∏à‡∏≤‡∏Å‡∏ö‡∏≠‡∏ó")

    await ctx.send(embed=embed)













#]#]#]#]##]#]#]##]#]#]#]#]#]#  
        
##########################
fortunes = [
   
   
]

@bot.command(name="‡∏î‡∏π‡∏î‡∏ß‡∏á")
async def horoscope(ctx):
    fortune = random.choice(fortunes)
    
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á Embed ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏î‡∏π‡∏î‡∏ß‡∏á
    embed = nextcord.Embed(title="> üîÆ ‡∏ö‡πâ‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠ ", description=fortune, color=nextcord.Color.purple())
    embed.set_footer(text="‡∏î‡∏π‡∏î‡∏ß‡∏á‡πÇ‡∏î‡∏¢‡∏ö‡∏≠‡∏ó‡∏™‡∏∏‡∏î‡πÅ‡∏°‡πà‡∏ô")
    
    # ‡∏™‡πà‡∏á Embed ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡πÅ‡∏ä‡∏ó
    await ctx.send(embed=embed)
    
    
   

@bot.command()
async def setupplay(ctx):
    embed = nextcord.Embed(
        description="> **‡πÄ‡∏°‡∏ô‡∏π‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏£‡∏∑‡πâ‡∏≠‡∏ô**",
        color=nextcord.Color.red()
    )
    embed.set_image(url="https://cdn.discordapp.com/attachments/1373195010362572811/1373200756055998565/IMG_8146.jpg?ex=68298c5d&is=68283add&hm=669fcd9725e3a2aa442ff0fc7c2f4001e7b7e492acb05cf1c0291ddcf15c4f19&")
    embed.set_footer(text="‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏à‡πà‡∏á‡πÄ‡∏£‡∏∑‡πâ‡∏≠‡∏ô")


    view = AdminView()
    await ctx.send(embed=embed, view=view)

# ‡∏õ‡∏∏‡πà‡∏° 3 ‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤ Admin
class AdminView(View):
    def __init__(self):
        super().__init__(timeout=None)  # ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏ï‡∏•‡∏≠‡∏î

    # ‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏£‡∏∑‡πâ‡∏≠‡∏ô
    @ui.button(label="‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô", emoji="<a:1027052378706411543:1295109491313868840>", style=ButtonStyle.danger, custom_id="report_button")
    async def report_button_callback(self, button: Button, interaction: Interaction):
        await interaction.response.send_modal(ReportModal())

    # ‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏á‡πÇ‡∏ó‡∏©
    @ui.button(label="‡∏•‡∏á‡πÇ‡∏ó‡∏©", emoji="<a:2788demonshit:1210559553801035776>", style=ButtonStyle.danger, custom_id="punish_button")
    async def punish_button_callback(self, button: Button, interaction: Interaction):
        if not interaction.user.guild_permissions.administrator:
            await interaction.response.send_message("> **‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏Å‡∏±‡πâ‡∏ö**", ephemeral=True)
        else:
            await interaction.response.send_modal(PunishModal())

    # ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ï‡∏±‡∏ß
    @ui.button(label="‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏ï‡∏≤‡∏°‡∏ï‡∏±‡∏ß", emoji="<:icon_shop1:1258260296330379368>", style=ButtonStyle.secondary, custom_id="summon_button")
    async def summon_button_callback(self, button: Button, interaction: Interaction):
        await interaction.response.send_modal(SummonModal())

# Modal ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏£‡∏∑‡πâ‡∏≠‡∏ô
class ReportModal(Modal):
    def __init__(self):
        super().__init__(
            title="‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏£‡∏∑‡πâ‡∏≠‡∏ô",
            custom_id="report_modal"
        )
        self.add_item(TextInput(label="‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°", placeholder="‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î", custom_id="report_message"))
        self.add_item(TextInput(label="ID ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ", placeholder="ID ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ", custom_id="user_id"))

    async def callback(self, interaction: Interaction):
        report_message = self.children[0].value
        user_id = self.children[1].value
        channel = get(interaction.guild.text_channels, name=log_kick)  # ‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î

        embed = nextcord.Embed(title="> **‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏£‡∏∑‡πâ‡∏≠‡∏ô ‡∏à‡∏≤‡∏Å‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å**", color=nextcord.Color.red())
        embed.add_field(name="**‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°**", value=report_message, inline=False)
        embed.add_field(name="**ID ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ**", value=user_id, inline=False)

        await channel.send(embed=embed)
        await interaction.response.send_message("‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)

# Modal ‡∏•‡∏á‡πÇ‡∏ó‡∏©
class PunishModal(Modal):
    def __init__(self):
        super().__init__(
            title="‡∏•‡∏á‡πÇ‡∏ó‡∏©",
            custom_id="punish_modal"
        )
        self.add_item(TextInput(label="‡∏Ç‡πâ‡∏≠‡∏´‡∏≤", placeholder="‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡πâ‡∏≠‡∏´‡∏≤", custom_id="punish_reason"))
        self.add_item(TextInput(label="ID ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ", placeholder="ID ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ", custom_id="user_id"))

    async def callback(self, interaction: Interaction):
        reason = self.children[0].value
        user_id = self.children[1].value

        try:
            member = await interaction.guild.fetch_member(int(user_id))
            await member.timeout(datetime.timedelta(days=3), reason=reason)  # ‡∏´‡∏°‡∏î‡πÄ‡∏ß‡∏•‡∏≤ 1 ‡∏ß‡∏±‡∏ô
            await interaction.response.send_message(f"‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ {member.display_name} ‡∏ñ‡∏π‡∏Å‡∏•‡∏á‡πÇ‡∏ó‡∏©‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏•‡∏≤ 3 ‡∏ß‡∏±‡∏ô ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏•‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÑ‡∏î‡πâ‡∏ó‡∏∏‡∏Å‡∏Å‡∏£‡∏ì‡∏µ", ephemeral=True)
        except:
            await interaction.response.send_message("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ô‡∏µ‡πâ", ephemeral=True)

# Modal ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ï‡∏±‡∏ß
class SummonModal(Modal):
    def __init__(self):
        super().__init__(
            title="‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏ï‡∏≤‡∏°‡∏ï‡∏±‡∏ß",
            custom_id="summon_modal"
        )
        self.add_item(TextInput(label="‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°", placeholder="‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏ï‡∏≤‡∏°‡∏ï‡∏±‡∏ß", custom_id="summon_message"))
        self.add_item(TextInput(label="ID ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ", placeholder="ID ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ", custom_id="user_id"))

    async def callback(self, interaction: Interaction):
        summon_message = self.children[0].value
        user_id = self.children[1].value

        try:
            member = await interaction.guild.fetch_member(int(user_id))
            await member.send(f"> **‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÇ‡∏î‡∏ô‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏ï‡∏±‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡πÇ‡∏î‡∏¢‡∏î‡πà‡∏ß‡∏ô‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á : {summon_message}**")
            await interaction.response.send_message("> **‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏ï‡∏≤‡∏°‡∏ï‡∏µ‡∏ß‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß**", ephemeral=True)
        except:
            await interaction.response.send_message("> ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á DM ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ô‡∏µ‡πâ", ephemeral=True)



#############################

sweet_messages = [
"```Solmara‚òÄÔ∏è  ‡∏Å‡∏ß‡∏≤‡∏á‡∏ó‡∏≠‡∏á‡πÅ‡∏™‡∏á‡πÄ‡∏°‡∏ï‡∏ï‡∏≤  ,   ‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡∏ô‡∏≥  , ‡∏£‡∏∏‡πà‡∏á‡πÇ‡∏£‡∏à‡∏ô‡πå```",
   "```Ignivarüî•  ‡∏ô‡∏Å‡∏ü‡∏µ‡∏ô‡∏¥‡∏Å‡∏ã‡πå‡πÑ‡∏ü‡∏Å‡∏•‡πâ‡∏≤‡∏´‡∏≤‡∏ç  ,   ‡πÅ‡∏£‡∏á‡∏ö‡∏±‡∏ô‡∏î‡∏≤‡∏•‡πÉ‡∏à  ,   ‡∏´‡∏±‡∏ß‡∏£‡πâ‡∏≠‡∏ô```",
"```Aqualisüåä  ‡∏ô‡∏≤‡∏Å‡∏ß‡∏≤‡∏£‡∏µ‡∏ô‡πâ‡∏≥‡πÉ‡∏à‡πÄ‡∏¢‡πá‡∏ô  ,   ‡∏•‡∏∂‡∏Å‡∏ã‡∏∂‡πâ‡∏á  ,   ‡∏°‡∏µ‡∏™‡∏ï‡∏¥‡∏õ‡∏±‡∏ç‡∏ç‡∏≤```",
 "```Ignivarüî•  ‡∏ô‡∏Å‡∏ü‡∏µ‡∏ô‡∏¥‡∏Å‡∏ã‡πå‡πÑ‡∏ü‡∏Å‡∏•‡πâ‡∏≤‡∏´‡∏≤‡∏ç  ,   ‡πÅ‡∏£‡∏á‡∏ö‡∏±‡∏ô‡∏î‡∏≤‡∏•‡πÉ‡∏à  ,   ‡∏´‡∏±‡∏ß‡∏£‡πâ‡∏≠‡∏ô```",
"```Zephyrosüå¨  ‡∏™‡∏¥‡∏á‡∏´‡πå‡∏õ‡∏µ‡∏Å‡∏•‡∏°‡∏•‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏¥‡∏™‡∏£‡∏∞  ,   ‡πÅ‡∏õ‡∏•‡∏Å‡πÉ‡∏´‡∏°‡πà  ,   ‡∏ä‡πà‡∏≤‡∏á‡∏ù‡∏±‡∏ô```",
"```Nocturnisüåë  ‡∏á‡∏π‡πÄ‡∏á‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏∑‡∏î‡∏•‡∏∂‡∏Å‡∏•‡∏±‡∏ö  ,  ‡∏ä‡πà‡∏≤‡∏á‡∏™‡∏±‡∏á‡πÄ‡∏Å‡∏ï  ,   ‡πÄ‡∏à‡πâ‡∏≤‡πÄ‡∏•‡πà‡∏´‡πå```",
"```Zephyrosüå¨  ‡∏™‡∏¥‡∏á‡∏´‡πå‡∏õ‡∏µ‡∏Å‡∏•‡∏°‡∏•‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏¥‡∏™‡∏£‡∏∞  ,   ‡πÅ‡∏õ‡∏•‡∏Å‡πÉ‡∏´‡∏°‡πà  ,   ‡∏ä‡πà‡∏≤‡∏á‡∏ù‡∏±‡∏ô```",
"```Solmara‚òÄÔ∏è  ‡∏Å‡∏ß‡∏≤‡∏á‡∏ó‡∏≠‡∏á‡πÅ‡∏™‡∏á‡πÄ‡∏°‡∏ï‡∏ï‡∏≤  ,   ‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡∏ô‡∏≥  , ‡∏£‡∏∏‡πà‡∏á‡πÇ‡∏£‡∏à‡∏ô‡πå```"
]


@bot.event
async def on_message(message):
    
    if message.channel.id == phocute and message.attachments:
        
        for attachment in message.attachments:
            if any(attachment.filename.lower().endswith(ext) for ext in ["png", "jpg", "jpeg", "gif"]):
                # ‡∏™‡∏∏‡πà‡∏°‡∏Ñ‡∏≥‡∏´‡∏ß‡∏≤‡∏ô
                sweet_message = random.choice(sweet_messages)
                
                
                embed = nextcord.Embed(
                    title="> **‚ú® ‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏à‡∏≤‡∏Å‡∏ö‡∏≠‡∏ó**",
                    description=sweet_message,
                    color=nextcord.Color.magenta()
                )
                embed.set_footer(text="**‡πÇ‡∏õ‡∏£‡∏î‡πÅ‡∏à‡πâ‡∏á‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡∏¢‡∏®‡∏ö‡πâ‡∏≤‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á**")
                
                
                await message.reply(embed=embed)
                break  

    await bot.process_commands(message)


#######]#]#]##]#]#]#]#]#]#]#]#]#]#

@bot.event
async def on_invite_create(invite):
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏°‡∏µ‡∏ä‡πà‡∏≠‡∏á Log ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÑ‡∏ß‡πâ
    log_channel = bot.get_channel(log_invite)
    if log_channel is None:
        print("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡πà‡∏≠‡∏á log ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ log_invite ‡∏ñ‡∏π‡∏Å‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
        return

    # ‡∏™‡∏£‡πâ‡∏≤‡∏á Embed ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÄ‡∏ä‡∏¥‡∏ç
    embed = nextcord.Embed(
        title="> üì® : ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÄ‡∏ä‡∏¥‡∏ç‡πÉ‡∏´‡∏°‡πà",
        color=0x3151F7
    )
    embed.add_field(name="**üîó : ‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÄ‡∏ä‡∏¥‡∏ç**", value=invite.url, inline=False)
    embed.add_field(name="**üë§ : ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏î‡∏¢**", value=invite.inviter.mention, inline=True)
    embed.add_field(name="**‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ**", value=invite.max_uses or "‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î", inline=True)
    embed.add_field(name="**‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡πÉ‡∏ô**", value=f"{invite.max_age // 60} ‡∏ô‡∏≤‡∏ó‡∏µ" if invite.max_age else "‡πÑ‡∏°‡πà‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏", inline=True)
    embed.set_footer(text="‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÄ‡∏ä‡∏¥‡∏ç")

    # ‡∏™‡πà‡∏á Embed ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ä‡πà‡∏≠‡∏á log ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
    await log_channel.send(embed=embed)

        
##############################




#############################





############%%%###################


# ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏†‡∏π‡∏°‡∏¥‡∏†‡∏≤‡∏Ñ‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
regions = {
    "‡∏†‡∏≤‡∏Ñ‡∏Å‡∏•‡∏≤‡∏á": ["‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£", "‡∏ô‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ", "‡∏õ‡∏ó‡∏∏‡∏°‡∏ò‡∏≤‡∏ô‡∏µ", "‡∏û‡∏£‡∏∞‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏≠‡∏¢‡∏∏‡∏ò‡∏¢‡∏≤", "‡∏•‡∏û‡∏ö‡∏∏‡∏£‡∏µ", "‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏õ‡∏£‡∏≤‡∏Å‡∏≤‡∏£", "‡∏ô‡∏Ñ‡∏£‡∏õ‡∏ê‡∏°", "‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏≤‡∏Ñ‡∏£", "‡∏≠‡πà‡∏≤‡∏á‡∏ó‡∏≠‡∏á"],
    "‡∏†‡∏≤‡∏Ñ‡∏ï‡∏∞‡∏ß‡∏±‡∏ô‡∏≠‡∏≠‡∏Å‡πÄ‡∏â‡∏µ‡∏¢‡∏á‡πÄ‡∏´‡∏ô‡∏∑‡∏≠": ["‡∏Ç‡∏≠‡∏ô‡πÅ‡∏Å‡πà‡∏ô", "‡∏ô‡∏Ñ‡∏£‡∏£‡∏≤‡∏ä‡∏™‡∏µ‡∏°‡∏≤", "‡∏≠‡∏∏‡∏î‡∏£‡∏ò‡∏≤‡∏ô‡∏µ", "‡∏ö‡∏∏‡∏£‡∏µ‡∏£‡∏±‡∏°‡∏¢‡πå", "‡∏™‡∏∏‡∏£‡∏¥‡∏ô‡∏ó‡∏£‡πå", "‡∏™‡∏Å‡∏•‡∏ô‡∏Ñ‡∏£", "‡∏°‡∏´‡∏≤‡∏™‡∏≤‡∏£‡∏Ñ‡∏≤‡∏°", "‡∏®‡∏£‡∏µ‡∏™‡∏∞‡πÄ‡∏Å‡∏©", "‡∏£‡πâ‡∏≠‡∏¢‡πÄ‡∏≠‡πá‡∏î"],
    "‡∏†‡∏≤‡∏Ñ‡πÄ‡∏´‡∏ô‡∏∑‡∏≠": ["‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà", "‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡∏£‡∏≤‡∏¢", "‡∏•‡∏≥‡∏õ‡∏≤‡∏á", "‡∏•‡∏≥‡∏û‡∏π‡∏ô", "‡πÅ‡∏û‡∏£‡πà", "‡∏ô‡πà‡∏≤‡∏ô", "‡∏û‡∏∞‡πÄ‡∏¢‡∏≤", "‡πÅ‡∏°‡πà‡∏Æ‡πà‡∏≠‡∏á‡∏™‡∏≠‡∏ô", "‡∏≠‡∏∏‡∏ï‡∏£‡∏î‡∏¥‡∏ï‡∏ñ‡πå"],
    "‡∏†‡∏≤‡∏Ñ‡∏ï‡∏∞‡∏ß‡∏±‡∏ô‡∏≠‡∏≠‡∏Å": ["‡∏ä‡∏•‡∏ö‡∏∏‡∏£‡∏µ", "‡∏£‡∏∞‡∏¢‡∏≠‡∏á", "‡∏à‡∏±‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ", "‡∏ï‡∏£‡∏≤‡∏î", "‡∏õ‡∏£‡∏≤‡∏à‡∏µ‡∏ô‡∏ö‡∏∏‡∏£‡∏µ", "‡∏™‡∏£‡∏∞‡πÅ‡∏Å‡πâ‡∏ß", "‡∏â‡∏∞‡πÄ‡∏ä‡∏¥‡∏á‡πÄ‡∏ó‡∏£‡∏≤"],
    "‡∏†‡∏≤‡∏Ñ‡πÉ‡∏ï‡πâ": ["‡∏™‡∏∏‡∏£‡∏≤‡∏©‡∏é‡∏£‡πå‡∏ò‡∏≤‡∏ô‡∏µ", "‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏ò‡∏£‡∏£‡∏°‡∏£‡∏≤‡∏ä", "‡∏™‡∏á‡∏Ç‡∏•‡∏≤", "‡∏õ‡∏±‡∏ï‡∏ï‡∏≤‡∏ô‡∏µ", "‡∏¢‡∏∞‡∏•‡∏≤", "‡∏û‡∏±‡∏ó‡∏•‡∏∏‡∏á", "‡∏ô‡∏£‡∏≤‡∏ò‡∏¥‡∏ß‡∏≤‡∏™", "‡∏ï‡∏£‡∏±‡∏á", "‡∏†‡∏π‡πÄ‡∏Å‡πá‡∏ï", "‡∏Å‡∏£‡∏∞‡∏ö‡∏µ‡πà"],
    "‡∏†‡∏≤‡∏Ñ‡∏ï‡∏∞‡∏ß‡∏±‡∏ô‡∏ï‡∏Å": ["‡∏Å‡∏≤‡∏ç‡∏à‡∏ô‡∏ö‡∏∏‡∏£‡∏µ", "‡∏£‡∏≤‡∏ä‡∏ö‡∏∏‡∏£‡∏µ", "‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏∏‡∏£‡∏µ", "‡∏õ‡∏£‡∏∞‡∏à‡∏ß‡∏ö‡∏Ñ‡∏µ‡∏£‡∏µ‡∏Ç‡∏±‡∏ô‡∏ò‡πå", "‡∏ï‡∏≤‡∏Å"],
    "‡∏†‡∏≤‡∏Ñ‡πÄ‡∏´‡∏ô‡∏∑‡∏≠‡∏ö‡∏ô": ["‡∏ô‡πà‡∏≤‡∏ô", "‡∏û‡∏∞‡πÄ‡∏¢‡∏≤", "‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà", "‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡∏£‡∏≤‡∏¢", "‡πÅ‡∏°‡πà‡∏Æ‡πà‡∏≠‡∏á‡∏™‡∏≠‡∏ô"],
    "‡∏†‡∏≤‡∏Ñ‡∏Å‡∏•‡∏≤‡∏á‡∏ï‡∏≠‡∏ô‡∏•‡πà‡∏≤‡∏á": ["‡∏ô‡∏Ñ‡∏£‡∏õ‡∏ê‡∏°", "‡∏£‡∏≤‡∏ä‡∏ö‡∏∏‡∏£‡∏µ", "‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏á‡∏Ñ‡∏£‡∏≤‡∏°", "‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏∏‡∏£‡∏µ", "‡∏ô‡∏Ñ‡∏£‡∏£‡∏≤‡∏ä‡∏™‡∏µ‡∏°‡∏≤", "‡∏ö‡∏∏‡∏£‡∏µ‡∏£‡∏±‡∏°‡∏¢‡πå", "‡∏™‡∏∏‡∏£‡∏¥‡∏ô‡∏ó‡∏£‡πå", "‡∏®‡∏£‡∏µ‡∏™‡∏∞‡πÄ‡∏Å‡∏©"],
    
}

# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÅ‡∏Ñ‡πà‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
@bot.command(name="setup77")
@commands.has_permissions(administrator=True)
async def setup77(ctx):
    #‡πÄ‡∏°‡∏ô‡∏π‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏†‡∏π‡∏°‡∏¥‡∏†‡∏≤‡∏Ñ
    class RegionSelect(Select):
        def __init__(self):
            options = [SelectOption(label=f"üåç {region}", value=region) for region in regions.keys()]
            super().__init__(placeholder="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏†‡∏π‡∏°‡∏¥‡∏†‡∏≤‡∏Ñ", min_values=1, max_values=1, options=options)

        async def callback(self, interaction: Interaction):
            selected_region = self.values[0]
            provinces = regions[selected_region]
            province_view = View()
            province_view.add_item(ProvinceSelect(provinces))
            await interaction.response.send_message(
                embed=nextcord.Embed(
                    title="> ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î", 
                    description="> **‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏à‡∏≤‡∏Å‡∏†‡∏≤‡∏Ñ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å**", 
                    color=nextcord.Color.blue()
                ),
                view=province_view, ephemeral=True
            )
    
    # ‡πÄ‡∏°‡∏ô‡∏π‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î
    class ProvinceSelect(Select):
        def __init__(self, provinces):
            options = [SelectOption(label=province, value=province) for province in provinces]
            super().__init__(placeholder="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î", min_values=1, max_values=1, options=options)

        async def callback(self, interaction: Interaction):
            selected_province = self.values[0]
            role = nextcord.utils.get(interaction.guild.roles, name=selected_province)
            if role:
                await interaction.user.add_roles(role)
                await interaction.response.send_message(f"> ** ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó {role.name} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏±‡πâ‡∏ö‡∏ö‡∏ö**", ephemeral=True)
                #‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ä‡πà‡∏≠‡∏á log ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÑ‡∏ß‡πâ
                log_channel = nextcord.utils.get(interaction.guild.channels, name=log_77)
                if log_channel:
                    # ‡∏™‡∏£‡πâ‡∏≤‡∏á Embed ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö log
                    log_embed = nextcord.Embed(
                        title="> **‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó77‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î**",
                        description=f">>> ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ {interaction.user.mention} \n‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó: **{role.name}**",
                        color=nextcord.Color.green()
                    )
                    log_embed.set_thumbnail(url=interaction.user.avatar.url if interaction.user.avatar else interaction.user.default_avatar.url)
                    log_embed.set_footer(text=f"ID ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ: {interaction.user.id}")
                    
                    # ‡∏™‡πà‡∏á Embed log ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ä‡πà‡∏≠‡∏á log
                    await log_channel.send(embed=log_embed)
    
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á Embed ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏†‡∏π‡∏°‡∏¥‡∏†‡∏≤‡∏Ñ
    region_view = View()
    region_view.add_item(RegionSelect())
    
    embed = nextcord.Embed(
        title="> ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•", 
        description="> **‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏†‡∏π‡∏°‡∏¥‡∏†‡∏≤‡∏Ñ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î**", 
        color=nextcord.Color.blue()
    )
    embed.set_image(url="https://cdn.discordapp.com/attachments/1297382088009580555/1297549805597364264/IMG_0660.jpg?ex=671654ec&is=6715036c&hm=965b216efe1184456be2c751a00e8e36c934422b84201027f9fb10e288aa7dbf&")
    
    
    await ctx.send(embed=embed, view=region_view)
    
##[#[##[##[[#[#[#[##[#[#]]]]]]]]]]



class Send(nextcord.ui.View):
    def __init__(self, user: str, user2: str):
        self.user = user
        self.user2 = user2
        super().__init__(timeout=None)
    
    @nextcord.ui.button(label='‡∏™‡πà‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô', style=nextcord.ButtonStyle.primary, custom_id='senddm')
    async def senddm(self, button, interaction: nextcord.Interaction):
        button.disabled = True
        button.label = '‡∏™‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß'
        member = interaction.guild.get_member(int(self.user))
        data = json.load(open(f'./database/data_profile/{member}.json', 'r', encoding='utf-8'))
        age = str(data['age'])
        sex = str(data['sex'])
        province = str(data['province'])
        unique = str(data['unique'])
        member2 = interaction.guild.get_member(int(self.user2))
        embed = nextcord.Embed(
            color=0x42f5e6
        )
        embed.add_field(name='‡∏≠‡∏≤‡∏¢‡∏∏', value=f'{age}', inline=True)
        embed.add_field(name='‡πÄ‡∏û‡∏®', value=f'{sex}', inline=True)
        embed.add_field(name='‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î', value=f'{province}', inline=True)
        embed.add_field(name='‡∏ô‡∏¥‡∏™‡∏±‡∏¢', value=f'{unique}', inline=False)
        embed.set_thumbnail(member.avatar)
        thailand_timezone = pytz.timezone('Asia/Bangkok')
        success_time = datetime.datetime.now(thailand_timezone)
        embed.timestamp = success_time
        await member2.send(content=f'> ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ {member.mention} ‡πÑ‡∏î‡πâ‡∏™‡∏∞‡∏Å‡∏¥‡∏î‡∏Ñ‡∏∏‡∏ì!', embed=embed)
        return await interaction.response.edit_message(view=self)
    
    @nextcord.ui.button(label='‡∏™‡∏∏‡πà‡∏°‡πÉ‡∏´‡∏°‡πà', style=nextcord.ButtonStyle.red, custom_id='rerandom')
    async def rerandom(self, button, interaction: nextcord.Interaction):
        try:
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
        except FileNotFoundError:
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as newuser:
                action = {
                    'userid': f'{interaction.user.id}',
                    'sex': '',
                    'age': '',
                    'province': '',
                    'unique': ''
                }
                json.dump(action, newuser, indent=4, ensure_ascii=False)

            embed = nextcord.Embed(description='> ‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•', color=0xff0000)
            return await interaction.edit.send_message(embed=embed, view=None)

        data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
        sex = str(data['sex'])
        age = str(data['age'])
        province = str(data['province'])
        unique = str(data['unique'])
        if sex == '' or age == '' or province == '' or unique == '':
            embed = nextcord.Embed(description='> ‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô', color=0xff0000)
            return await interaction.response.edit_message(embed=embed, view=None)
        else:
            while True:
                pathDatabase = './database/data_profile'
                db = os.listdir(pathDatabase)
                result = random.choice(db)
                if 'search' in result:
                    continue
                matchAuth = json.load(open(f'{pathDatabase}/{result}', 'r', encoding='utf-8'))
                userid = int(matchAuth['userid'])
                sex2 = str(matchAuth['sex'])
                age2 = str(matchAuth['age'])
                province2 = str(matchAuth['province'])
                unique2 = str(matchAuth['unique'])
                if sex2 == '' or age2 == '' or province2 == '' or unique2 == '':
                    continue
                else:
                    if str(matchAuth['userid']) == str(interaction.user.id):
                        continue
                    else:
                        member = interaction.guild.get_member(int(matchAuth['userid']))
                        embed = nextcord.Embed(color=0x00f2ff)
                        embed.add_field(name='‡∏≠‡∏≤‡∏¢‡∏∏', value=f'{age2} ‡∏õ‡∏µ', inline=True)
                        embed.add_field(name='‡πÄ‡∏û‡∏®', value=f'{sex2}', inline=True)
                        embed.add_field(name='‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î', value=f'{province2}', inline=True)
                        embed.add_field(name='‡∏ô‡∏¥‡∏™‡∏±‡∏¢', value=f'{unique2}', inline=False)
                        embed.set_thumbnail(member.avatar)
                        return await interaction.response.edit_message(content=f'‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏ö‡∏Ñ‡∏π‡πà‡∏Å‡∏±‡∏ö {member.mention} ‡πÉ‡∏ä‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?', embed=embed, view=Send(str(interaction.user.id), str(matchAuth['userid'])))

class Send2(nextcord.ui.View):
    def __init__(self, user: str, user2: str):
        self.user = user
        self.user2 = user2
        super().__init__(timeout=None)
    
    @nextcord.ui.button(label='‡∏™‡πà‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô', style=nextcord.ButtonStyle.primary, custom_id='senddmbobo')
    async def senddmbobo(self, button, interaction: nextcord.Interaction):
        button.disabled = True
        button.label = '‡∏™‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß'
        member = interaction.guild.get_member(int(self.user))
        data = json.load(open(f'./database/data_profile/{member}.json', 'r', encoding='utf-8'))
        age = str(data['age'])
        sex = str(data['sex'])
        province = str(data['province'])
        unique = str(data['unique'])
        member2 = interaction.guild.get_member(int(self.user2))
        embed = nextcord.Embed(
            color=0x42f5e6
        )
        embed.add_field(name='‡∏≠‡∏≤‡∏¢‡∏∏', value=f'{age}', inline=True)
        embed.add_field(name='‡πÄ‡∏û‡∏®', value=f'{sex}', inline=True)
        embed.add_field(name='‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î', value=f'{province}', inline=True)
        embed.add_field(name='‡∏ô‡∏¥‡∏™‡∏±‡∏¢', value=f'{unique}', inline=False)
        embed.set_thumbnail(member.avatar)
        thailand_timezone = pytz.timezone('Asia/Bangkok')
        success_time = datetime.datetime.now(thailand_timezone)
        embed.timestamp = success_time
        await member2.send(content=f'‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ {member.mention} ‡πÑ‡∏î‡πâ‡∏™‡∏∞‡∏Å‡∏¥‡∏î‡∏Ñ‡∏∏‡∏ì!', embed=embed)
        return await interaction.response.edit_message(view=self)
    
    @nextcord.ui.button(label='‡∏™‡∏∏‡πà‡∏°‡πÉ‡∏´‡∏°‡πà', style=nextcord.ButtonStyle.red, custom_id='rerandombobo')
    async def rerandombobo(self, button, interaction: nextcord.Interaction):
        data2 = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
        sex = str(data2['sex'])
        age = str(data2['age'])
        age2 = str(data2['age2'])
        province = str(data2['province'])
        if sex == '' or age == '' or age2 == '' or province == '':
            while True:
                pathDatabase = './database/data_profile'
                db = os.listdir(pathDatabase)
                result = random.choice(db)
                if 'search' in result:
                    continue
                print(f'{pathDatabase}/{result}')
                optz = json.load(open(f'{pathDatabase}/{result}', 'r', encoding='utf-8'))
                userid = int(optz['userid'])
                sex2 = str(optz['sex'])
                age2 = str(optz['age'])
                province2 = str(optz['province'])
                unique = str(optz['unique'])
                if sex2 == '' or age2 == '' or province2 == '' or unique == '':
                    continue
                else:
                    if str(optz['userid']) == str(interaction.user.id):
                        continue
                    else:
                        member = interaction.guild.get_member(int(optz['userid']))
                        embed = nextcord.Embed(color=0x00f2ff)
                        embed.add_field(name='‡∏≠‡∏≤‡∏¢‡∏∏', value=f'{age2} ‡∏õ‡∏µ', inline=True)
                        embed.add_field(name='‡πÄ‡∏û‡∏®', value=f'{sex2}', inline=True)
                        embed.add_field(name='‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î', value=f'{province2}', inline=True)
                        embed.add_field(name='‡∏ô‡∏¥‡∏™‡∏±‡∏¢', value=f'{unique}', inline=False)
                        embed.set_thumbnail(member.avatar)
                        return await interaction.response.edit_message(content=f'‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏ö‡∏Ñ‡∏π‡πà‡∏Å‡∏±‡∏ö {member.mention} ‡πÉ‡∏ä‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?', embed=embed, view=Send(str(interaction.user.id), str(optz['userid'])))
        else:
            fetch_error = 0
            while True:
                if fetch_error == 20:
                    fetch_error = 0
                    embed = nextcord.Embed(description='> ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ï‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á‡∏î‡∏±‡∏á‡∏Å‡∏•‡πà‡∏≤‡∏ß!', color=0xff0000)
                    return await interaction.response.edit_message(embed=embed, view=None)
                pathDatabase = './database/data_profile'
                db = os.listdir(pathDatabase)
                result = random.choice(db)
                if 'search' in result:
                    continue
                print(f'{pathDatabase}/{result}')
                optz = json.load(open(f'{pathDatabase}/{result}', 'r', encoding='utf-8'))
                userid = int(optz['userid'])
                sex2 = str(optz['sex'])
                age12 = str(optz['age'])
                province2 = str(optz['province'])
                unique = str(optz['unique'])
                if sex2 == '' or age == '' or province2 == '' or unique == '':
                    continue
                else:
                    if str(optz['userid']) == str(interaction.user.id):
                        continue
                    else:
                        if int(str(age12)) >= int(str(age)) and int(str(age12)) <= int(str(age2)):
                            if str(sex) == '‡∏ä‡∏≤‡∏¢':
                                if str(sex2) == '‡∏ä‡∏≤‡∏¢':
                                    if str(province2) == str(province):
                                        member = interaction.guild.get_member(int(optz['userid']))
                                        embed = nextcord.Embed(color=0x00f2ff)
                                        embed.add_field(name='‡∏≠‡∏≤‡∏¢‡∏∏', value=f'{age12} ‡∏õ‡∏µ', inline=True)
                                        embed.add_field(name='‡πÄ‡∏û‡∏®', value=f'{sex2}', inline=True)
                                        embed.add_field(name='‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î', value=f'{province2}', inline=True)
                                        embed.add_field(name='‡∏ô‡∏¥‡∏™‡∏±‡∏¢', value=f'{unique}', inline=False)
                                        embed.set_thumbnail(member.avatar)
                                        return await interaction.response.edit_message(content=f'‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏ö‡∏Ñ‡∏π‡πà‡∏Å‡∏±‡∏ö {member.mention} ‡πÉ‡∏ä‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?', embed=embed, view=Send2(str(interaction.user.id), str(optz['userid'])))
                                    else:
                                        fetch_error += 1
                                        continue
                                else:
                                    fetch_error += 1
                                    continue
                            if str(sex) == '‡∏´‡∏ç‡∏¥‡∏á':
                                if str(sex2) == '‡∏´‡∏ç‡∏¥‡∏á':
                                    if str(province2) == str(province):
                                        member = interaction.guild.get_member(int(optz['userid']))
                                        embed = nextcord.Embed(color=0x00f2ff)
                                        embed.add_field(name='‡∏≠‡∏≤‡∏¢‡∏∏', value=f'{age12} ‡∏õ‡∏µ', inline=True)
                                        embed.add_field(name='‡πÄ‡∏û‡∏®', value=f'{sex2}', inline=True)
                                        embed.add_field(name='‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î', value=f'{province2}', inline=True)
                                        embed.add_field(name='‡∏ô‡∏¥‡∏™‡∏±‡∏¢', value=f'{unique}', inline=False)
                                        embed.set_thumbnail(member.avatar)
                                        return await interaction.response.edit_message(content=f'‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏ö‡∏Ñ‡∏π‡πà‡∏Å‡∏±‡∏ö {member.mention} ‡πÉ‡∏ä‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?', embed=embed, view=Send2(str(interaction.user.id), str(optz['userid'])))
                                    else:
                                        fetch_error += 1
                                        continue
                        else:
                            fetch_error += 1
                            continue


class SetAge(nextcord.ui.Modal):
    def __init__(self):
        super().__init__('‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏≠‡∏≤‡∏¢‡∏∏')
        self.age = nextcord.ui.TextInput(label='‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏≠‡∏≤‡∏¢‡∏∏‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì', max_length=2, required=True)
        self.add_item(self.age)
    
    async def callback(self, interaction: nextcord.Interaction):
        data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
        userid = str(data['userid'])
        sex = str(data['sex'])
        age = str(data['age'])
        province = str(data['province'])
        unique = str(data['unique'])

        try:
            ageInput = int(self.age.value)
        except ValueError:
            embed = nextcord.Embed(description='> ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏≠‡∏≤‡∏¢‡∏∏‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á', color=0xff0000)
            return await interaction.response.send_message(embed=embed, ephemeral=True)
        
        if int(ageInput) > 50:
            embed = nextcord.Embed(description='> ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏≠‡∏≤‡∏¢‡∏∏‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á', color=0xff0000)
            return await interaction.response.send_message(embed=embed, ephemeral=True)

        with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as update:
            action_new = {
                'userid': str(userid),
                'sex': str(sex),
                'age': str(self.age.value),
                'province': str(province),
                'unique': str(unique)
            }
            json.dump(action_new, update, indent=4, ensure_ascii=False)
        
        embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢',color=0x4efc03)
        return await interaction.response.send_message(embed=embed, ephemeral=True, delete_after=1)

class SetAge2(nextcord.ui.Modal):
    def __init__(self):
        super().__init__('‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏≠‡∏≤‡∏¢‡∏∏')
        self.age = nextcord.ui.TextInput(label='‡∏≠‡∏≤‡∏¢‡∏∏‡∏ï‡πà‡∏≥‡∏™‡∏∏‡∏î', max_length=2, required=True)
        self.add_item(self.age)
        self.age2 = nextcord.ui.TextInput(label='‡∏≠‡∏≤‡∏¢‡∏∏‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î', max_length=2, required=True)
        self.add_item(self.age2)
    
    async def callback(self, interaction: nextcord.Interaction):
        data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
        userid = str(data['userid'])
        sex = str(data['sex'])
        age = str(data['age'])
        province = str(data['province'])

        try:
            ageInput = int(self.age.value)
            ageInput2 = int(self.age2.value)
        except ValueError:
            embed = nextcord.Embed(description='> ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏≠‡∏≤‡∏¢‡∏∏‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á', color=0xff0000)
            return await interaction.response.send_message(embed=embed, ephemeral=True)
        
        if int(ageInput) < 1 or int(ageInput2) > 50:
            embed = nextcord.Embed(description='> ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏≠‡∏≤‡∏¢‡∏∏‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á', color=0xff0000)
            return await interaction.response.send_message(embed=embed, ephemeral=True)

        with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as update:
            action_new = {
                'userid': str(userid),
                'sex': str(sex),
                'age': str(self.age.value),
                'age2': str(self.age2.value),
                'province': str(province)
            }
            json.dump(action_new, update, indent=4, ensure_ascii=False)
        
        embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢',color=0x4efc03)
        return await interaction.response.send_message(embed=embed, ephemeral=True, delete_after=1)

class SetUnique(nextcord.ui.Modal):
    def __init__(self):
        super().__init__('‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ô‡∏¥‡∏™‡∏±‡∏¢')
        self.unique = nextcord.ui.TextInput(label='‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏ô‡∏¥‡∏™‡∏±‡∏¢‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì', required=True, style=nextcord.TextInputStyle.paragraph)
        self.add_item(self.unique)
    
    async def callback(self, interaction: nextcord.Interaction):
        data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
        userid = str(data['userid'])
        sex = str(data['sex'])
        age = str(data['age'])
        province = str(data['province'])
        unique = str(data['unique'])
        
        with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as update:
            action_new = {
                'userid': str(userid),
                'sex': str(sex),
                'age': str(age),
                'province': str(province),
                'unique': str(self.unique.value)
            }
            json.dump(action_new, update, indent=4, ensure_ascii=False)
        
        embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢',color=0x4efc03)
        return await interaction.response.send_message(embed=embed, ephemeral=True, delete_after=1)


class SelectSexAuth(nextcord.ui.Select):
    def __init__(self):
        options = [
            nextcord.SelectOption(
                label='‡∏ä‡∏≤‡∏¢',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‡πÄ‡∏û‡∏®‡∏ä‡∏≤‡∏¢',
                value='1'
            ),
            nextcord.SelectOption(
                label='‡∏´‡∏ç‡∏¥‡∏á',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‡πÄ‡∏û‡∏®‡∏´‡∏ç‡∏¥‡∏á',
                value='2'
            )
        ]
        super().__init__(placeholder='‡πÇ‡∏õ‡∏£‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏û‡∏®‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì!', options=options, custom_id='selected-sex')
    async def callback(self, interaction: nextcord.Interaction):
        data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
        userid = str(data['userid'])
        sex = str(data['sex'])
        age = str(data['age'])
        province = str(data['province'])
        unique = str(data['unique'])
        
        if self.values[0] == '1':
            sex = '‡∏ä‡∏≤‡∏¢'
        if self.values[0] == '2':
            sex = '‡∏´‡∏ç‡∏¥‡∏á'
        
        with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as update:
            action_new = {
                'userid': str(userid),
                'sex': str(sex),
                'age': str(age),
                'province': str(province),
                'unique': str(unique)
            }
            json.dump(action_new, update, indent=4, ensure_ascii=False)
        
        embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢',color=0x4efc03)
        return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)

class SelectSexAuth2(nextcord.ui.Select):
    def __init__(self):
        options = [
            nextcord.SelectOption(
                label='‡∏ä‡∏≤‡∏¢',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‡πÄ‡∏û‡∏®‡∏ä‡∏≤‡∏¢',
                value='1'
            ),
            nextcord.SelectOption(
                label='‡∏´‡∏ç‡∏¥‡∏á',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‡πÄ‡∏û‡∏®‡∏´‡∏ç‡∏¥‡∏á',
                value='2'
            )
        ]
        super().__init__(placeholder='‡πÇ‡∏õ‡∏£‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏û‡∏®‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì!', options=options, custom_id='selected-sex')
    async def callback(self, interaction: nextcord.Interaction):
        data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
        userid = str(data['userid'])
        sex = str(data['sex'])
        age = str(data['age'])
        age2 = str(data['age2'])
        province = str(data['province'])
        
        if self.values[0] == '1':
            sex = '‡∏ä‡∏≤‡∏¢'
        if self.values[0] == '2':
            sex = '‡∏´‡∏ç‡∏¥‡∏á'
        
        with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as update:
            action_new = {
                'userid': str(userid),
                'sex': str(sex),
                'age': str(age),
                'age2': str(age2),
                'province': str(province)
            }
            json.dump(action_new, update, indent=4, ensure_ascii=False)
        
        embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢',color=0x4efc03)
        return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)



class North(nextcord.ui.Select):
    def __init__(self):
        options = [
            nextcord.SelectOption(
                label='‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà',
                emoji='üåç',
                value='1',
            ),
            nextcord.SelectOption(
                label='‡∏•‡∏≥‡∏û‡∏π‡∏ô',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏•‡∏≥‡∏û‡∏π‡∏ô',
                emoji='üåç',
                value='2',
            ),
            nextcord.SelectOption(
                label='‡∏•‡∏≥‡∏õ‡∏≤‡∏á',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏•‡∏≥‡∏õ‡∏≤‡∏á',
                emoji='üåç',
                value='3',
            ),
            nextcord.SelectOption(
                label='‡∏≠‡∏∏‡∏ï‡∏£‡∏î‡∏¥‡∏ï‡∏ñ‡πå',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏≠‡∏∏‡∏ï‡∏£‡∏î‡∏¥‡∏ï‡∏ñ‡πå',
                emoji='üåç',
                value='4',
            ),
            nextcord.SelectOption(
                label='‡πÅ‡∏û‡∏£‡πà',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡πÅ‡∏û‡∏£‡πà',
                emoji='üåç',
                value='5',
            ),
            nextcord.SelectOption(
                label='‡∏ô‡πà‡∏≤‡∏ô',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏ô‡πà‡∏≤‡∏ô',
                emoji='üåç',
                value='6',
            ),
            nextcord.SelectOption(
                label='‡∏û‡∏∞‡πÄ‡∏¢‡∏≤',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏û‡∏∞‡πÄ‡∏¢‡∏≤',
                emoji='üåç',
                value='7',
            ),
            nextcord.SelectOption(
                label='‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡∏£‡∏≤‡∏¢',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡∏£‡∏≤‡∏¢',
                emoji='üåç',
                value='8',
            ),
            nextcord.SelectOption(
                label='‡πÅ‡∏°‡πà‡∏Æ‡πà‡∏≠‡∏á‡∏™‡∏≠‡∏ô',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡πÅ‡∏°‡πà‡∏Æ‡πà‡∏≠‡∏á‡∏™‡∏≠‡∏ô',
                emoji='üåç',
                value='9',
            ),
        ]
        super().__init__(placeholder='‡πÇ‡∏õ‡∏£‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏π‡πà', options=options, custom_id='selected-contryzone')
        # embed = nextcord.Embed(color=0x00f7ff)
    
    async def callback(self, interaction: nextcord.Interaction):
        zonelist = ['‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà','‡∏ô‡∏Ñ‡∏£‡∏£‡∏≤‡∏ä‡∏™‡∏µ‡∏°‡∏≤','‡∏Å‡∏≤‡∏ç‡∏à‡∏ô‡∏ö‡∏∏‡∏£‡∏µ','‡∏ï‡∏≤‡∏Å','‡∏≠‡∏∏‡∏ö‡∏•‡∏£‡∏≤‡∏ä‡∏ò‡∏≤‡∏ô‡∏µ','‡∏™‡∏∏‡∏£‡∏≤‡∏©‡∏é‡∏£‡πå‡∏ò‡∏≤‡∏ô‡∏µ','‡∏ä‡∏±‡∏¢‡∏†‡∏π‡∏°‡∏¥','‡πÅ‡∏°‡πà‡∏Æ‡πà‡∏≠‡∏á‡∏™‡∏≠‡∏ô',
        '‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏π‡∏£‡∏ì‡πå','‡∏•‡∏≥‡∏õ‡∏≤‡∏á','‡∏≠‡∏∏‡∏î‡∏£‡∏ò‡∏≤‡∏ô‡∏µ','‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡∏£‡∏≤‡∏¢','‡∏ô‡πà‡∏≤‡∏ô','‡πÄ‡∏•‡∏¢','‡∏Ç‡∏≠‡∏ô‡πÅ‡∏Å‡πà‡∏ô','‡∏û‡∏¥‡∏©‡∏ì‡∏∏‡πÇ‡∏•‡∏Å','‡∏ö‡∏∏‡∏£‡∏µ‡∏£‡∏±‡∏°‡∏¢‡πå','‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏ò‡∏£‡∏£‡∏°‡∏£‡∏≤‡∏ä',
        '‡∏™‡∏Å‡∏•‡∏ô‡∏Ñ‡∏£','‡∏ô‡∏Ñ‡∏£‡∏™‡∏ß‡∏£‡∏£‡∏Ñ‡πå','‡∏®‡∏£‡∏µ‡∏™‡∏∞‡πÄ‡∏Å‡∏©','‡∏Å‡∏≥‡πÅ‡∏û‡∏á‡πÄ‡∏û‡∏ä‡∏£','‡∏£‡πâ‡∏≠‡∏¢‡πÄ‡∏≠‡πá‡∏î','‡∏™‡∏∏‡∏£‡∏¥‡∏ô‡∏ó‡∏£‡πå','‡∏≠‡∏∏‡∏ï‡∏£‡∏î‡∏¥‡∏ï‡∏ñ‡πå','‡∏™‡∏á‡∏Ç‡∏•‡∏≤','‡∏™‡∏£‡∏∞‡πÅ‡∏Å‡πâ‡∏ß',
        '‡∏Å‡∏≤‡∏¨‡∏™‡∏¥‡∏ô‡∏ò‡∏∏‡πå','‡∏≠‡∏∏‡∏ó‡∏±‡∏¢‡∏ò‡∏≤‡∏ô‡∏µ','‡∏™‡∏∏‡πÇ‡∏Ç‡∏ó‡∏±‡∏¢','‡πÅ‡∏û‡∏£‡πà','‡∏õ‡∏£‡∏∞‡∏à‡∏ß‡∏ö‡∏Ñ‡∏µ‡∏£‡∏µ‡∏Ç‡∏±‡∏ô‡∏ò‡πå','‡∏à‡∏±‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ','‡∏û‡∏∞‡πÄ‡∏¢‡∏≤','‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏∏‡∏£‡∏µ','‡∏•‡∏û‡∏ö‡∏∏‡∏£‡∏µ','‡∏ä‡∏∏‡∏°‡∏û‡∏£',
        '‡∏ô‡∏Ñ‡∏£‡∏û‡∏ô‡∏°','‡∏™‡∏∏‡∏û‡∏£‡∏£‡∏ì‡∏ö‡∏∏‡∏£‡∏µ','‡∏â‡∏∞‡πÄ‡∏ä‡∏¥‡∏á‡πÄ‡∏ó‡∏£‡∏≤','‡∏°‡∏´‡∏≤‡∏™‡∏≤‡∏£‡∏Ñ‡∏≤‡∏°','‡∏£‡∏≤‡∏ä‡∏ö‡∏∏‡∏£‡∏µ','‡∏ï‡∏£‡∏±‡∏á','‡∏õ‡∏£‡∏≤‡∏à‡∏µ‡∏ô‡∏ö‡∏∏‡∏£‡∏µ','‡∏Å‡∏£‡∏∞‡∏ö‡∏µ‡πà','‡∏û‡∏¥‡∏à‡∏¥‡∏ï‡∏£',
        '‡∏¢‡∏∞‡∏•‡∏≤','‡∏•‡∏≥‡∏û‡∏π‡∏ô','‡∏ô‡∏£‡∏≤‡∏ò‡∏¥‡∏ß‡∏≤‡∏™','‡∏ä‡∏•‡∏ö‡∏∏‡∏£‡∏µ','‡∏°‡∏∏‡∏Å‡∏î‡∏≤‡∏´‡∏≤‡∏£','‡∏ö‡∏∂‡∏á‡∏Å‡∏≤‡∏¨','‡∏û‡∏±‡∏á‡∏á‡∏≤','‡∏¢‡πÇ‡∏™‡∏ò‡∏£','‡∏´‡∏ô‡∏≠‡∏á‡∏ö‡∏±‡∏ß‡∏•‡∏≥‡∏†‡∏π','‡∏™‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏µ',
        '‡∏£‡∏∞‡∏¢‡∏≠‡∏á','‡∏û‡∏±‡∏ó‡∏•‡∏∏‡∏á','‡∏£‡∏∞‡∏ô‡∏≠‡∏á','‡∏≠‡∏≥‡∏ô‡∏≤‡∏à‡πÄ‡∏à‡∏£‡∏¥‡∏ç','‡∏´‡∏ô‡∏≠‡∏á‡∏Ñ‡∏≤‡∏¢','‡∏ï‡∏£‡∏≤‡∏î','‡∏û‡∏£‡∏∞‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏≠‡∏¢‡∏∏‡∏ò‡∏¢‡∏≤','‡∏™‡∏ï‡∏π‡∏•','‡∏ä‡∏±‡∏¢‡∏ô‡∏≤‡∏ó','‡∏ô‡∏Ñ‡∏£‡∏õ‡∏ê‡∏°',
        '‡∏ô‡∏Ñ‡∏£‡∏ô‡∏≤‡∏¢‡∏Å','‡∏õ‡∏±‡∏ï‡∏ï‡∏≤‡∏ô‡∏µ','‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£','‡∏õ‡∏ó‡∏∏‡∏°‡∏ò‡∏≤‡∏ô‡∏µ','‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏õ‡∏£‡∏≤‡∏Å‡∏≤‡∏£','‡∏≠‡πà‡∏≤‡∏á‡∏ó‡∏≠‡∏á','‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏≤‡∏Ñ‡∏£','‡∏™‡∏¥‡∏á‡∏´‡πå‡∏ö‡∏∏‡∏£‡∏µ','‡∏ô‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ',
        '‡∏†‡∏π‡πÄ‡∏Å‡πá‡∏ï','‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏á‡∏Ñ‡∏£‡∏≤‡∏°']
        if self.values[0] == '1':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '2':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏•‡∏≥‡∏û‡∏π‡∏ô',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '3':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏•‡∏≥‡∏õ‡∏≤‡∏á',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '4':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏≠‡∏∏‡∏ï‡∏£‡∏î‡∏¥‡∏ï‡∏ñ‡πå',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '5':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡πÅ‡∏û‡∏£‡πà',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '6':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏ô‡πà‡∏≤‡∏ô',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '7':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏û‡∏∞‡πÄ‡∏¢‡∏≤',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '8':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡∏£‡∏≤‡∏¢',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '9':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡πÅ‡∏°‡πà‡∏Æ‡πà‡∏≠‡∏á‡∏™‡∏≠‡∏ô',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)

class North2(nextcord.ui.Select):
    def __init__(self):
        options = [
            nextcord.SelectOption(
                label='‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà',
                emoji='üåç',
                value='1',
            ),
            nextcord.SelectOption(
                label='‡∏•‡∏≥‡∏û‡∏π‡∏ô',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏•‡∏≥‡∏û‡∏π‡∏ô',
                emoji='üåç',
                value='2',
            ),
            nextcord.SelectOption(
                label='‡∏•‡∏≥‡∏õ‡∏≤‡∏á',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏•‡∏≥‡∏õ‡∏≤‡∏á',
                emoji='üåç',
                value='3',
            ),
            nextcord.SelectOption(
                label='‡∏≠‡∏∏‡∏ï‡∏£‡∏î‡∏¥‡∏ï‡∏ñ‡πå',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏≠‡∏∏‡∏ï‡∏£‡∏î‡∏¥‡∏ï‡∏ñ‡πå',
                emoji='üåç',
                value='4',
            ),
            nextcord.SelectOption(
                label='‡πÅ‡∏û‡∏£‡πà',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡πÅ‡∏û‡∏£‡πà',
                emoji='üåç',
                value='5',
            ),
            nextcord.SelectOption(
                label='‡∏ô‡πà‡∏≤‡∏ô',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏ô‡πà‡∏≤‡∏ô',
                emoji='üåç',
                value='6',
            ),
            nextcord.SelectOption(
                label='‡∏û‡∏∞‡πÄ‡∏¢‡∏≤',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏û‡∏∞‡πÄ‡∏¢‡∏≤',
                emoji='üåç',
                value='7',
            ),
            nextcord.SelectOption(
                label='‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡∏£‡∏≤‡∏¢',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡∏£‡∏≤‡∏¢',
                emoji='üåç',
                value='8',
            ),
            nextcord.SelectOption(
                label='‡πÅ‡∏°‡πà‡∏Æ‡πà‡∏≠‡∏á‡∏™‡∏≠‡∏ô',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡πÅ‡∏°‡πà‡∏Æ‡πà‡∏≠‡∏á‡∏™‡∏≠‡∏ô',
                emoji='üåç',
                value='9',
            ),
        ]
        super().__init__(placeholder='‡πÇ‡∏õ‡∏£‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏π‡πà', options=options, custom_id='selected-contryzone')
        # embed = nextcord.Embed(color=0x00f7ff)
    
    async def callback(self, interaction: nextcord.Interaction):
        zonelist = ['‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà','‡∏ô‡∏Ñ‡∏£‡∏£‡∏≤‡∏ä‡∏™‡∏µ‡∏°‡∏≤','‡∏Å‡∏≤‡∏ç‡∏à‡∏ô‡∏ö‡∏∏‡∏£‡∏µ','‡∏ï‡∏≤‡∏Å','‡∏≠‡∏∏‡∏ö‡∏•‡∏£‡∏≤‡∏ä‡∏ò‡∏≤‡∏ô‡∏µ','‡∏™‡∏∏‡∏£‡∏≤‡∏©‡∏é‡∏£‡πå‡∏ò‡∏≤‡∏ô‡∏µ','‡∏ä‡∏±‡∏¢‡∏†‡∏π‡∏°‡∏¥','‡πÅ‡∏°‡πà‡∏Æ‡πà‡∏≠‡∏á‡∏™‡∏≠‡∏ô',
        '‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏π‡∏£‡∏ì‡πå','‡∏•‡∏≥‡∏õ‡∏≤‡∏á','‡∏≠‡∏∏‡∏î‡∏£‡∏ò‡∏≤‡∏ô‡∏µ','‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡∏£‡∏≤‡∏¢','‡∏ô‡πà‡∏≤‡∏ô','‡πÄ‡∏•‡∏¢','‡∏Ç‡∏≠‡∏ô‡πÅ‡∏Å‡πà‡∏ô','‡∏û‡∏¥‡∏©‡∏ì‡∏∏‡πÇ‡∏•‡∏Å','‡∏ö‡∏∏‡∏£‡∏µ‡∏£‡∏±‡∏°‡∏¢‡πå','‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏ò‡∏£‡∏£‡∏°‡∏£‡∏≤‡∏ä',
        '‡∏™‡∏Å‡∏•‡∏ô‡∏Ñ‡∏£','‡∏ô‡∏Ñ‡∏£‡∏™‡∏ß‡∏£‡∏£‡∏Ñ‡πå','‡∏®‡∏£‡∏µ‡∏™‡∏∞‡πÄ‡∏Å‡∏©','‡∏Å‡∏≥‡πÅ‡∏û‡∏á‡πÄ‡∏û‡∏ä‡∏£','‡∏£‡πâ‡∏≠‡∏¢‡πÄ‡∏≠‡πá‡∏î','‡∏™‡∏∏‡∏£‡∏¥‡∏ô‡∏ó‡∏£‡πå','‡∏≠‡∏∏‡∏ï‡∏£‡∏î‡∏¥‡∏ï‡∏ñ‡πå','‡∏™‡∏á‡∏Ç‡∏•‡∏≤','‡∏™‡∏£‡∏∞‡πÅ‡∏Å‡πâ‡∏ß',
        '‡∏Å‡∏≤‡∏¨‡∏™‡∏¥‡∏ô‡∏ò‡∏∏‡πå','‡∏≠‡∏∏‡∏ó‡∏±‡∏¢‡∏ò‡∏≤‡∏ô‡∏µ','‡∏™‡∏∏‡πÇ‡∏Ç‡∏ó‡∏±‡∏¢','‡πÅ‡∏û‡∏£‡πà','‡∏õ‡∏£‡∏∞‡∏à‡∏ß‡∏ö‡∏Ñ‡∏µ‡∏£‡∏µ‡∏Ç‡∏±‡∏ô‡∏ò‡πå','‡∏à‡∏±‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ','‡∏û‡∏∞‡πÄ‡∏¢‡∏≤','‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏∏‡∏£‡∏µ','‡∏•‡∏û‡∏ö‡∏∏‡∏£‡∏µ','‡∏ä‡∏∏‡∏°‡∏û‡∏£',
        '‡∏ô‡∏Ñ‡∏£‡∏û‡∏ô‡∏°','‡∏™‡∏∏‡∏û‡∏£‡∏£‡∏ì‡∏ö‡∏∏‡∏£‡∏µ','‡∏â‡∏∞‡πÄ‡∏ä‡∏¥‡∏á‡πÄ‡∏ó‡∏£‡∏≤','‡∏°‡∏´‡∏≤‡∏™‡∏≤‡∏£‡∏Ñ‡∏≤‡∏°','‡∏£‡∏≤‡∏ä‡∏ö‡∏∏‡∏£‡∏µ','‡∏ï‡∏£‡∏±‡∏á','‡∏õ‡∏£‡∏≤‡∏à‡∏µ‡∏ô‡∏ö‡∏∏‡∏£‡∏µ','‡∏Å‡∏£‡∏∞‡∏ö‡∏µ‡πà','‡∏û‡∏¥‡∏à‡∏¥‡∏ï‡∏£',
        '‡∏¢‡∏∞‡∏•‡∏≤','‡∏•‡∏≥‡∏û‡∏π‡∏ô','‡∏ô‡∏£‡∏≤‡∏ò‡∏¥‡∏ß‡∏≤‡∏™','‡∏ä‡∏•‡∏ö‡∏∏‡∏£‡∏µ','‡∏°‡∏∏‡∏Å‡∏î‡∏≤‡∏´‡∏≤‡∏£','‡∏ö‡∏∂‡∏á‡∏Å‡∏≤‡∏¨','‡∏û‡∏±‡∏á‡∏á‡∏≤','‡∏¢‡πÇ‡∏™‡∏ò‡∏£','‡∏´‡∏ô‡∏≠‡∏á‡∏ö‡∏±‡∏ß‡∏•‡∏≥‡∏†‡∏π','‡∏™‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏µ',
        '‡∏£‡∏∞‡∏¢‡∏≠‡∏á','‡∏û‡∏±‡∏ó‡∏•‡∏∏‡∏á','‡∏£‡∏∞‡∏ô‡∏≠‡∏á','‡∏≠‡∏≥‡∏ô‡∏≤‡∏à‡πÄ‡∏à‡∏£‡∏¥‡∏ç','‡∏´‡∏ô‡∏≠‡∏á‡∏Ñ‡∏≤‡∏¢','‡∏ï‡∏£‡∏≤‡∏î','‡∏û‡∏£‡∏∞‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏≠‡∏¢‡∏∏‡∏ò‡∏¢‡∏≤','‡∏™‡∏ï‡∏π‡∏•','‡∏ä‡∏±‡∏¢‡∏ô‡∏≤‡∏ó','‡∏ô‡∏Ñ‡∏£‡∏õ‡∏ê‡∏°',
        '‡∏ô‡∏Ñ‡∏£‡∏ô‡∏≤‡∏¢‡∏Å','‡∏õ‡∏±‡∏ï‡∏ï‡∏≤‡∏ô‡∏µ','‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£','‡∏õ‡∏ó‡∏∏‡∏°‡∏ò‡∏≤‡∏ô‡∏µ','‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏õ‡∏£‡∏≤‡∏Å‡∏≤‡∏£','‡∏≠‡πà‡∏≤‡∏á‡∏ó‡∏≠‡∏á','‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏≤‡∏Ñ‡∏£','‡∏™‡∏¥‡∏á‡∏´‡πå‡∏ö‡∏∏‡∏£‡∏µ','‡∏ô‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ',
        '‡∏†‡∏π‡πÄ‡∏Å‡πá‡∏ï','‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏á‡∏Ñ‡∏£‡∏≤‡∏°']
        if self.values[0] == '1':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '2':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏•‡∏≥‡∏û‡∏π‡∏ô'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '3':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏•‡∏≥‡∏õ‡∏≤‡∏á'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '4':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏≠‡∏∏‡∏ï‡∏£‡∏î‡∏¥‡∏ï‡∏ñ‡πå'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '5':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡πÅ‡∏û‡∏£‡πà'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '6':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏ô‡πà‡∏≤‡∏ô'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '7':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏û‡∏∞‡πÄ‡∏¢‡∏≤'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '8':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡∏£‡∏≤‡∏¢'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '9':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡πÅ‡∏°‡πà‡∏Æ‡πà‡∏≠‡∏á‡∏™‡∏≠‡∏ô'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)


class Central(nextcord.ui.Select):
    def __init__(self):
        options = [
            nextcord.SelectOption(
                label='‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£',
                emoji='üåç',
                value='1',
            ),
            nextcord.SelectOption(
                label='‡∏™‡∏°‡∏∏‡∏ó‡∏õ‡∏£‡∏≤‡∏Å‡∏≤‡∏£',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏™‡∏°‡∏∏‡∏ó‡∏õ‡∏£‡∏≤‡∏Å‡∏≤‡∏£',
                emoji='üåç',
                value='2',
            ),
            nextcord.SelectOption(
                label='‡∏ô‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏ô‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ',
                emoji='üåç',
                value='3',
            ),
            nextcord.SelectOption(
                label='‡∏õ‡∏ó‡∏∏‡∏°‡∏ò‡∏≤‡∏ô‡∏µ',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏õ‡∏ó‡∏∏‡∏°‡∏ò‡∏≤‡∏ô‡∏µ',
                emoji='üåç',
                value='4',
            ),
            nextcord.SelectOption(
                label='‡∏û‡∏£‡∏∞‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏≠‡∏¢‡∏∏‡∏ò‡∏¢‡∏≤',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏û‡∏£‡∏∞‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏≠‡∏¢‡∏∏‡∏ò‡∏¢‡∏≤',
                emoji='üåç',
                value='5',
            ),
            nextcord.SelectOption(
                label='‡∏≠‡πà‡∏≤‡∏á‡∏ó‡∏≠‡∏á',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏≠‡πà‡∏≤‡∏á‡∏ó‡∏≠‡∏á',
                emoji='üåç',
                value='6',
            ),
            nextcord.SelectOption(
                label='‡∏•‡∏û‡∏ö‡∏∏‡∏£‡∏µ',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏•‡∏û‡∏ö‡∏∏‡∏£‡∏µ',
                emoji='üåç',
                value='7',
            ),
            nextcord.SelectOption(
                label='‡∏™‡∏¥‡∏á‡∏´‡πå‡∏ö‡∏∏‡∏£‡∏µ',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏™‡∏¥‡∏á‡∏´‡πå‡∏ö‡∏∏‡∏£‡∏µ',
                emoji='üåç',
                value='8',
            ),
            nextcord.SelectOption(
                label='‡∏ä‡∏±‡∏¢‡∏ô‡∏≤‡∏ó',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏ä‡∏±‡∏¢‡∏ô‡∏≤‡∏ó',
                emoji='üåç',
                value='9',
            ),
            nextcord.SelectOption(
                label='‡∏™‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏µ',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏™‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏µ',
                emoji='üåç',
                value='10',
            ),
            nextcord.SelectOption(
                label='‡∏ô‡∏Ñ‡∏£‡∏ô‡∏≤‡∏¢‡∏Å',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏ô‡∏Ñ‡∏£‡∏ô‡∏≤‡∏¢‡∏Å',
                emoji='üåç',
                value='11',
            ),
            nextcord.SelectOption(
                label='‡∏ô‡∏Ñ‡∏£‡∏™‡∏ß‡∏£‡∏£‡∏Ñ‡πå',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏ô‡∏Ñ‡∏£‡∏™‡∏ß‡∏£‡∏£‡∏Ñ‡πå',
                emoji='üåç',
                value='12',
            ),
            nextcord.SelectOption(
                label='‡∏≠‡∏∏‡∏ó‡∏±‡∏¢‡∏ò‡∏≤‡∏ô‡∏µ',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏≠‡∏∏‡∏ó‡∏±‡∏¢‡∏ò‡∏≤‡∏ô‡∏µ',
                emoji='üåç',
                value='13',
            ),
            nextcord.SelectOption(
                label='‡∏Å‡∏≥‡πÅ‡∏û‡∏á‡πÄ‡∏û‡∏ä‡∏£',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏Å‡∏≥‡πÅ‡∏û‡∏á‡πÄ‡∏û‡∏ä‡∏£',
                emoji='üåç',
                value='14',
            ),
            nextcord.SelectOption(
                label='‡∏™‡∏∏‡∏Ç‡πÇ‡∏Ç‡∏ó‡∏±‡∏¢',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏™‡∏∏‡∏Ç‡πÇ‡∏Ç‡∏ó‡∏±‡∏¢',
                emoji='üåç',
                value='15',
            ),
            nextcord.SelectOption(
                label='‡∏û‡∏¥‡∏©‡∏ì‡∏∏‡πÇ‡∏•‡∏Å',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏û‡∏¥‡∏©‡∏ì‡∏∏‡πÇ‡∏•‡∏Å',
                emoji='üåç',
                value='16',
            ),
            nextcord.SelectOption(
                label='‡∏û‡∏¥‡∏à‡∏¥‡∏ï‡∏£',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏û‡∏¥‡∏à‡∏¥‡∏ï‡∏£',
                emoji='üåç',
                value='17',
            ),
            nextcord.SelectOption(
                label='‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏π‡∏£‡∏ì‡πå',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏π‡∏£‡∏ì‡πå',
                emoji='üåç',
                value='18',
            ),
            nextcord.SelectOption(
                label='‡∏™‡∏∏‡∏û‡∏£‡∏£‡∏ì‡∏ö‡∏∏‡∏£‡∏µ',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏™‡∏∏‡∏û‡∏£‡∏£‡∏ì‡∏ö‡∏∏‡∏£‡∏µ',
                emoji='üåç',
                value='19',
            ),
            nextcord.SelectOption(
                label='‡∏ô‡∏Ñ‡∏£‡∏õ‡∏ê‡∏°',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏ô‡∏Ñ‡∏£‡∏õ‡∏ê‡∏°',
                emoji='üåç',
                value='20',
            ),
            nextcord.SelectOption(
                label='‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏≤‡∏Ñ‡∏£',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏≤‡∏Ñ‡∏£',
                emoji='üåç',
                value='21',
            ),
            nextcord.SelectOption(
                label='‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏á‡∏Ñ‡∏£‡∏≤‡∏°',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏á‡∏Ñ‡∏£‡∏≤‡∏°',
                emoji='üåç',
                value='22',
            ),
        ]
        super().__init__(placeholder='‡πÇ‡∏õ‡∏£‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏π‡πà', options=options, custom_id='selected-contryzone')
        # embed = nextcord.Embed(color=0x00f7ff)
    
    async def callback(self, interaction: nextcord.Interaction):
        zonelist = ['‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà','‡∏ô‡∏Ñ‡∏£‡∏£‡∏≤‡∏ä‡∏™‡∏µ‡∏°‡∏≤','‡∏Å‡∏≤‡∏ç‡∏à‡∏ô‡∏ö‡∏∏‡∏£‡∏µ','‡∏ï‡∏≤‡∏Å','‡∏≠‡∏∏‡∏ö‡∏•‡∏£‡∏≤‡∏ä‡∏ò‡∏≤‡∏ô‡∏µ','‡∏™‡∏∏‡∏£‡∏≤‡∏©‡∏é‡∏£‡πå‡∏ò‡∏≤‡∏ô‡∏µ','‡∏ä‡∏±‡∏¢‡∏†‡∏π‡∏°‡∏¥','‡πÅ‡∏°‡πà‡∏Æ‡πà‡∏≠‡∏á‡∏™‡∏≠‡∏ô',
        '‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏π‡∏£‡∏ì‡πå','‡∏•‡∏≥‡∏õ‡∏≤‡∏á','‡∏≠‡∏∏‡∏î‡∏£‡∏ò‡∏≤‡∏ô‡∏µ','‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡∏£‡∏≤‡∏¢','‡∏ô‡πà‡∏≤‡∏ô','‡πÄ‡∏•‡∏¢','‡∏Ç‡∏≠‡∏ô‡πÅ‡∏Å‡πà‡∏ô','‡∏û‡∏¥‡∏©‡∏ì‡∏∏‡πÇ‡∏•‡∏Å','‡∏ö‡∏∏‡∏£‡∏µ‡∏£‡∏±‡∏°‡∏¢‡πå','‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏ò‡∏£‡∏£‡∏°‡∏£‡∏≤‡∏ä',
        '‡∏™‡∏Å‡∏•‡∏ô‡∏Ñ‡∏£','‡∏ô‡∏Ñ‡∏£‡∏™‡∏ß‡∏£‡∏£‡∏Ñ‡πå','‡∏®‡∏£‡∏µ‡∏™‡∏∞‡πÄ‡∏Å‡∏©','‡∏Å‡∏≥‡πÅ‡∏û‡∏á‡πÄ‡∏û‡∏ä‡∏£','‡∏£‡πâ‡∏≠‡∏¢‡πÄ‡∏≠‡πá‡∏î','‡∏™‡∏∏‡∏£‡∏¥‡∏ô‡∏ó‡∏£‡πå','‡∏≠‡∏∏‡∏ï‡∏£‡∏î‡∏¥‡∏ï‡∏ñ‡πå','‡∏™‡∏á‡∏Ç‡∏•‡∏≤','‡∏™‡∏£‡∏∞‡πÅ‡∏Å‡πâ‡∏ß',
        '‡∏Å‡∏≤‡∏¨‡∏™‡∏¥‡∏ô‡∏ò‡∏∏‡πå','‡∏≠‡∏∏‡∏ó‡∏±‡∏¢‡∏ò‡∏≤‡∏ô‡∏µ','‡∏™‡∏∏‡πÇ‡∏Ç‡∏ó‡∏±‡∏¢','‡πÅ‡∏û‡∏£‡πà','‡∏õ‡∏£‡∏∞‡∏à‡∏ß‡∏ö‡∏Ñ‡∏µ‡∏£‡∏µ‡∏Ç‡∏±‡∏ô‡∏ò‡πå','‡∏à‡∏±‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ','‡∏û‡∏∞‡πÄ‡∏¢‡∏≤','‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏∏‡∏£‡∏µ','‡∏•‡∏û‡∏ö‡∏∏‡∏£‡∏µ','‡∏ä‡∏∏‡∏°‡∏û‡∏£',
        '‡∏ô‡∏Ñ‡∏£‡∏û‡∏ô‡∏°','‡∏™‡∏∏‡∏û‡∏£‡∏£‡∏ì‡∏ö‡∏∏‡∏£‡∏µ','‡∏â‡∏∞‡πÄ‡∏ä‡∏¥‡∏á‡πÄ‡∏ó‡∏£‡∏≤','‡∏°‡∏´‡∏≤‡∏™‡∏≤‡∏£‡∏Ñ‡∏≤‡∏°','‡∏£‡∏≤‡∏ä‡∏ö‡∏∏‡∏£‡∏µ','‡∏ï‡∏£‡∏±‡∏á','‡∏õ‡∏£‡∏≤‡∏à‡∏µ‡∏ô‡∏ö‡∏∏‡∏£‡∏µ','‡∏Å‡∏£‡∏∞‡∏ö‡∏µ‡πà','‡∏û‡∏¥‡∏à‡∏¥‡∏ï‡∏£',
        '‡∏¢‡∏∞‡∏•‡∏≤','‡∏•‡∏≥‡∏û‡∏π‡∏ô','‡∏ô‡∏£‡∏≤‡∏ò‡∏¥‡∏ß‡∏≤‡∏™','‡∏ä‡∏•‡∏ö‡∏∏‡∏£‡∏µ','‡∏°‡∏∏‡∏Å‡∏î‡∏≤‡∏´‡∏≤‡∏£','‡∏ö‡∏∂‡∏á‡∏Å‡∏≤‡∏¨','‡∏û‡∏±‡∏á‡∏á‡∏≤','‡∏¢‡πÇ‡∏™‡∏ò‡∏£','‡∏´‡∏ô‡∏≠‡∏á‡∏ö‡∏±‡∏ß‡∏•‡∏≥‡∏†‡∏π','‡∏™‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏µ',
        '‡∏£‡∏∞‡∏¢‡∏≠‡∏á','‡∏û‡∏±‡∏ó‡∏•‡∏∏‡∏á','‡∏£‡∏∞‡∏ô‡∏≠‡∏á','‡∏≠‡∏≥‡∏ô‡∏≤‡∏à‡πÄ‡∏à‡∏£‡∏¥‡∏ç','‡∏´‡∏ô‡∏≠‡∏á‡∏Ñ‡∏≤‡∏¢','‡∏ï‡∏£‡∏≤‡∏î','‡∏û‡∏£‡∏∞‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏≠‡∏¢‡∏∏‡∏ò‡∏¢‡∏≤','‡∏™‡∏ï‡∏π‡∏•','‡∏ä‡∏±‡∏¢‡∏ô‡∏≤‡∏ó','‡∏ô‡∏Ñ‡∏£‡∏õ‡∏ê‡∏°',
        '‡∏ô‡∏Ñ‡∏£‡∏ô‡∏≤‡∏¢‡∏Å','‡∏õ‡∏±‡∏ï‡∏ï‡∏≤‡∏ô‡∏µ','‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£','‡∏õ‡∏ó‡∏∏‡∏°‡∏ò‡∏≤‡∏ô‡∏µ','‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏õ‡∏£‡∏≤‡∏Å‡∏≤‡∏£','‡∏≠‡πà‡∏≤‡∏á‡∏ó‡∏≠‡∏á','‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏≤‡∏Ñ‡∏£','‡∏™‡∏¥‡∏á‡∏´‡πå‡∏ö‡∏∏‡∏£‡∏µ','‡∏ô‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ',
        '‡∏†‡∏π‡πÄ‡∏Å‡πá‡∏ï','‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏á‡∏Ñ‡∏£‡∏≤‡∏°']
        if self.values[0] == '1':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '2':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏õ‡∏£‡∏≤‡∏Å‡∏≤‡∏£',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '3':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏ô‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '4':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏õ‡∏ó‡∏∏‡∏°‡∏ò‡∏≤‡∏ô‡∏µ',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '5':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏û‡∏£‡∏∞‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏≠‡∏¢‡∏∏‡∏ò‡∏¢‡∏≤',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '6':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏≠‡πà‡∏≤‡∏á‡∏ó‡∏≠‡∏á',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '7':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏•‡∏û‡∏ö‡∏∏‡∏£‡∏µ',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '8':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏™‡∏¥‡∏á‡∏´‡πå‡∏ö‡∏∏‡∏£‡∏µ',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '9':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏ä‡∏±‡∏¢‡∏ô‡∏≤‡∏ó',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '10':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏™‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏µ',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '11':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏ô‡∏Ñ‡∏£‡∏ô‡∏≤‡∏¢‡∏Å',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '12':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏ô‡∏Ñ‡∏£‡∏™‡∏ß‡∏£‡∏£‡∏Ñ‡πå',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '13':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏≠‡∏∏‡∏ó‡∏±‡∏¢‡∏ò‡∏≤‡∏ô‡∏µ',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '14':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏Å‡∏≥‡πÅ‡∏û‡∏á‡πÄ‡∏û‡∏ä‡∏£',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '15':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏™‡∏∏‡∏Ç‡πÇ‡∏Ç‡∏ó‡∏±‡∏¢',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '16':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏û‡∏¥‡∏©‡∏ì‡∏∏‡πÇ‡∏•‡∏Å',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '17':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏û‡∏¥‡∏à‡∏¥‡∏ï‡∏£',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '18':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏π‡∏£‡∏ì‡πå',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '19':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏™‡∏∏‡∏û‡∏£‡∏£‡∏ì‡∏ö‡∏∏‡∏£‡∏µ',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '20':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏ô‡∏Ñ‡∏£‡∏õ‡∏ê‡∏°',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '21':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏≤‡∏Ñ‡∏£',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '22':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏á‡∏Ñ‡∏£‡∏≤‡∏°',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)

class Central2(nextcord.ui.Select):
    def __init__(self):
        options = [
            nextcord.SelectOption(
                label='‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£',
                emoji='üåç',
                value='1',
            ),
            nextcord.SelectOption(
                label='‡∏™‡∏°‡∏∏‡∏ó‡∏õ‡∏£‡∏≤‡∏Å‡∏≤‡∏£',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏™‡∏°‡∏∏‡∏ó‡∏õ‡∏£‡∏≤‡∏Å‡∏≤‡∏£',
                emoji='üåç',
                value='2',
            ),
            nextcord.SelectOption(
                label='‡∏ô‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏ô‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ',
                emoji='üåç',
                value='3',
            ),
            nextcord.SelectOption(
                label='‡∏õ‡∏ó‡∏∏‡∏°‡∏ò‡∏≤‡∏ô‡∏µ',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏õ‡∏ó‡∏∏‡∏°‡∏ò‡∏≤‡∏ô‡∏µ',
                emoji='üåç',
                value='4',
            ),
            nextcord.SelectOption(
                label='‡∏û‡∏£‡∏∞‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏≠‡∏¢‡∏∏‡∏ò‡∏¢‡∏≤',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏û‡∏£‡∏∞‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏≠‡∏¢‡∏∏‡∏ò‡∏¢‡∏≤',
                emoji='üåç',
                value='5',
            ),
            nextcord.SelectOption(
                label='‡∏≠‡πà‡∏≤‡∏á‡∏ó‡∏≠‡∏á',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏≠‡πà‡∏≤‡∏á‡∏ó‡∏≠‡∏á',
                emoji='üåç',
                value='6',
            ),
            nextcord.SelectOption(
                label='‡∏•‡∏û‡∏ö‡∏∏‡∏£‡∏µ',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏•‡∏û‡∏ö‡∏∏‡∏£‡∏µ',
                emoji='üåç',
                value='7',
            ),
            nextcord.SelectOption(
                label='‡∏™‡∏¥‡∏á‡∏´‡πå‡∏ö‡∏∏‡∏£‡∏µ',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏™‡∏¥‡∏á‡∏´‡πå‡∏ö‡∏∏‡∏£‡∏µ',
                emoji='üåç',
                value='8',
            ),
            nextcord.SelectOption(
                label='‡∏ä‡∏±‡∏¢‡∏ô‡∏≤‡∏ó',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏ä‡∏±‡∏¢‡∏ô‡∏≤‡∏ó',
                emoji='üåç',
                value='9',
            ),
            nextcord.SelectOption(
                label='‡∏™‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏µ',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏™‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏µ',
                emoji='üåç',
                value='10',
            ),
            nextcord.SelectOption(
                label='‡∏ô‡∏Ñ‡∏£‡∏ô‡∏≤‡∏¢‡∏Å',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏ô‡∏Ñ‡∏£‡∏ô‡∏≤‡∏¢‡∏Å',
                emoji='üåç',
                value='11',
            ),
            nextcord.SelectOption(
                label='‡∏ô‡∏Ñ‡∏£‡∏™‡∏ß‡∏£‡∏£‡∏Ñ‡πå',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏ô‡∏Ñ‡∏£‡∏™‡∏ß‡∏£‡∏£‡∏Ñ‡πå',
                emoji='üåç',
                value='12',
            ),
            nextcord.SelectOption(
                label='‡∏≠‡∏∏‡∏ó‡∏±‡∏¢‡∏ò‡∏≤‡∏ô‡∏µ',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏≠‡∏∏‡∏ó‡∏±‡∏¢‡∏ò‡∏≤‡∏ô‡∏µ',
                emoji='üåç',
                value='13',
            ),
            nextcord.SelectOption(
                label='‡∏Å‡∏≥‡πÅ‡∏û‡∏á‡πÄ‡∏û‡∏ä‡∏£',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏Å‡∏≥‡πÅ‡∏û‡∏á‡πÄ‡∏û‡∏ä‡∏£',
                emoji='üåç',
                value='14',
            ),
            nextcord.SelectOption(
                label='‡∏™‡∏∏‡∏Ç‡πÇ‡∏Ç‡∏ó‡∏±‡∏¢',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏™‡∏∏‡∏Ç‡πÇ‡∏Ç‡∏ó‡∏±‡∏¢',
                emoji='üåç',
                value='15',
            ),
            nextcord.SelectOption(
                label='‡∏û‡∏¥‡∏©‡∏ì‡∏∏‡πÇ‡∏•‡∏Å',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏û‡∏¥‡∏©‡∏ì‡∏∏‡πÇ‡∏•‡∏Å',
                emoji='üåç',
                value='16',
            ),
            nextcord.SelectOption(
                label='‡∏û‡∏¥‡∏à‡∏¥‡∏ï‡∏£',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏û‡∏¥‡∏à‡∏¥‡∏ï‡∏£',
                emoji='üåç',
                value='17',
            ),
            nextcord.SelectOption(
                label='‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏π‡∏£‡∏ì‡πå',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏π‡∏£‡∏ì‡πå',
                emoji='üåç',
                value='18',
            ),
            nextcord.SelectOption(
                label='‡∏™‡∏∏‡∏û‡∏£‡∏£‡∏ì‡∏ö‡∏∏‡∏£‡∏µ',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏™‡∏∏‡∏û‡∏£‡∏£‡∏ì‡∏ö‡∏∏‡∏£‡∏µ',
                emoji='üåç',
                value='19',
            ),
            nextcord.SelectOption(
                label='‡∏ô‡∏Ñ‡∏£‡∏õ‡∏ê‡∏°',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏ô‡∏Ñ‡∏£‡∏õ‡∏ê‡∏°',
                emoji='üåç',
                value='20',
            ),
            nextcord.SelectOption(
                label='‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏≤‡∏Ñ‡∏£',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏≤‡∏Ñ‡∏£',
                emoji='üåç',
                value='21',
            ),
            nextcord.SelectOption(
                label='‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏á‡∏Ñ‡∏£‡∏≤‡∏°',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏á‡∏Ñ‡∏£‡∏≤‡∏°',
                emoji='üåç',
                value='22',
            ),
        ]
        super().__init__(placeholder='‡πÇ‡∏õ‡∏£‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏π‡πà', options=options, custom_id='selected-contryzone')
        # embed = nextcord.Embed(color=0x00f7ff)
    
    async def callback(self, interaction: nextcord.Interaction):
        zonelist = ['‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà','‡∏ô‡∏Ñ‡∏£‡∏£‡∏≤‡∏ä‡∏™‡∏µ‡∏°‡∏≤','‡∏Å‡∏≤‡∏ç‡∏à‡∏ô‡∏ö‡∏∏‡∏£‡∏µ','‡∏ï‡∏≤‡∏Å','‡∏≠‡∏∏‡∏ö‡∏•‡∏£‡∏≤‡∏ä‡∏ò‡∏≤‡∏ô‡∏µ','‡∏™‡∏∏‡∏£‡∏≤‡∏©‡∏é‡∏£‡πå‡∏ò‡∏≤‡∏ô‡∏µ','‡∏ä‡∏±‡∏¢‡∏†‡∏π‡∏°‡∏¥','‡πÅ‡∏°‡πà‡∏Æ‡πà‡∏≠‡∏á‡∏™‡∏≠‡∏ô',
        '‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏π‡∏£‡∏ì‡πå','‡∏•‡∏≥‡∏õ‡∏≤‡∏á','‡∏≠‡∏∏‡∏î‡∏£‡∏ò‡∏≤‡∏ô‡∏µ','‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡∏£‡∏≤‡∏¢','‡∏ô‡πà‡∏≤‡∏ô','‡πÄ‡∏•‡∏¢','‡∏Ç‡∏≠‡∏ô‡πÅ‡∏Å‡πà‡∏ô','‡∏û‡∏¥‡∏©‡∏ì‡∏∏‡πÇ‡∏•‡∏Å','‡∏ö‡∏∏‡∏£‡∏µ‡∏£‡∏±‡∏°‡∏¢‡πå','‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏ò‡∏£‡∏£‡∏°‡∏£‡∏≤‡∏ä',
        '‡∏™‡∏Å‡∏•‡∏ô‡∏Ñ‡∏£','‡∏ô‡∏Ñ‡∏£‡∏™‡∏ß‡∏£‡∏£‡∏Ñ‡πå','‡∏®‡∏£‡∏µ‡∏™‡∏∞‡πÄ‡∏Å‡∏©','‡∏Å‡∏≥‡πÅ‡∏û‡∏á‡πÄ‡∏û‡∏ä‡∏£','‡∏£‡πâ‡∏≠‡∏¢‡πÄ‡∏≠‡πá‡∏î','‡∏™‡∏∏‡∏£‡∏¥‡∏ô‡∏ó‡∏£‡πå','‡∏≠‡∏∏‡∏ï‡∏£‡∏î‡∏¥‡∏ï‡∏ñ‡πå','‡∏™‡∏á‡∏Ç‡∏•‡∏≤','‡∏™‡∏£‡∏∞‡πÅ‡∏Å‡πâ‡∏ß',
        '‡∏Å‡∏≤‡∏¨‡∏™‡∏¥‡∏ô‡∏ò‡∏∏‡πå','‡∏≠‡∏∏‡∏ó‡∏±‡∏¢‡∏ò‡∏≤‡∏ô‡∏µ','‡∏™‡∏∏‡πÇ‡∏Ç‡∏ó‡∏±‡∏¢','‡πÅ‡∏û‡∏£‡πà','‡∏õ‡∏£‡∏∞‡∏à‡∏ß‡∏ö‡∏Ñ‡∏µ‡∏£‡∏µ‡∏Ç‡∏±‡∏ô‡∏ò‡πå','‡∏à‡∏±‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ','‡∏û‡∏∞‡πÄ‡∏¢‡∏≤','‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏∏‡∏£‡∏µ','‡∏•‡∏û‡∏ö‡∏∏‡∏£‡∏µ','‡∏ä‡∏∏‡∏°‡∏û‡∏£',
        '‡∏ô‡∏Ñ‡∏£‡∏û‡∏ô‡∏°','‡∏™‡∏∏‡∏û‡∏£‡∏£‡∏ì‡∏ö‡∏∏‡∏£‡∏µ','‡∏â‡∏∞‡πÄ‡∏ä‡∏¥‡∏á‡πÄ‡∏ó‡∏£‡∏≤','‡∏°‡∏´‡∏≤‡∏™‡∏≤‡∏£‡∏Ñ‡∏≤‡∏°','‡∏£‡∏≤‡∏ä‡∏ö‡∏∏‡∏£‡∏µ','‡∏ï‡∏£‡∏±‡∏á','‡∏õ‡∏£‡∏≤‡∏à‡∏µ‡∏ô‡∏ö‡∏∏‡∏£‡∏µ','‡∏Å‡∏£‡∏∞‡∏ö‡∏µ‡πà','‡∏û‡∏¥‡∏à‡∏¥‡∏ï‡∏£',
        '‡∏¢‡∏∞‡∏•‡∏≤','‡∏•‡∏≥‡∏û‡∏π‡∏ô','‡∏ô‡∏£‡∏≤‡∏ò‡∏¥‡∏ß‡∏≤‡∏™','‡∏ä‡∏•‡∏ö‡∏∏‡∏£‡∏µ','‡∏°‡∏∏‡∏Å‡∏î‡∏≤‡∏´‡∏≤‡∏£','‡∏ö‡∏∂‡∏á‡∏Å‡∏≤‡∏¨','‡∏û‡∏±‡∏á‡∏á‡∏≤','‡∏¢‡πÇ‡∏™‡∏ò‡∏£','‡∏´‡∏ô‡∏≠‡∏á‡∏ö‡∏±‡∏ß‡∏•‡∏≥‡∏†‡∏π','‡∏™‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏µ',
        '‡∏£‡∏∞‡∏¢‡∏≠‡∏á','‡∏û‡∏±‡∏ó‡∏•‡∏∏‡∏á','‡∏£‡∏∞‡∏ô‡∏≠‡∏á','‡∏≠‡∏≥‡∏ô‡∏≤‡∏à‡πÄ‡∏à‡∏£‡∏¥‡∏ç','‡∏´‡∏ô‡∏≠‡∏á‡∏Ñ‡∏≤‡∏¢','‡∏ï‡∏£‡∏≤‡∏î','‡∏û‡∏£‡∏∞‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏≠‡∏¢‡∏∏‡∏ò‡∏¢‡∏≤','‡∏™‡∏ï‡∏π‡∏•','‡∏ä‡∏±‡∏¢‡∏ô‡∏≤‡∏ó','‡∏ô‡∏Ñ‡∏£‡∏õ‡∏ê‡∏°',
        '‡∏ô‡∏Ñ‡∏£‡∏ô‡∏≤‡∏¢‡∏Å','‡∏õ‡∏±‡∏ï‡∏ï‡∏≤‡∏ô‡∏µ','‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£','‡∏õ‡∏ó‡∏∏‡∏°‡∏ò‡∏≤‡∏ô‡∏µ','‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏õ‡∏£‡∏≤‡∏Å‡∏≤‡∏£','‡∏≠‡πà‡∏≤‡∏á‡∏ó‡∏≠‡∏á','‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏≤‡∏Ñ‡∏£','‡∏™‡∏¥‡∏á‡∏´‡πå‡∏ö‡∏∏‡∏£‡∏µ','‡∏ô‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ',
        '‡∏†‡∏π‡πÄ‡∏Å‡πá‡∏ï','‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏á‡∏Ñ‡∏£‡∏≤‡∏°']
        if self.values[0] == '1':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '2':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏õ‡∏£‡∏≤‡∏Å‡∏≤‡∏£'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '3':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏ô‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '4':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏õ‡∏ó‡∏∏‡∏°‡∏ò‡∏≤‡∏ô‡∏µ'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '5':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏û‡∏£‡∏∞‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏≠‡∏¢‡∏∏‡∏ò‡∏¢‡∏≤'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '6':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏≠‡πà‡∏≤‡∏á‡∏ó‡∏≠‡∏á'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '7':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏•‡∏û‡∏ö‡∏∏‡∏£‡∏µ'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '8':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏™‡∏¥‡∏á‡∏´‡πå‡∏ö‡∏∏‡∏£‡∏µ'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '9':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏ä‡∏±‡∏¢‡∏ô‡∏≤‡∏ó'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '10':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏™‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏µ'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '11':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏ô‡∏Ñ‡∏£‡∏ô‡∏≤‡∏¢‡∏Å'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '12':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏ô‡∏Ñ‡∏£‡∏™‡∏ß‡∏£‡∏£‡∏Ñ‡πå'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '13':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏≠‡∏∏‡∏ó‡∏±‡∏¢‡∏ò‡∏≤‡∏ô‡∏µ'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '14':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏Å‡∏≥‡πÅ‡∏û‡∏á‡πÄ‡∏û‡∏ä‡∏£'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '15':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏™‡∏∏‡πÇ‡∏Ç‡∏ó‡∏±‡∏¢'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '16':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏û‡∏¥‡∏©‡∏ì‡∏∏‡πÇ‡∏•‡∏Å'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '17':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏û‡∏¥‡∏à‡∏¥‡∏ï‡∏£'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '18':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏π‡∏£‡∏ì‡πå'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '19':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏™‡∏∏‡∏û‡∏£‡∏£‡∏ì‡∏ö‡∏∏‡∏£‡∏µ'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '20':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏ô‡∏Ñ‡∏£‡∏õ‡∏ê‡∏°'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '21':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏≤‡∏Ñ‡∏£'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '22':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏á‡∏Ñ‡∏£‡∏≤‡∏°'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)

class Esan(nextcord.ui.Select):
    def __init__(self):
        options = [
            nextcord.SelectOption(
                label='‡∏ô‡∏Ñ‡∏£‡∏£‡∏≤‡∏ä‡∏™‡∏µ‡∏°‡∏≤',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏ô‡∏Ñ‡∏£‡∏£‡∏≤‡∏ä‡∏™‡∏µ‡∏°‡∏≤',
                emoji='üåç',
                value='1',
            ),
            nextcord.SelectOption(
                label='‡∏ö‡∏∏‡∏£‡∏µ‡∏£‡∏±‡∏°‡∏¢‡πå',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏ö‡∏∏‡∏£‡∏µ‡∏£‡∏±‡∏°‡∏¢‡πå',
                emoji='üåç',
                value='2',
            ),
            nextcord.SelectOption(
                label='‡∏™‡∏∏‡∏£‡∏¥‡∏ô‡∏ó‡∏£‡πå',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏™‡∏∏‡∏£‡∏¥‡∏ô‡∏ó‡∏£‡πå',
                emoji='üåç',
                value='3',
            ),
            nextcord.SelectOption(
                label='‡∏®‡∏£‡∏µ‡∏™‡∏∞‡πÄ‡∏Å‡∏©',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏®‡∏£‡∏µ‡∏™‡∏∞‡πÄ‡∏Å‡∏©',
                emoji='üåç',
                value='4',
            ),
            nextcord.SelectOption(
                label='‡∏≠‡∏∏‡∏ö‡∏•‡∏£‡∏≤‡∏ä‡∏ò‡∏≤‡∏ô‡∏µ',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏≠‡∏∏‡∏ö‡∏•‡∏£‡∏≤‡∏ä‡∏ò‡∏≤‡∏ô‡∏µ',
                emoji='üåç',
                value='5',
            ),
            nextcord.SelectOption(
                label='‡∏¢‡πÇ‡∏™‡∏ò‡∏£',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏¢‡πÇ‡∏™‡∏ò‡∏£',
                emoji='üåç',
                value='6',
            ),
            nextcord.SelectOption(
                label='‡∏ä‡∏±‡∏¢‡∏†‡∏π‡∏°‡∏¥',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏ä‡∏±‡∏¢‡∏†‡∏π‡∏°‡∏¥',
                emoji='üåç',
                value='7',
            ),
            nextcord.SelectOption(
                label='‡∏≠‡∏≥‡∏ô‡∏≤‡∏à‡πÄ‡∏à‡∏£‡∏¥‡∏ç',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏≠‡∏≥‡∏ô‡∏≤‡∏à‡πÄ‡∏à‡∏£‡∏¥‡∏ç',
                emoji='üåç',
                value='8',
            ),
            nextcord.SelectOption(
                label='‡∏´‡∏ô‡∏≠‡∏á‡∏ö‡∏±‡∏ß‡∏•‡∏≥‡∏†‡∏π',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏´‡∏ô‡∏≠‡∏á‡∏ö‡∏±‡∏ß‡∏•‡∏≥‡∏†‡∏π',
                emoji='üåç',
                value='9',
            ),
            nextcord.SelectOption(
                label='‡∏Ç‡∏≠‡∏ô‡πÅ‡∏Å‡πà‡∏ô',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏Ç‡∏≠‡∏ô‡πÅ‡∏Å‡πà‡∏ô',
                emoji='üåç',
                value='10',
            ),
            nextcord.SelectOption(
                label='‡∏≠‡∏∏‡∏î‡∏£‡∏ò‡∏≤‡∏ô‡∏µ',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏≠‡∏∏‡∏î‡∏£‡∏ò‡∏≤‡∏ô‡∏µ',
                emoji='üåç',
                value='11',
            ),
            nextcord.SelectOption(
                label='‡πÄ‡∏•‡∏¢',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡πÄ‡∏•‡∏¢',
                emoji='üåç',
                value='12',
            ),
            nextcord.SelectOption(
                label='‡∏´‡∏ô‡∏≠‡∏á‡∏Ñ‡∏≤‡∏¢',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏´‡∏ô‡∏≠‡∏á‡∏Ñ‡∏≤‡∏¢',
                emoji='üåç',
                value='13',
            ),
            nextcord.SelectOption(
                label='‡∏°‡∏´‡∏≤‡∏™‡∏≤‡∏£‡∏Ñ‡∏≤‡∏°',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏°‡∏´‡∏≤‡∏™‡∏≤‡∏£‡∏Ñ‡∏≤‡∏°',
                emoji='üåç',
                value='14',
            ),
            nextcord.SelectOption(
                label='‡∏£‡πâ‡∏≠‡∏¢‡πÄ‡∏≠‡πá‡∏î',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏£‡πâ‡∏≠‡∏¢‡πÄ‡∏≠‡πá‡∏î',
                emoji='üåç',
                value='15',
            ),
            nextcord.SelectOption(
                label='‡∏Å‡∏≤‡∏¨‡∏™‡∏¥‡∏ô‡∏ò‡∏∏‡πå',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏Å‡∏≤‡∏¨‡∏™‡∏¥‡∏ô‡∏ò‡∏∏‡πå',
                emoji='üåç',
                value='16',
            ),
            nextcord.SelectOption(
                label='‡∏™‡∏Å‡∏•‡∏ô‡∏Ñ‡∏£',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏™‡∏Å‡∏•‡∏ô‡∏Ñ‡∏£',
                emoji='üåç',
                value='17',
            ),
            nextcord.SelectOption(
                label='‡∏ô‡∏Ñ‡∏£‡∏û‡∏ô‡∏°',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏ô‡∏Ñ‡∏£‡∏û‡∏ô‡∏°',
                emoji='üåç',
                value='18',
            ),
            nextcord.SelectOption(
                label='‡∏°‡∏∏‡∏Å‡∏î‡∏≤‡∏´‡∏≤‡∏£',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏°‡∏∏‡∏Å‡∏î‡∏≤‡∏´‡∏≤‡∏£',
                emoji='üåç',
                value='19',
            ),
            nextcord.SelectOption(
                label='‡∏ö‡∏∂‡∏á‡∏Å‡∏≤‡∏¨',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏ö‡∏∂‡∏á‡∏Å‡∏≤‡∏¨',
                emoji='üåç',
                value='20',
            )
        ]
        super().__init__(placeholder='‡πÇ‡∏õ‡∏£‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏π‡πà', options=options, custom_id='selected-contryzone')
        # embed = nextcord.Embed(color=0x00f7ff)
    
    async def callback(self, interaction: nextcord.Interaction):
        zonelist = ['‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà','‡∏ô‡∏Ñ‡∏£‡∏£‡∏≤‡∏ä‡∏™‡∏µ‡∏°‡∏≤','‡∏Å‡∏≤‡∏ç‡∏à‡∏ô‡∏ö‡∏∏‡∏£‡∏µ','‡∏ï‡∏≤‡∏Å','‡∏≠‡∏∏‡∏ö‡∏•‡∏£‡∏≤‡∏ä‡∏ò‡∏≤‡∏ô‡∏µ','‡∏™‡∏∏‡∏£‡∏≤‡∏©‡∏é‡∏£‡πå‡∏ò‡∏≤‡∏ô‡∏µ','‡∏ä‡∏±‡∏¢‡∏†‡∏π‡∏°‡∏¥','‡πÅ‡∏°‡πà‡∏Æ‡πà‡∏≠‡∏á‡∏™‡∏≠‡∏ô',
        '‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏π‡∏£‡∏ì‡πå','‡∏•‡∏≥‡∏õ‡∏≤‡∏á','‡∏≠‡∏∏‡∏î‡∏£‡∏ò‡∏≤‡∏ô‡∏µ','‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡∏£‡∏≤‡∏¢','‡∏ô‡πà‡∏≤‡∏ô','‡πÄ‡∏•‡∏¢','‡∏Ç‡∏≠‡∏ô‡πÅ‡∏Å‡πà‡∏ô','‡∏û‡∏¥‡∏©‡∏ì‡∏∏‡πÇ‡∏•‡∏Å','‡∏ö‡∏∏‡∏£‡∏µ‡∏£‡∏±‡∏°‡∏¢‡πå','‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏ò‡∏£‡∏£‡∏°‡∏£‡∏≤‡∏ä',
        '‡∏™‡∏Å‡∏•‡∏ô‡∏Ñ‡∏£','‡∏ô‡∏Ñ‡∏£‡∏™‡∏ß‡∏£‡∏£‡∏Ñ‡πå','‡∏®‡∏£‡∏µ‡∏™‡∏∞‡πÄ‡∏Å‡∏©','‡∏Å‡∏≥‡πÅ‡∏û‡∏á‡πÄ‡∏û‡∏ä‡∏£','‡∏£‡πâ‡∏≠‡∏¢‡πÄ‡∏≠‡πá‡∏î','‡∏™‡∏∏‡∏£‡∏¥‡∏ô‡∏ó‡∏£‡πå','‡∏≠‡∏∏‡∏ï‡∏£‡∏î‡∏¥‡∏ï‡∏ñ‡πå','‡∏™‡∏á‡∏Ç‡∏•‡∏≤','‡∏™‡∏£‡∏∞‡πÅ‡∏Å‡πâ‡∏ß',
        '‡∏Å‡∏≤‡∏¨‡∏™‡∏¥‡∏ô‡∏ò‡∏∏‡πå','‡∏≠‡∏∏‡∏ó‡∏±‡∏¢‡∏ò‡∏≤‡∏ô‡∏µ','‡∏™‡∏∏‡πÇ‡∏Ç‡∏ó‡∏±‡∏¢','‡πÅ‡∏û‡∏£‡πà','‡∏õ‡∏£‡∏∞‡∏à‡∏ß‡∏ö‡∏Ñ‡∏µ‡∏£‡∏µ‡∏Ç‡∏±‡∏ô‡∏ò‡πå','‡∏à‡∏±‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ','‡∏û‡∏∞‡πÄ‡∏¢‡∏≤','‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏∏‡∏£‡∏µ','‡∏•‡∏û‡∏ö‡∏∏‡∏£‡∏µ','‡∏ä‡∏∏‡∏°‡∏û‡∏£',
        '‡∏ô‡∏Ñ‡∏£‡∏û‡∏ô‡∏°','‡∏™‡∏∏‡∏û‡∏£‡∏£‡∏ì‡∏ö‡∏∏‡∏£‡∏µ','‡∏â‡∏∞‡πÄ‡∏ä‡∏¥‡∏á‡πÄ‡∏ó‡∏£‡∏≤','‡∏°‡∏´‡∏≤‡∏™‡∏≤‡∏£‡∏Ñ‡∏≤‡∏°','‡∏£‡∏≤‡∏ä‡∏ö‡∏∏‡∏£‡∏µ','‡∏ï‡∏£‡∏±‡∏á','‡∏õ‡∏£‡∏≤‡∏à‡∏µ‡∏ô‡∏ö‡∏∏‡∏£‡∏µ','‡∏Å‡∏£‡∏∞‡∏ö‡∏µ‡πà','‡∏û‡∏¥‡∏à‡∏¥‡∏ï‡∏£',
        '‡∏¢‡∏∞‡∏•‡∏≤','‡∏•‡∏≥‡∏û‡∏π‡∏ô','‡∏ô‡∏£‡∏≤‡∏ò‡∏¥‡∏ß‡∏≤‡∏™','‡∏ä‡∏•‡∏ö‡∏∏‡∏£‡∏µ','‡∏°‡∏∏‡∏Å‡∏î‡∏≤‡∏´‡∏≤‡∏£','‡∏ö‡∏∂‡∏á‡∏Å‡∏≤‡∏¨','‡∏û‡∏±‡∏á‡∏á‡∏≤','‡∏¢‡πÇ‡∏™‡∏ò‡∏£','‡∏´‡∏ô‡∏≠‡∏á‡∏ö‡∏±‡∏ß‡∏•‡∏≥‡∏†‡∏π','‡∏™‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏µ',
        '‡∏£‡∏∞‡∏¢‡∏≠‡∏á','‡∏û‡∏±‡∏ó‡∏•‡∏∏‡∏á','‡∏£‡∏∞‡∏ô‡∏≠‡∏á','‡∏≠‡∏≥‡∏ô‡∏≤‡∏à‡πÄ‡∏à‡∏£‡∏¥‡∏ç','‡∏´‡∏ô‡∏≠‡∏á‡∏Ñ‡∏≤‡∏¢','‡∏ï‡∏£‡∏≤‡∏î','‡∏û‡∏£‡∏∞‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏≠‡∏¢‡∏∏‡∏ò‡∏¢‡∏≤','‡∏™‡∏ï‡∏π‡∏•','‡∏ä‡∏±‡∏¢‡∏ô‡∏≤‡∏ó','‡∏ô‡∏Ñ‡∏£‡∏õ‡∏ê‡∏°',
        '‡∏ô‡∏Ñ‡∏£‡∏ô‡∏≤‡∏¢‡∏Å','‡∏õ‡∏±‡∏ï‡∏ï‡∏≤‡∏ô‡∏µ','‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£','‡∏õ‡∏ó‡∏∏‡∏°‡∏ò‡∏≤‡∏ô‡∏µ','‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏õ‡∏£‡∏≤‡∏Å‡∏≤‡∏£','‡∏≠‡πà‡∏≤‡∏á‡∏ó‡∏≠‡∏á','‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏≤‡∏Ñ‡∏£','‡∏™‡∏¥‡∏á‡∏´‡πå‡∏ö‡∏∏‡∏£‡∏µ','‡∏ô‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ',
        '‡∏†‡∏π‡πÄ‡∏Å‡πá‡∏ï','‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏á‡∏Ñ‡∏£‡∏≤‡∏°']
        if self.values[0] == '1':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏ô‡∏Ñ‡∏£‡∏£‡∏≤‡∏ä‡∏™‡∏µ‡∏°‡∏≤',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '2':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏ö‡∏∏‡∏£‡∏µ‡∏£‡∏±‡∏°‡∏¢‡πå',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '3':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏™‡∏∏‡∏£‡∏¥‡∏ô‡∏ó‡∏£‡πå',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '4':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏®‡∏£‡∏µ‡∏™‡∏∞‡πÄ‡∏Å‡∏©',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '5':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏≠‡∏∏‡∏ö‡∏•‡∏£‡∏≤‡∏ä‡∏ò‡∏≤‡∏ô‡∏µ',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '6':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏¢‡πÇ‡∏™‡∏ò‡∏£',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '7':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏ä‡∏±‡∏¢‡∏†‡∏π‡∏°‡∏¥',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '8':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏≠‡∏≥‡∏ô‡∏≤‡∏à‡πÄ‡∏à‡∏£‡∏¥‡∏ç',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '9':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏´‡∏ô‡∏≠‡∏á‡∏ö‡∏±‡∏ß‡∏•‡∏≥‡∏†‡∏π',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '10':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏Ç‡∏≠‡∏ô‡πÅ‡∏Å‡πà‡∏ô',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '11':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏≠‡∏∏‡∏î‡∏£‡∏ò‡∏≤‡∏ô‡∏µ',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '12':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡πÄ‡∏•‡∏¢',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '13':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏´‡∏ô‡∏≠‡∏á‡∏Ñ‡∏≤‡∏¢',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '14':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏°‡∏´‡∏≤‡∏™‡∏≤‡∏£‡∏Ñ‡∏≤‡∏°',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '15':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏£‡πâ‡∏≠‡∏¢‡πÄ‡∏≠‡πá‡∏î',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '16':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏Å‡∏≤‡∏¨‡∏™‡∏¥‡∏ô‡∏ò‡∏∏‡πå',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '17':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏™‡∏Å‡∏•‡∏ô‡∏Ñ‡∏£',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '18':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏ô‡∏Ñ‡∏£‡∏û‡∏ô‡∏°',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '19':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏°‡∏∏‡∏Å‡∏î‡∏≤‡∏´‡∏≤‡∏£',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '20':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏ö‡∏∂‡∏á‡∏Å‡∏≤‡∏¨',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)

class Esan2(nextcord.ui.Select):
    def __init__(self):
        options = [
            nextcord.SelectOption(
                label='‡∏ô‡∏Ñ‡∏£‡∏£‡∏≤‡∏ä‡∏™‡∏µ‡∏°‡∏≤',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏ô‡∏Ñ‡∏£‡∏£‡∏≤‡∏ä‡∏™‡∏µ‡∏°‡∏≤',
                emoji='üåç',
                value='1',
            ),
            nextcord.SelectOption(
                label='‡∏ö‡∏∏‡∏£‡∏µ‡∏£‡∏±‡∏°‡∏¢‡πå',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏ö‡∏∏‡∏£‡∏µ‡∏£‡∏±‡∏°‡∏¢‡πå',
                emoji='üåç',
                value='2',
            ),
            nextcord.SelectOption(
                label='‡∏™‡∏∏‡∏£‡∏¥‡∏ô‡∏ó‡∏£‡πå',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏™‡∏∏‡∏£‡∏¥‡∏ô‡∏ó‡∏£‡πå',
                emoji='üåç',
                value='3',
            ),
            nextcord.SelectOption(
                label='‡∏®‡∏£‡∏µ‡∏™‡∏∞‡πÄ‡∏Å‡∏©',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏®‡∏£‡∏µ‡∏™‡∏∞‡πÄ‡∏Å‡∏©',
                emoji='üåç',
                value='4',
            ),
            nextcord.SelectOption(
                label='‡∏≠‡∏∏‡∏ö‡∏•‡∏£‡∏≤‡∏ä‡∏ò‡∏≤‡∏ô‡∏µ',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏≠‡∏∏‡∏ö‡∏•‡∏£‡∏≤‡∏ä‡∏ò‡∏≤‡∏ô‡∏µ',
                emoji='üåç',
                value='5',
            ),
            nextcord.SelectOption(
                label='‡∏¢‡πÇ‡∏™‡∏ò‡∏£',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏¢‡πÇ‡∏™‡∏ò‡∏£',
                emoji='üåç',
                value='6',
            ),
            nextcord.SelectOption(
                label='‡∏ä‡∏±‡∏¢‡∏†‡∏π‡∏°‡∏¥',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏ä‡∏±‡∏¢‡∏†‡∏π‡∏°‡∏¥',
                emoji='üåç',
                value='7',
            ),
            nextcord.SelectOption(
                label='‡∏≠‡∏≥‡∏ô‡∏≤‡∏à‡πÄ‡∏à‡∏£‡∏¥‡∏ç',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏≠‡∏≥‡∏ô‡∏≤‡∏à‡πÄ‡∏à‡∏£‡∏¥‡∏ç',
                emoji='üåç',
                value='8',
            ),
            nextcord.SelectOption(
                label='‡∏´‡∏ô‡∏≠‡∏á‡∏ö‡∏±‡∏ß‡∏•‡∏≥‡∏†‡∏π',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏´‡∏ô‡∏≠‡∏á‡∏ö‡∏±‡∏ß‡∏•‡∏≥‡∏†‡∏π',
                emoji='üåç',
                value='9',
            ),
            nextcord.SelectOption(
                label='‡∏Ç‡∏≠‡∏ô‡πÅ‡∏Å‡πà‡∏ô',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏Ç‡∏≠‡∏ô‡πÅ‡∏Å‡πà‡∏ô',
                emoji='üåç',
                value='10',
            ),
            nextcord.SelectOption(
                label='‡∏≠‡∏∏‡∏î‡∏£‡∏ò‡∏≤‡∏ô‡∏µ',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏≠‡∏∏‡∏î‡∏£‡∏ò‡∏≤‡∏ô‡∏µ',
                emoji='üåç',
                value='11',
            ),
            nextcord.SelectOption(
                label='‡πÄ‡∏•‡∏¢',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡πÄ‡∏•‡∏¢',
                emoji='üåç',
                value='12',
            ),
            nextcord.SelectOption(
                label='‡∏´‡∏ô‡∏≠‡∏á‡∏Ñ‡∏≤‡∏¢',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏´‡∏ô‡∏≠‡∏á‡∏Ñ‡∏≤‡∏¢',
                emoji='üåç',
                value='13',
            ),
            nextcord.SelectOption(
                label='‡∏°‡∏´‡∏≤‡∏™‡∏≤‡∏£‡∏Ñ‡∏≤‡∏°',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏°‡∏´‡∏≤‡∏™‡∏≤‡∏£‡∏Ñ‡∏≤‡∏°',
                emoji='üåç',
                value='14',
            ),
            nextcord.SelectOption(
                label='‡∏£‡πâ‡∏≠‡∏¢‡πÄ‡∏≠‡πá‡∏î',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏£‡πâ‡∏≠‡∏¢‡πÄ‡∏≠‡πá‡∏î',
                emoji='üåç',
                value='15',
            ),
            nextcord.SelectOption(
                label='‡∏Å‡∏≤‡∏¨‡∏™‡∏¥‡∏ô‡∏ò‡∏∏‡πå',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏Å‡∏≤‡∏¨‡∏™‡∏¥‡∏ô‡∏ò‡∏∏‡πå',
                emoji='üåç',
                value='16',
            ),
            nextcord.SelectOption(
                label='‡∏™‡∏Å‡∏•‡∏ô‡∏Ñ‡∏£',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏™‡∏Å‡∏•‡∏ô‡∏Ñ‡∏£',
                emoji='üåç',
                value='17',
            ),
            nextcord.SelectOption(
                label='‡∏ô‡∏Ñ‡∏£‡∏û‡∏ô‡∏°',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏ô‡∏Ñ‡∏£‡∏û‡∏ô‡∏°',
                emoji='üåç',
                value='18',
            ),
            nextcord.SelectOption(
                label='‡∏°‡∏∏‡∏Å‡∏î‡∏≤‡∏´‡∏≤‡∏£',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏°‡∏∏‡∏Å‡∏î‡∏≤‡∏´‡∏≤‡∏£',
                emoji='üåç',
                value='19',
            ),
            nextcord.SelectOption(
                label='‡∏ö‡∏∂‡∏á‡∏Å‡∏≤‡∏¨',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏ö‡∏∂‡∏á‡∏Å‡∏≤‡∏¨',
                emoji='üåç',
                value='20',
            )
        ]
        super().__init__(placeholder='‡πÇ‡∏õ‡∏£‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏π‡πà', options=options, custom_id='selected-contryzone')
        # embed = nextcord.Embed(color=0x00f7ff)
    
    async def callback(self, interaction: nextcord.Interaction):
        zonelist = ['‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà','‡∏ô‡∏Ñ‡∏£‡∏£‡∏≤‡∏ä‡∏™‡∏µ‡∏°‡∏≤','‡∏Å‡∏≤‡∏ç‡∏à‡∏ô‡∏ö‡∏∏‡∏£‡∏µ','‡∏ï‡∏≤‡∏Å','‡∏≠‡∏∏‡∏ö‡∏•‡∏£‡∏≤‡∏ä‡∏ò‡∏≤‡∏ô‡∏µ','‡∏™‡∏∏‡∏£‡∏≤‡∏©‡∏é‡∏£‡πå‡∏ò‡∏≤‡∏ô‡∏µ','‡∏ä‡∏±‡∏¢‡∏†‡∏π‡∏°‡∏¥','‡πÅ‡∏°‡πà‡∏Æ‡πà‡∏≠‡∏á‡∏™‡∏≠‡∏ô',
        '‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏π‡∏£‡∏ì‡πå','‡∏•‡∏≥‡∏õ‡∏≤‡∏á','‡∏≠‡∏∏‡∏î‡∏£‡∏ò‡∏≤‡∏ô‡∏µ','‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡∏£‡∏≤‡∏¢','‡∏ô‡πà‡∏≤‡∏ô','‡πÄ‡∏•‡∏¢','‡∏Ç‡∏≠‡∏ô‡πÅ‡∏Å‡πà‡∏ô','‡∏û‡∏¥‡∏©‡∏ì‡∏∏‡πÇ‡∏•‡∏Å','‡∏ö‡∏∏‡∏£‡∏µ‡∏£‡∏±‡∏°‡∏¢‡πå','‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏ò‡∏£‡∏£‡∏°‡∏£‡∏≤‡∏ä',
        '‡∏™‡∏Å‡∏•‡∏ô‡∏Ñ‡∏£','‡∏ô‡∏Ñ‡∏£‡∏™‡∏ß‡∏£‡∏£‡∏Ñ‡πå','‡∏®‡∏£‡∏µ‡∏™‡∏∞‡πÄ‡∏Å‡∏©','‡∏Å‡∏≥‡πÅ‡∏û‡∏á‡πÄ‡∏û‡∏ä‡∏£','‡∏£‡πâ‡∏≠‡∏¢‡πÄ‡∏≠‡πá‡∏î','‡∏™‡∏∏‡∏£‡∏¥‡∏ô‡∏ó‡∏£‡πå','‡∏≠‡∏∏‡∏ï‡∏£‡∏î‡∏¥‡∏ï‡∏ñ‡πå','‡∏™‡∏á‡∏Ç‡∏•‡∏≤','‡∏™‡∏£‡∏∞‡πÅ‡∏Å‡πâ‡∏ß',
        '‡∏Å‡∏≤‡∏¨‡∏™‡∏¥‡∏ô‡∏ò‡∏∏‡πå','‡∏≠‡∏∏‡∏ó‡∏±‡∏¢‡∏ò‡∏≤‡∏ô‡∏µ','‡∏™‡∏∏‡πÇ‡∏Ç‡∏ó‡∏±‡∏¢','‡πÅ‡∏û‡∏£‡πà','‡∏õ‡∏£‡∏∞‡∏à‡∏ß‡∏ö‡∏Ñ‡∏µ‡∏£‡∏µ‡∏Ç‡∏±‡∏ô‡∏ò‡πå','‡∏à‡∏±‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ','‡∏û‡∏∞‡πÄ‡∏¢‡∏≤','‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏∏‡∏£‡∏µ','‡∏•‡∏û‡∏ö‡∏∏‡∏£‡∏µ','‡∏ä‡∏∏‡∏°‡∏û‡∏£',
        '‡∏ô‡∏Ñ‡∏£‡∏û‡∏ô‡∏°','‡∏™‡∏∏‡∏û‡∏£‡∏£‡∏ì‡∏ö‡∏∏‡∏£‡∏µ','‡∏â‡∏∞‡πÄ‡∏ä‡∏¥‡∏á‡πÄ‡∏ó‡∏£‡∏≤','‡∏°‡∏´‡∏≤‡∏™‡∏≤‡∏£‡∏Ñ‡∏≤‡∏°','‡∏£‡∏≤‡∏ä‡∏ö‡∏∏‡∏£‡∏µ','‡∏ï‡∏£‡∏±‡∏á','‡∏õ‡∏£‡∏≤‡∏à‡∏µ‡∏ô‡∏ö‡∏∏‡∏£‡∏µ','‡∏Å‡∏£‡∏∞‡∏ö‡∏µ‡πà','‡∏û‡∏¥‡∏à‡∏¥‡∏ï‡∏£',
        '‡∏¢‡∏∞‡∏•‡∏≤','‡∏•‡∏≥‡∏û‡∏π‡∏ô','‡∏ô‡∏£‡∏≤‡∏ò‡∏¥‡∏ß‡∏≤‡∏™','‡∏ä‡∏•‡∏ö‡∏∏‡∏£‡∏µ','‡∏°‡∏∏‡∏Å‡∏î‡∏≤‡∏´‡∏≤‡∏£','‡∏ö‡∏∂‡∏á‡∏Å‡∏≤‡∏¨','‡∏û‡∏±‡∏á‡∏á‡∏≤','‡∏¢‡πÇ‡∏™‡∏ò‡∏£','‡∏´‡∏ô‡∏≠‡∏á‡∏ö‡∏±‡∏ß‡∏•‡∏≥‡∏†‡∏π','‡∏™‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏µ',
        '‡∏£‡∏∞‡∏¢‡∏≠‡∏á','‡∏û‡∏±‡∏ó‡∏•‡∏∏‡∏á','‡∏£‡∏∞‡∏ô‡∏≠‡∏á','‡∏≠‡∏≥‡∏ô‡∏≤‡∏à‡πÄ‡∏à‡∏£‡∏¥‡∏ç','‡∏´‡∏ô‡∏≠‡∏á‡∏Ñ‡∏≤‡∏¢','‡∏ï‡∏£‡∏≤‡∏î','‡∏û‡∏£‡∏∞‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏≠‡∏¢‡∏∏‡∏ò‡∏¢‡∏≤','‡∏™‡∏ï‡∏π‡∏•','‡∏ä‡∏±‡∏¢‡∏ô‡∏≤‡∏ó','‡∏ô‡∏Ñ‡∏£‡∏õ‡∏ê‡∏°',
        '‡∏ô‡∏Ñ‡∏£‡∏ô‡∏≤‡∏¢‡∏Å','‡∏õ‡∏±‡∏ï‡∏ï‡∏≤‡∏ô‡∏µ','‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£','‡∏õ‡∏ó‡∏∏‡∏°‡∏ò‡∏≤‡∏ô‡∏µ','‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏õ‡∏£‡∏≤‡∏Å‡∏≤‡∏£','‡∏≠‡πà‡∏≤‡∏á‡∏ó‡∏≠‡∏á','‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏≤‡∏Ñ‡∏£','‡∏™‡∏¥‡∏á‡∏´‡πå‡∏ö‡∏∏‡∏£‡∏µ','‡∏ô‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ',
        '‡∏†‡∏π‡πÄ‡∏Å‡πá‡∏ï','‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏á‡∏Ñ‡∏£‡∏≤‡∏°']
        if self.values[0] == '1':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏ô‡∏Ñ‡∏£‡∏£‡∏≤‡∏ä‡∏™‡∏µ‡∏°‡∏≤'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '2':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏ö‡∏∏‡∏£‡∏µ‡∏£‡∏±‡∏°‡∏¢‡πå'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '3':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏™‡∏∏‡∏£‡∏¥‡∏ô‡∏ó‡∏£‡πå'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '4':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏®‡∏£‡∏µ‡∏™‡∏∞‡πÄ‡∏Å‡∏©'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '5':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏≠‡∏∏‡∏ö‡∏•‡∏£‡∏≤‡∏ä‡∏ò‡∏≤‡∏ô‡∏µ'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '6':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏¢‡πÇ‡∏™‡∏ò‡∏£'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '7':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏ä‡∏±‡∏¢‡∏†‡∏π‡∏°‡∏¥'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '8':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏≠‡∏≥‡∏ô‡∏≤‡∏à‡πÄ‡∏à‡∏£‡∏¥‡∏ç'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '9':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏´‡∏ô‡∏≠‡∏á‡∏ö‡∏±‡∏ß‡∏•‡∏≥‡∏†‡∏π'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '10':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏Ç‡∏≠‡∏ô‡πÅ‡∏Å‡πà‡∏ô'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '11':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏≠‡∏∏‡∏î‡∏£‡∏ò‡∏≤‡∏ô‡∏µ'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '12':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡πÄ‡∏•‡∏¢'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '13':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏´‡∏ô‡∏≠‡∏á‡∏Ñ‡∏≤‡∏¢'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '14':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏°‡∏´‡∏≤‡∏™‡∏≤‡∏£‡∏Ñ‡∏≤‡∏°'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '15':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏£‡πâ‡∏≠‡∏¢‡πÄ‡∏≠‡πá‡∏î'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '16':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏Å‡∏≤‡∏¨‡∏™‡∏¥‡∏ô‡∏ò‡∏∏‡πå'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '17':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏™‡∏Å‡∏•‡∏ô‡∏Ñ‡∏£'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '18':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏ô‡∏Ñ‡∏£‡∏û‡∏ô‡∏°'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '19':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏°‡∏∏‡∏Å‡∏î‡∏≤‡∏´‡∏≤‡∏£'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '20':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏ö‡∏∂‡∏á‡∏Å‡∏≤‡∏¨'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)

class Western(nextcord.ui.Select):
    def __init__(self):
        options = [
            nextcord.SelectOption(
                label='‡∏ï‡∏≤‡∏Å',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏ï‡∏≤‡∏Å',
                emoji='üåç',
                value='1',
            ),
            nextcord.SelectOption(
                label='‡∏£‡∏≤‡∏ä‡∏ö‡∏∏‡∏£‡∏µ',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏£‡∏≤‡∏ä‡∏ö‡∏∏‡∏£‡∏µ',
                emoji='üåç',
                value='2',
            ),
            nextcord.SelectOption(
                label='‡∏Å‡∏≤‡∏ç‡∏à‡∏ô‡∏ö‡∏∏‡∏£‡∏µ',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏Å‡∏≤‡∏ç‡∏à‡∏ô‡∏ö‡∏∏‡∏£‡∏µ',
                emoji='üåç',
                value='3',
            ),
            nextcord.SelectOption(
                label='‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏∏‡∏£‡∏µ',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏∏‡∏£‡∏µ',
                emoji='üåç',
                value='4',
            ),
            nextcord.SelectOption(
                label='‡∏õ‡∏£‡∏∞‡∏à‡∏ß‡∏ö‡∏Ñ‡∏µ‡∏£‡∏µ‡∏Ç‡∏±‡∏ô‡∏ò‡πå',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏õ‡∏£‡∏∞‡∏à‡∏ß‡∏ö‡∏Ñ‡∏µ‡∏£‡∏µ‡∏Ç‡∏±‡∏ô‡∏ò‡πå',
                emoji='üåç',
                value='5',
            ),
        ]
        super().__init__(placeholder='‡πÇ‡∏õ‡∏£‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏π‡πà', options=options, custom_id='selected-contryzone')
        # embed = nextcord.Embed(color=0x00f7ff)
    
    async def callback(self, interaction: nextcord.Interaction):
        zonelist = ['‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà','‡∏ô‡∏Ñ‡∏£‡∏£‡∏≤‡∏ä‡∏™‡∏µ‡∏°‡∏≤','‡∏Å‡∏≤‡∏ç‡∏à‡∏ô‡∏ö‡∏∏‡∏£‡∏µ','‡∏ï‡∏≤‡∏Å','‡∏≠‡∏∏‡∏ö‡∏•‡∏£‡∏≤‡∏ä‡∏ò‡∏≤‡∏ô‡∏µ','‡∏™‡∏∏‡∏£‡∏≤‡∏©‡∏é‡∏£‡πå‡∏ò‡∏≤‡∏ô‡∏µ','‡∏ä‡∏±‡∏¢‡∏†‡∏π‡∏°‡∏¥','‡πÅ‡∏°‡πà‡∏Æ‡πà‡∏≠‡∏á‡∏™‡∏≠‡∏ô',
        '‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏π‡∏£‡∏ì‡πå','‡∏•‡∏≥‡∏õ‡∏≤‡∏á','‡∏≠‡∏∏‡∏î‡∏£‡∏ò‡∏≤‡∏ô‡∏µ','‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡∏£‡∏≤‡∏¢','‡∏ô‡πà‡∏≤‡∏ô','‡πÄ‡∏•‡∏¢','‡∏Ç‡∏≠‡∏ô‡πÅ‡∏Å‡πà‡∏ô','‡∏û‡∏¥‡∏©‡∏ì‡∏∏‡πÇ‡∏•‡∏Å','‡∏ö‡∏∏‡∏£‡∏µ‡∏£‡∏±‡∏°‡∏¢‡πå','‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏ò‡∏£‡∏£‡∏°‡∏£‡∏≤‡∏ä',
        '‡∏™‡∏Å‡∏•‡∏ô‡∏Ñ‡∏£','‡∏ô‡∏Ñ‡∏£‡∏™‡∏ß‡∏£‡∏£‡∏Ñ‡πå','‡∏®‡∏£‡∏µ‡∏™‡∏∞‡πÄ‡∏Å‡∏©','‡∏Å‡∏≥‡πÅ‡∏û‡∏á‡πÄ‡∏û‡∏ä‡∏£','‡∏£‡πâ‡∏≠‡∏¢‡πÄ‡∏≠‡πá‡∏î','‡∏™‡∏∏‡∏£‡∏¥‡∏ô‡∏ó‡∏£‡πå','‡∏≠‡∏∏‡∏ï‡∏£‡∏î‡∏¥‡∏ï‡∏ñ‡πå','‡∏™‡∏á‡∏Ç‡∏•‡∏≤','‡∏™‡∏£‡∏∞‡πÅ‡∏Å‡πâ‡∏ß',
        '‡∏Å‡∏≤‡∏¨‡∏™‡∏¥‡∏ô‡∏ò‡∏∏‡πå','‡∏≠‡∏∏‡∏ó‡∏±‡∏¢‡∏ò‡∏≤‡∏ô‡∏µ','‡∏™‡∏∏‡πÇ‡∏Ç‡∏ó‡∏±‡∏¢','‡πÅ‡∏û‡∏£‡πà','‡∏õ‡∏£‡∏∞‡∏à‡∏ß‡∏ö‡∏Ñ‡∏µ‡∏£‡∏µ‡∏Ç‡∏±‡∏ô‡∏ò‡πå','‡∏à‡∏±‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ','‡∏û‡∏∞‡πÄ‡∏¢‡∏≤','‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏∏‡∏£‡∏µ','‡∏•‡∏û‡∏ö‡∏∏‡∏£‡∏µ','‡∏ä‡∏∏‡∏°‡∏û‡∏£',
        '‡∏ô‡∏Ñ‡∏£‡∏û‡∏ô‡∏°','‡∏™‡∏∏‡∏û‡∏£‡∏£‡∏ì‡∏ö‡∏∏‡∏£‡∏µ','‡∏â‡∏∞‡πÄ‡∏ä‡∏¥‡∏á‡πÄ‡∏ó‡∏£‡∏≤','‡∏°‡∏´‡∏≤‡∏™‡∏≤‡∏£‡∏Ñ‡∏≤‡∏°','‡∏£‡∏≤‡∏ä‡∏ö‡∏∏‡∏£‡∏µ','‡∏ï‡∏£‡∏±‡∏á','‡∏õ‡∏£‡∏≤‡∏à‡∏µ‡∏ô‡∏ö‡∏∏‡∏£‡∏µ','‡∏Å‡∏£‡∏∞‡∏ö‡∏µ‡πà','‡∏û‡∏¥‡∏à‡∏¥‡∏ï‡∏£',
        '‡∏¢‡∏∞‡∏•‡∏≤','‡∏•‡∏≥‡∏û‡∏π‡∏ô','‡∏ô‡∏£‡∏≤‡∏ò‡∏¥‡∏ß‡∏≤‡∏™','‡∏ä‡∏•‡∏ö‡∏∏‡∏£‡∏µ','‡∏°‡∏∏‡∏Å‡∏î‡∏≤‡∏´‡∏≤‡∏£','‡∏ö‡∏∂‡∏á‡∏Å‡∏≤‡∏¨','‡∏û‡∏±‡∏á‡∏á‡∏≤','‡∏¢‡πÇ‡∏™‡∏ò‡∏£','‡∏´‡∏ô‡∏≠‡∏á‡∏ö‡∏±‡∏ß‡∏•‡∏≥‡∏†‡∏π','‡∏™‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏µ',
        '‡∏£‡∏∞‡∏¢‡∏≠‡∏á','‡∏û‡∏±‡∏ó‡∏•‡∏∏‡∏á','‡∏£‡∏∞‡∏ô‡∏≠‡∏á','‡∏≠‡∏≥‡∏ô‡∏≤‡∏à‡πÄ‡∏à‡∏£‡∏¥‡∏ç','‡∏´‡∏ô‡∏≠‡∏á‡∏Ñ‡∏≤‡∏¢','‡∏ï‡∏£‡∏≤‡∏î','‡∏û‡∏£‡∏∞‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏≠‡∏¢‡∏∏‡∏ò‡∏¢‡∏≤','‡∏™‡∏ï‡∏π‡∏•','‡∏ä‡∏±‡∏¢‡∏ô‡∏≤‡∏ó','‡∏ô‡∏Ñ‡∏£‡∏õ‡∏ê‡∏°',
        '‡∏ô‡∏Ñ‡∏£‡∏ô‡∏≤‡∏¢‡∏Å','‡∏õ‡∏±‡∏ï‡∏ï‡∏≤‡∏ô‡∏µ','‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£','‡∏õ‡∏ó‡∏∏‡∏°‡∏ò‡∏≤‡∏ô‡∏µ','‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏õ‡∏£‡∏≤‡∏Å‡∏≤‡∏£','‡∏≠‡πà‡∏≤‡∏á‡∏ó‡∏≠‡∏á','‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏≤‡∏Ñ‡∏£','‡∏™‡∏¥‡∏á‡∏´‡πå‡∏ö‡∏∏‡∏£‡∏µ','‡∏ô‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ',
        '‡∏†‡∏π‡πÄ‡∏Å‡πá‡∏ï','‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏á‡∏Ñ‡∏£‡∏≤‡∏°']
        if self.values[0] == '1':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏ï‡∏≤‡∏Å',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '2':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏£‡∏≤‡∏ä‡∏ö‡∏∏‡∏£‡∏µ',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '3':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏Å‡∏≤‡∏ç‡∏à‡∏ô‡∏ö‡∏∏‡∏£‡∏µ',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '4':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏∏‡∏£‡∏µ',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '5':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏õ‡∏£‡∏∞‡∏à‡∏ß‡∏ö‡∏Ñ‡∏µ‡∏£‡∏µ‡∏Ç‡∏±‡∏ô‡∏ò‡πå',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)

class Western2(nextcord.ui.Select):
    def __init__(self):
        options = [
            nextcord.SelectOption(
                label='‡∏ï‡∏≤‡∏Å',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏ï‡∏≤‡∏Å',
                emoji='üåç',
                value='1',
            ),
            nextcord.SelectOption(
                label='‡∏£‡∏≤‡∏ä‡∏ö‡∏∏‡∏£‡∏µ',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏£‡∏≤‡∏ä‡∏ö‡∏∏‡∏£‡∏µ',
                emoji='üåç',
                value='2',
            ),
            nextcord.SelectOption(
                label='‡∏Å‡∏≤‡∏ç‡∏à‡∏ô‡∏ö‡∏∏‡∏£‡∏µ',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏Å‡∏≤‡∏ç‡∏à‡∏ô‡∏ö‡∏∏‡∏£‡∏µ',
                emoji='üåç',
                value='3',
            ),
            nextcord.SelectOption(
                label='‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏∏‡∏£‡∏µ',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏∏‡∏£‡∏µ',
                emoji='üåç',
                value='4',
            ),
            nextcord.SelectOption(
                label='‡∏õ‡∏£‡∏∞‡∏à‡∏ß‡∏ö‡∏Ñ‡∏µ‡∏£‡∏µ‡∏Ç‡∏±‡∏ô‡∏ò‡πå',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏õ‡∏£‡∏∞‡∏à‡∏ß‡∏ö‡∏Ñ‡∏µ‡∏£‡∏µ‡∏Ç‡∏±‡∏ô‡∏ò‡πå',
                emoji='üåç',
                value='5',
            ),
        ]
        super().__init__(placeholder='‡πÇ‡∏õ‡∏£‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏π‡πà', options=options, custom_id='selected-contryzone')
        # embed = nextcord.Embed(color=0x00f7ff)
    
    async def callback(self, interaction: nextcord.Interaction):
        zonelist = ['‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà','‡∏ô‡∏Ñ‡∏£‡∏£‡∏≤‡∏ä‡∏™‡∏µ‡∏°‡∏≤','‡∏Å‡∏≤‡∏ç‡∏à‡∏ô‡∏ö‡∏∏‡∏£‡∏µ','‡∏ï‡∏≤‡∏Å','‡∏≠‡∏∏‡∏ö‡∏•‡∏£‡∏≤‡∏ä‡∏ò‡∏≤‡∏ô‡∏µ','‡∏™‡∏∏‡∏£‡∏≤‡∏©‡∏é‡∏£‡πå‡∏ò‡∏≤‡∏ô‡∏µ','‡∏ä‡∏±‡∏¢‡∏†‡∏π‡∏°‡∏¥','‡πÅ‡∏°‡πà‡∏Æ‡πà‡∏≠‡∏á‡∏™‡∏≠‡∏ô',
        '‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏π‡∏£‡∏ì‡πå','‡∏•‡∏≥‡∏õ‡∏≤‡∏á','‡∏≠‡∏∏‡∏î‡∏£‡∏ò‡∏≤‡∏ô‡∏µ','‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡∏£‡∏≤‡∏¢','‡∏ô‡πà‡∏≤‡∏ô','‡πÄ‡∏•‡∏¢','‡∏Ç‡∏≠‡∏ô‡πÅ‡∏Å‡πà‡∏ô','‡∏û‡∏¥‡∏©‡∏ì‡∏∏‡πÇ‡∏•‡∏Å','‡∏ö‡∏∏‡∏£‡∏µ‡∏£‡∏±‡∏°‡∏¢‡πå','‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏ò‡∏£‡∏£‡∏°‡∏£‡∏≤‡∏ä',
        '‡∏™‡∏Å‡∏•‡∏ô‡∏Ñ‡∏£','‡∏ô‡∏Ñ‡∏£‡∏™‡∏ß‡∏£‡∏£‡∏Ñ‡πå','‡∏®‡∏£‡∏µ‡∏™‡∏∞‡πÄ‡∏Å‡∏©','‡∏Å‡∏≥‡πÅ‡∏û‡∏á‡πÄ‡∏û‡∏ä‡∏£','‡∏£‡πâ‡∏≠‡∏¢‡πÄ‡∏≠‡πá‡∏î','‡∏™‡∏∏‡∏£‡∏¥‡∏ô‡∏ó‡∏£‡πå','‡∏≠‡∏∏‡∏ï‡∏£‡∏î‡∏¥‡∏ï‡∏ñ‡πå','‡∏™‡∏á‡∏Ç‡∏•‡∏≤','‡∏™‡∏£‡∏∞‡πÅ‡∏Å‡πâ‡∏ß',
        '‡∏Å‡∏≤‡∏¨‡∏™‡∏¥‡∏ô‡∏ò‡∏∏‡πå','‡∏≠‡∏∏‡∏ó‡∏±‡∏¢‡∏ò‡∏≤‡∏ô‡∏µ','‡∏™‡∏∏‡πÇ‡∏Ç‡∏ó‡∏±‡∏¢','‡πÅ‡∏û‡∏£‡πà','‡∏õ‡∏£‡∏∞‡∏à‡∏ß‡∏ö‡∏Ñ‡∏µ‡∏£‡∏µ‡∏Ç‡∏±‡∏ô‡∏ò‡πå','‡∏à‡∏±‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ','‡∏û‡∏∞‡πÄ‡∏¢‡∏≤','‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏∏‡∏£‡∏µ','‡∏•‡∏û‡∏ö‡∏∏‡∏£‡∏µ','‡∏ä‡∏∏‡∏°‡∏û‡∏£',
        '‡∏ô‡∏Ñ‡∏£‡∏û‡∏ô‡∏°','‡∏™‡∏∏‡∏û‡∏£‡∏£‡∏ì‡∏ö‡∏∏‡∏£‡∏µ','‡∏â‡∏∞‡πÄ‡∏ä‡∏¥‡∏á‡πÄ‡∏ó‡∏£‡∏≤','‡∏°‡∏´‡∏≤‡∏™‡∏≤‡∏£‡∏Ñ‡∏≤‡∏°','‡∏£‡∏≤‡∏ä‡∏ö‡∏∏‡∏£‡∏µ','‡∏ï‡∏£‡∏±‡∏á','‡∏õ‡∏£‡∏≤‡∏à‡∏µ‡∏ô‡∏ö‡∏∏‡∏£‡∏µ','‡∏Å‡∏£‡∏∞‡∏ö‡∏µ‡πà','‡∏û‡∏¥‡∏à‡∏¥‡∏ï‡∏£',
        '‡∏¢‡∏∞‡∏•‡∏≤','‡∏•‡∏≥‡∏û‡∏π‡∏ô','‡∏ô‡∏£‡∏≤‡∏ò‡∏¥‡∏ß‡∏≤‡∏™','‡∏ä‡∏•‡∏ö‡∏∏‡∏£‡∏µ','‡∏°‡∏∏‡∏Å‡∏î‡∏≤‡∏´‡∏≤‡∏£','‡∏ö‡∏∂‡∏á‡∏Å‡∏≤‡∏¨','‡∏û‡∏±‡∏á‡∏á‡∏≤','‡∏¢‡πÇ‡∏™‡∏ò‡∏£','‡∏´‡∏ô‡∏≠‡∏á‡∏ö‡∏±‡∏ß‡∏•‡∏≥‡∏†‡∏π','‡∏™‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏µ',
        '‡∏£‡∏∞‡∏¢‡∏≠‡∏á','‡∏û‡∏±‡∏ó‡∏•‡∏∏‡∏á','‡∏£‡∏∞‡∏ô‡∏≠‡∏á','‡∏≠‡∏≥‡∏ô‡∏≤‡∏à‡πÄ‡∏à‡∏£‡∏¥‡∏ç','‡∏´‡∏ô‡∏≠‡∏á‡∏Ñ‡∏≤‡∏¢','‡∏ï‡∏£‡∏≤‡∏î','‡∏û‡∏£‡∏∞‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏≠‡∏¢‡∏∏‡∏ò‡∏¢‡∏≤','‡∏™‡∏ï‡∏π‡∏•','‡∏ä‡∏±‡∏¢‡∏ô‡∏≤‡∏ó','‡∏ô‡∏Ñ‡∏£‡∏õ‡∏ê‡∏°',
        '‡∏ô‡∏Ñ‡∏£‡∏ô‡∏≤‡∏¢‡∏Å','‡∏õ‡∏±‡∏ï‡∏ï‡∏≤‡∏ô‡∏µ','‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£','‡∏õ‡∏ó‡∏∏‡∏°‡∏ò‡∏≤‡∏ô‡∏µ','‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏õ‡∏£‡∏≤‡∏Å‡∏≤‡∏£','‡∏≠‡πà‡∏≤‡∏á‡∏ó‡∏≠‡∏á','‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏≤‡∏Ñ‡∏£','‡∏™‡∏¥‡∏á‡∏´‡πå‡∏ö‡∏∏‡∏£‡∏µ','‡∏ô‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ',
        '‡∏†‡∏π‡πÄ‡∏Å‡πá‡∏ï','‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏á‡∏Ñ‡∏£‡∏≤‡∏°']
        if self.values[0] == '1':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏ï‡∏≤‡∏Å'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '2':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏£‡∏≤‡∏ä‡∏ö‡∏∏‡∏£‡∏µ'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '3':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏Å‡∏≤‡∏ç‡∏à‡∏ô‡∏ö‡∏∏‡∏£‡∏µ'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '4':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏∏‡∏£‡∏µ'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '5':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏õ‡∏£‡∏∞‡∏à‡∏ß‡∏ö‡∏Ñ‡∏µ‡∏£‡∏µ‡∏Ç‡∏±‡∏ô‡∏ò‡πå'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)


class Eastern(nextcord.ui.Select):
    def __init__(self):
        options = [
            nextcord.SelectOption(
                label='‡∏ä‡∏•‡∏ö‡∏∏‡∏£‡∏µ',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏ä‡∏•‡∏ö‡∏∏‡∏£‡∏µ',
                emoji='üåç',
                value='1',
            ),
            nextcord.SelectOption(
                label='‡∏£‡∏∞‡∏¢‡∏≠‡∏á',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏£‡∏∞‡∏¢‡∏≠‡∏á',
                emoji='üåç',
                value='2',
            ),
            nextcord.SelectOption(
                label='‡∏à‡∏±‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏à‡∏±‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ',
                emoji='üåç',
                value='3',
            ),
            nextcord.SelectOption(
                label='‡∏ï‡∏£‡∏≤‡∏î',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏ï‡∏£‡∏≤‡∏î',
                emoji='üåç',
                value='4',
            ),
            nextcord.SelectOption(
                label='‡∏â‡∏∞‡πÄ‡∏ä‡∏¥‡∏á‡πÄ‡∏ó‡∏£‡∏≤',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏â‡∏∞‡πÄ‡∏ä‡∏¥‡∏á‡πÄ‡∏ó‡∏£‡∏≤',
                emoji='üåç',
                value='5',
            ),
            nextcord.SelectOption(
                label='‡∏õ‡∏£‡∏≤‡∏à‡∏µ‡∏ô‡∏ö‡∏∏‡∏£‡∏µ',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏õ‡∏£‡∏≤‡∏à‡∏µ‡∏ô‡∏ö‡∏∏‡∏£‡∏µ',
                emoji='üåç',
                value='6',
            ),
            nextcord.SelectOption(
                label='‡∏™‡∏£‡∏∞‡πÅ‡∏Å‡πâ‡∏ß',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏™‡∏£‡∏∞‡πÅ‡∏Å‡πâ‡∏ß',
                emoji='üåç',
                value='7',
            ),
        ]
        super().__init__(placeholder='‡πÇ‡∏õ‡∏£‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏π‡πà', options=options, custom_id='selected-contryzone')
        # embed = nextcord.Embed(color=0x00f7ff)
    
    async def callback(self, interaction: nextcord.Interaction):
        zonelist = ['‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà','‡∏ô‡∏Ñ‡∏£‡∏£‡∏≤‡∏ä‡∏™‡∏µ‡∏°‡∏≤','‡∏Å‡∏≤‡∏ç‡∏à‡∏ô‡∏ö‡∏∏‡∏£‡∏µ','‡∏ï‡∏≤‡∏Å','‡∏≠‡∏∏‡∏ö‡∏•‡∏£‡∏≤‡∏ä‡∏ò‡∏≤‡∏ô‡∏µ','‡∏™‡∏∏‡∏£‡∏≤‡∏©‡∏é‡∏£‡πå‡∏ò‡∏≤‡∏ô‡∏µ','‡∏ä‡∏±‡∏¢‡∏†‡∏π‡∏°‡∏¥','‡πÅ‡∏°‡πà‡∏Æ‡πà‡∏≠‡∏á‡∏™‡∏≠‡∏ô',
        '‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏π‡∏£‡∏ì‡πå','‡∏•‡∏≥‡∏õ‡∏≤‡∏á','‡∏≠‡∏∏‡∏î‡∏£‡∏ò‡∏≤‡∏ô‡∏µ','‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡∏£‡∏≤‡∏¢','‡∏ô‡πà‡∏≤‡∏ô','‡πÄ‡∏•‡∏¢','‡∏Ç‡∏≠‡∏ô‡πÅ‡∏Å‡πà‡∏ô','‡∏û‡∏¥‡∏©‡∏ì‡∏∏‡πÇ‡∏•‡∏Å','‡∏ö‡∏∏‡∏£‡∏µ‡∏£‡∏±‡∏°‡∏¢‡πå','‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏ò‡∏£‡∏£‡∏°‡∏£‡∏≤‡∏ä',
        '‡∏™‡∏Å‡∏•‡∏ô‡∏Ñ‡∏£','‡∏ô‡∏Ñ‡∏£‡∏™‡∏ß‡∏£‡∏£‡∏Ñ‡πå','‡∏®‡∏£‡∏µ‡∏™‡∏∞‡πÄ‡∏Å‡∏©','‡∏Å‡∏≥‡πÅ‡∏û‡∏á‡πÄ‡∏û‡∏ä‡∏£','‡∏£‡πâ‡∏≠‡∏¢‡πÄ‡∏≠‡πá‡∏î','‡∏™‡∏∏‡∏£‡∏¥‡∏ô‡∏ó‡∏£‡πå','‡∏≠‡∏∏‡∏ï‡∏£‡∏î‡∏¥‡∏ï‡∏ñ‡πå','‡∏™‡∏á‡∏Ç‡∏•‡∏≤','‡∏™‡∏£‡∏∞‡πÅ‡∏Å‡πâ‡∏ß',
        '‡∏Å‡∏≤‡∏¨‡∏™‡∏¥‡∏ô‡∏ò‡∏∏‡πå','‡∏≠‡∏∏‡∏ó‡∏±‡∏¢‡∏ò‡∏≤‡∏ô‡∏µ','‡∏™‡∏∏‡πÇ‡∏Ç‡∏ó‡∏±‡∏¢','‡πÅ‡∏û‡∏£‡πà','‡∏õ‡∏£‡∏∞‡∏à‡∏ß‡∏ö‡∏Ñ‡∏µ‡∏£‡∏µ‡∏Ç‡∏±‡∏ô‡∏ò‡πå','‡∏à‡∏±‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ','‡∏û‡∏∞‡πÄ‡∏¢‡∏≤','‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏∏‡∏£‡∏µ','‡∏•‡∏û‡∏ö‡∏∏‡∏£‡∏µ','‡∏ä‡∏∏‡∏°‡∏û‡∏£',
        '‡∏ô‡∏Ñ‡∏£‡∏û‡∏ô‡∏°','‡∏™‡∏∏‡∏û‡∏£‡∏£‡∏ì‡∏ö‡∏∏‡∏£‡∏µ','‡∏â‡∏∞‡πÄ‡∏ä‡∏¥‡∏á‡πÄ‡∏ó‡∏£‡∏≤','‡∏°‡∏´‡∏≤‡∏™‡∏≤‡∏£‡∏Ñ‡∏≤‡∏°','‡∏£‡∏≤‡∏ä‡∏ö‡∏∏‡∏£‡∏µ','‡∏ï‡∏£‡∏±‡∏á','‡∏õ‡∏£‡∏≤‡∏à‡∏µ‡∏ô‡∏ö‡∏∏‡∏£‡∏µ','‡∏Å‡∏£‡∏∞‡∏ö‡∏µ‡πà','‡∏û‡∏¥‡∏à‡∏¥‡∏ï‡∏£',
        '‡∏¢‡∏∞‡∏•‡∏≤','‡∏•‡∏≥‡∏û‡∏π‡∏ô','‡∏ô‡∏£‡∏≤‡∏ò‡∏¥‡∏ß‡∏≤‡∏™','‡∏ä‡∏•‡∏ö‡∏∏‡∏£‡∏µ','‡∏°‡∏∏‡∏Å‡∏î‡∏≤‡∏´‡∏≤‡∏£','‡∏ö‡∏∂‡∏á‡∏Å‡∏≤‡∏¨','‡∏û‡∏±‡∏á‡∏á‡∏≤','‡∏¢‡πÇ‡∏™‡∏ò‡∏£','‡∏´‡∏ô‡∏≠‡∏á‡∏ö‡∏±‡∏ß‡∏•‡∏≥‡∏†‡∏π','‡∏™‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏µ',
        '‡∏£‡∏∞‡∏¢‡∏≠‡∏á','‡∏û‡∏±‡∏ó‡∏•‡∏∏‡∏á','‡∏£‡∏∞‡∏ô‡∏≠‡∏á','‡∏≠‡∏≥‡∏ô‡∏≤‡∏à‡πÄ‡∏à‡∏£‡∏¥‡∏ç','‡∏´‡∏ô‡∏≠‡∏á‡∏Ñ‡∏≤‡∏¢','‡∏ï‡∏£‡∏≤‡∏î','‡∏û‡∏£‡∏∞‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏≠‡∏¢‡∏∏‡∏ò‡∏¢‡∏≤','‡∏™‡∏ï‡∏π‡∏•','‡∏ä‡∏±‡∏¢‡∏ô‡∏≤‡∏ó','‡∏ô‡∏Ñ‡∏£‡∏õ‡∏ê‡∏°',
        '‡∏ô‡∏Ñ‡∏£‡∏ô‡∏≤‡∏¢‡∏Å','‡∏õ‡∏±‡∏ï‡∏ï‡∏≤‡∏ô‡∏µ','‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£','‡∏õ‡∏ó‡∏∏‡∏°‡∏ò‡∏≤‡∏ô‡∏µ','‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏õ‡∏£‡∏≤‡∏Å‡∏≤‡∏£','‡∏≠‡πà‡∏≤‡∏á‡∏ó‡∏≠‡∏á','‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏≤‡∏Ñ‡∏£','‡∏™‡∏¥‡∏á‡∏´‡πå‡∏ö‡∏∏‡∏£‡∏µ','‡∏ô‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ',
        '‡∏†‡∏π‡πÄ‡∏Å‡πá‡∏ï','‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏á‡∏Ñ‡∏£‡∏≤‡∏°']
        if self.values[0] == '1':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏ä‡∏•‡∏ö‡∏∏‡∏£‡∏µ',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '2':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏£‡∏∞‡∏¢‡∏≠‡∏á',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '3':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏à‡∏±‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '4':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏ï‡∏£‡∏≤‡∏î',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '5':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏â‡∏∞‡πÄ‡∏ä‡∏¥‡∏á‡πÄ‡∏ó‡∏£‡∏≤',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '6':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏õ‡∏£‡∏≤‡∏à‡∏µ‡∏ô‡∏ö‡∏∏‡∏£‡∏µ',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '7':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏™‡∏£‡∏∞‡πÅ‡∏Å‡πâ‡∏ß',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)

class Eastern2(nextcord.ui.Select):
    def __init__(self):
        options = [
            nextcord.SelectOption(
                label='‡∏ä‡∏•‡∏ö‡∏∏‡∏£‡∏µ',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏ä‡∏•‡∏ö‡∏∏‡∏£‡∏µ',
                emoji='üåç',
                value='1',
            ),
            nextcord.SelectOption(
                label='‡∏£‡∏∞‡∏¢‡∏≠‡∏á',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏£‡∏∞‡∏¢‡∏≠‡∏á',
                emoji='üåç',
                value='2',
            ),
            nextcord.SelectOption(
                label='‡∏à‡∏±‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏à‡∏±‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ',
                emoji='üåç',
                value='3',
            ),
            nextcord.SelectOption(
                label='‡∏ï‡∏£‡∏≤‡∏î',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏ï‡∏£‡∏≤‡∏î',
                emoji='üåç',
                value='4',
            ),
            nextcord.SelectOption(
                label='‡∏â‡∏∞‡πÄ‡∏ä‡∏¥‡∏á‡πÄ‡∏ó‡∏£‡∏≤',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏â‡∏∞‡πÄ‡∏ä‡∏¥‡∏á‡πÄ‡∏ó‡∏£‡∏≤',
                emoji='üåç',
                value='5',
            ),
            nextcord.SelectOption(
                label='‡∏õ‡∏£‡∏≤‡∏à‡∏µ‡∏ô‡∏ö‡∏∏‡∏£‡∏µ',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏õ‡∏£‡∏≤‡∏à‡∏µ‡∏ô‡∏ö‡∏∏‡∏£‡∏µ',
                emoji='üåç',
                value='6',
            ),
            nextcord.SelectOption(
                label='‡∏™‡∏£‡∏∞‡πÅ‡∏Å‡πâ‡∏ß',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏™‡∏£‡∏∞‡πÅ‡∏Å‡πâ‡∏ß',
                emoji='üåç',
                value='7',
            ),
        ]
        super().__init__(placeholder='‡πÇ‡∏õ‡∏£‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏π‡πà', options=options, custom_id='selected-contryzone')
        # embed = nextcord.Embed(color=0x00f7ff)
    
    async def callback(self, interaction: nextcord.Interaction):
        zonelist = ['‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà','‡∏ô‡∏Ñ‡∏£‡∏£‡∏≤‡∏ä‡∏™‡∏µ‡∏°‡∏≤','‡∏Å‡∏≤‡∏ç‡∏à‡∏ô‡∏ö‡∏∏‡∏£‡∏µ','‡∏ï‡∏≤‡∏Å','‡∏≠‡∏∏‡∏ö‡∏•‡∏£‡∏≤‡∏ä‡∏ò‡∏≤‡∏ô‡∏µ','‡∏™‡∏∏‡∏£‡∏≤‡∏©‡∏é‡∏£‡πå‡∏ò‡∏≤‡∏ô‡∏µ','‡∏ä‡∏±‡∏¢‡∏†‡∏π‡∏°‡∏¥','‡πÅ‡∏°‡πà‡∏Æ‡πà‡∏≠‡∏á‡∏™‡∏≠‡∏ô',
        '‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏π‡∏£‡∏ì‡πå','‡∏•‡∏≥‡∏õ‡∏≤‡∏á','‡∏≠‡∏∏‡∏î‡∏£‡∏ò‡∏≤‡∏ô‡∏µ','‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡∏£‡∏≤‡∏¢','‡∏ô‡πà‡∏≤‡∏ô','‡πÄ‡∏•‡∏¢','‡∏Ç‡∏≠‡∏ô‡πÅ‡∏Å‡πà‡∏ô','‡∏û‡∏¥‡∏©‡∏ì‡∏∏‡πÇ‡∏•‡∏Å','‡∏ö‡∏∏‡∏£‡∏µ‡∏£‡∏±‡∏°‡∏¢‡πå','‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏ò‡∏£‡∏£‡∏°‡∏£‡∏≤‡∏ä',
        '‡∏™‡∏Å‡∏•‡∏ô‡∏Ñ‡∏£','‡∏ô‡∏Ñ‡∏£‡∏™‡∏ß‡∏£‡∏£‡∏Ñ‡πå','‡∏®‡∏£‡∏µ‡∏™‡∏∞‡πÄ‡∏Å‡∏©','‡∏Å‡∏≥‡πÅ‡∏û‡∏á‡πÄ‡∏û‡∏ä‡∏£','‡∏£‡πâ‡∏≠‡∏¢‡πÄ‡∏≠‡πá‡∏î','‡∏™‡∏∏‡∏£‡∏¥‡∏ô‡∏ó‡∏£‡πå','‡∏≠‡∏∏‡∏ï‡∏£‡∏î‡∏¥‡∏ï‡∏ñ‡πå','‡∏™‡∏á‡∏Ç‡∏•‡∏≤','‡∏™‡∏£‡∏∞‡πÅ‡∏Å‡πâ‡∏ß',
        '‡∏Å‡∏≤‡∏¨‡∏™‡∏¥‡∏ô‡∏ò‡∏∏‡πå','‡∏≠‡∏∏‡∏ó‡∏±‡∏¢‡∏ò‡∏≤‡∏ô‡∏µ','‡∏™‡∏∏‡πÇ‡∏Ç‡∏ó‡∏±‡∏¢','‡πÅ‡∏û‡∏£‡πà','‡∏õ‡∏£‡∏∞‡∏à‡∏ß‡∏ö‡∏Ñ‡∏µ‡∏£‡∏µ‡∏Ç‡∏±‡∏ô‡∏ò‡πå','‡∏à‡∏±‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ','‡∏û‡∏∞‡πÄ‡∏¢‡∏≤','‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏∏‡∏£‡∏µ','‡∏•‡∏û‡∏ö‡∏∏‡∏£‡∏µ','‡∏ä‡∏∏‡∏°‡∏û‡∏£',
        '‡∏ô‡∏Ñ‡∏£‡∏û‡∏ô‡∏°','‡∏™‡∏∏‡∏û‡∏£‡∏£‡∏ì‡∏ö‡∏∏‡∏£‡∏µ','‡∏â‡∏∞‡πÄ‡∏ä‡∏¥‡∏á‡πÄ‡∏ó‡∏£‡∏≤','‡∏°‡∏´‡∏≤‡∏™‡∏≤‡∏£‡∏Ñ‡∏≤‡∏°','‡∏£‡∏≤‡∏ä‡∏ö‡∏∏‡∏£‡∏µ','‡∏ï‡∏£‡∏±‡∏á','‡∏õ‡∏£‡∏≤‡∏à‡∏µ‡∏ô‡∏ö‡∏∏‡∏£‡∏µ','‡∏Å‡∏£‡∏∞‡∏ö‡∏µ‡πà','‡∏û‡∏¥‡∏à‡∏¥‡∏ï‡∏£',
        '‡∏¢‡∏∞‡∏•‡∏≤','‡∏•‡∏≥‡∏û‡∏π‡∏ô','‡∏ô‡∏£‡∏≤‡∏ò‡∏¥‡∏ß‡∏≤‡∏™','‡∏ä‡∏•‡∏ö‡∏∏‡∏£‡∏µ','‡∏°‡∏∏‡∏Å‡∏î‡∏≤‡∏´‡∏≤‡∏£','‡∏ö‡∏∂‡∏á‡∏Å‡∏≤‡∏¨','‡∏û‡∏±‡∏á‡∏á‡∏≤','‡∏¢‡πÇ‡∏™‡∏ò‡∏£','‡∏´‡∏ô‡∏≠‡∏á‡∏ö‡∏±‡∏ß‡∏•‡∏≥‡∏†‡∏π','‡∏™‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏µ',
        '‡∏£‡∏∞‡∏¢‡∏≠‡∏á','‡∏û‡∏±‡∏ó‡∏•‡∏∏‡∏á','‡∏£‡∏∞‡∏ô‡∏≠‡∏á','‡∏≠‡∏≥‡∏ô‡∏≤‡∏à‡πÄ‡∏à‡∏£‡∏¥‡∏ç','‡∏´‡∏ô‡∏≠‡∏á‡∏Ñ‡∏≤‡∏¢','‡∏ï‡∏£‡∏≤‡∏î','‡∏û‡∏£‡∏∞‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏≠‡∏¢‡∏∏‡∏ò‡∏¢‡∏≤','‡∏™‡∏ï‡∏π‡∏•','‡∏ä‡∏±‡∏¢‡∏ô‡∏≤‡∏ó','‡∏ô‡∏Ñ‡∏£‡∏õ‡∏ê‡∏°',
        '‡∏ô‡∏Ñ‡∏£‡∏ô‡∏≤‡∏¢‡∏Å','‡∏õ‡∏±‡∏ï‡∏ï‡∏≤‡∏ô‡∏µ','‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£','‡∏õ‡∏ó‡∏∏‡∏°‡∏ò‡∏≤‡∏ô‡∏µ','‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏õ‡∏£‡∏≤‡∏Å‡∏≤‡∏£','‡∏≠‡πà‡∏≤‡∏á‡∏ó‡∏≠‡∏á','‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏≤‡∏Ñ‡∏£','‡∏™‡∏¥‡∏á‡∏´‡πå‡∏ö‡∏∏‡∏£‡∏µ','‡∏ô‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ',
        '‡∏†‡∏π‡πÄ‡∏Å‡πá‡∏ï','‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏á‡∏Ñ‡∏£‡∏≤‡∏°']
        if self.values[0] == '1':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏ä‡∏•‡∏ö‡∏∏‡∏£‡∏µ'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '2':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏£‡∏∞‡∏¢‡∏≠‡∏á'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '3':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏à‡∏±‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '4':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏ï‡∏£‡∏≤‡∏î'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '5':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏â‡∏∞‡πÄ‡∏ä‡∏¥‡∏á‡πÄ‡∏ó‡∏£‡∏≤'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '6':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏õ‡∏£‡∏≤‡∏à‡∏µ‡∏ô‡∏ö‡∏∏‡∏£‡∏µ'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '7':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏™‡∏£‡∏∞‡πÅ‡∏Å‡πâ‡∏ß'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)



class South(nextcord.ui.Select):
    def __init__(self):
        options = [
            nextcord.SelectOption(
                label='‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏ò‡∏£‡∏£‡∏°‡∏£‡∏≤‡∏ä',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏ò‡∏£‡∏£‡∏°‡∏£‡∏≤‡∏ä',
                emoji='üåç',
                value='1',
            ),
            nextcord.SelectOption(
                label='‡∏Å‡∏£‡∏∞‡∏ö‡∏µ‡πà',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏Å‡∏£‡∏∞‡∏ö‡∏µ‡πà',
                emoji='üåç',
                value='2',
            ),
            nextcord.SelectOption(
                label='‡∏û‡∏±‡∏á‡∏á‡∏≤',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏û‡∏±‡∏á‡∏á‡∏≤',
                emoji='üåç',
                value='3',
            ),
            nextcord.SelectOption(
                label='‡∏†‡∏π‡πÄ‡∏Å‡πá‡∏ï',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏†‡∏π‡πÄ‡∏Å‡πá‡∏ï',
                emoji='üåç',
                value='4',
            ),
            nextcord.SelectOption(
                label='‡∏™‡∏∏‡∏£‡∏≤‡∏©‡∏è‡∏£‡πå‡∏ò‡∏≤‡∏ô‡∏µ',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏™‡∏∏‡∏£‡∏≤‡∏©‡∏è‡∏£‡πå‡∏ò‡∏≤‡∏ô‡∏µ',
                emoji='üåç',
                value='5',
            ),
            nextcord.SelectOption(
                label='‡∏£‡∏∞‡∏ô‡∏≠‡∏á',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏£‡∏∞‡∏ô‡∏≠‡∏á',
                emoji='üåç',
                value='6',
            ),
            nextcord.SelectOption(
                label='‡∏ä‡∏∏‡∏°‡∏û‡∏£',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏ä‡∏∏‡∏°‡∏û‡∏£',
                emoji='üåç',
                value='7',
            ),
            nextcord.SelectOption(
                label='‡∏™‡∏á‡∏Ç‡∏•‡∏≤',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏™‡∏á‡∏Ç‡∏•‡∏≤',
                emoji='üåç',
                value='8',
            ),
            nextcord.SelectOption(
                label='‡∏™‡∏ï‡∏π‡∏•',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏™‡∏ï‡∏π‡∏•',
                emoji='üåç',
                value='9',
            ),
            nextcord.SelectOption(
                label='‡∏ï‡∏£‡∏±‡∏á',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏ï‡∏£‡∏±‡∏á',
                emoji='üåç',
                value='10',
            ),
            nextcord.SelectOption(
                label='‡∏û‡∏±‡∏ó‡∏•‡∏∏‡∏á',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏û‡∏±‡∏ó‡∏•‡∏∏‡∏á',
                emoji='üåç',
                value='11',
            ),
            nextcord.SelectOption(
                label='‡∏õ‡∏±‡∏ï‡∏ï‡∏≤‡∏ô‡∏µ',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏õ‡∏±‡∏ï‡∏ï‡∏≤‡∏ô‡∏µ',
                emoji='üåç',
                value='12',
            ),
            nextcord.SelectOption(
                label='‡∏¢‡∏∞‡∏•‡∏≤',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏¢‡∏∞‡∏•‡∏≤',
                emoji='üåç',
                value='13',
            ),
            nextcord.SelectOption(
                label='‡∏ô‡∏£‡∏≤‡∏ò‡∏¥‡∏ß‡∏≤‡∏™',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏ô‡∏£‡∏≤‡∏ò‡∏¥‡∏ß‡∏≤‡∏™',
                emoji='üåç',
                value='14',
            ),
        ]
        super().__init__(placeholder='‡πÇ‡∏õ‡∏£‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏π‡πà', options=options, custom_id='selected-contryzone')
        # embed = nextcord.Embed(color=0x00f7ff)
    
    async def callback(self, interaction: nextcord.Interaction):
        zonelist = ['‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà','‡∏ô‡∏Ñ‡∏£‡∏£‡∏≤‡∏ä‡∏™‡∏µ‡∏°‡∏≤','‡∏Å‡∏≤‡∏ç‡∏à‡∏ô‡∏ö‡∏∏‡∏£‡∏µ','‡∏ï‡∏≤‡∏Å','‡∏≠‡∏∏‡∏ö‡∏•‡∏£‡∏≤‡∏ä‡∏ò‡∏≤‡∏ô‡∏µ','‡∏™‡∏∏‡∏£‡∏≤‡∏©‡∏é‡∏£‡πå‡∏ò‡∏≤‡∏ô‡∏µ','‡∏ä‡∏±‡∏¢‡∏†‡∏π‡∏°‡∏¥','‡πÅ‡∏°‡πà‡∏Æ‡πà‡∏≠‡∏á‡∏™‡∏≠‡∏ô',
        '‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏π‡∏£‡∏ì‡πå','‡∏•‡∏≥‡∏õ‡∏≤‡∏á','‡∏≠‡∏∏‡∏î‡∏£‡∏ò‡∏≤‡∏ô‡∏µ','‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡∏£‡∏≤‡∏¢','‡∏ô‡πà‡∏≤‡∏ô','‡πÄ‡∏•‡∏¢','‡∏Ç‡∏≠‡∏ô‡πÅ‡∏Å‡πà‡∏ô','‡∏û‡∏¥‡∏©‡∏ì‡∏∏‡πÇ‡∏•‡∏Å','‡∏ö‡∏∏‡∏£‡∏µ‡∏£‡∏±‡∏°‡∏¢‡πå','‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏ò‡∏£‡∏£‡∏°‡∏£‡∏≤‡∏ä',
        '‡∏™‡∏Å‡∏•‡∏ô‡∏Ñ‡∏£','‡∏ô‡∏Ñ‡∏£‡∏™‡∏ß‡∏£‡∏£‡∏Ñ‡πå','‡∏®‡∏£‡∏µ‡∏™‡∏∞‡πÄ‡∏Å‡∏©','‡∏Å‡∏≥‡πÅ‡∏û‡∏á‡πÄ‡∏û‡∏ä‡∏£','‡∏£‡πâ‡∏≠‡∏¢‡πÄ‡∏≠‡πá‡∏î','‡∏™‡∏∏‡∏£‡∏¥‡∏ô‡∏ó‡∏£‡πå','‡∏≠‡∏∏‡∏ï‡∏£‡∏î‡∏¥‡∏ï‡∏ñ‡πå','‡∏™‡∏á‡∏Ç‡∏•‡∏≤','‡∏™‡∏£‡∏∞‡πÅ‡∏Å‡πâ‡∏ß',
        '‡∏Å‡∏≤‡∏¨‡∏™‡∏¥‡∏ô‡∏ò‡∏∏‡πå','‡∏≠‡∏∏‡∏ó‡∏±‡∏¢‡∏ò‡∏≤‡∏ô‡∏µ','‡∏™‡∏∏‡πÇ‡∏Ç‡∏ó‡∏±‡∏¢','‡πÅ‡∏û‡∏£‡πà','‡∏õ‡∏£‡∏∞‡∏à‡∏ß‡∏ö‡∏Ñ‡∏µ‡∏£‡∏µ‡∏Ç‡∏±‡∏ô‡∏ò‡πå','‡∏à‡∏±‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ','‡∏û‡∏∞‡πÄ‡∏¢‡∏≤','‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏∏‡∏£‡∏µ','‡∏•‡∏û‡∏ö‡∏∏‡∏£‡∏µ','‡∏ä‡∏∏‡∏°‡∏û‡∏£',
        '‡∏ô‡∏Ñ‡∏£‡∏û‡∏ô‡∏°','‡∏™‡∏∏‡∏û‡∏£‡∏£‡∏ì‡∏ö‡∏∏‡∏£‡∏µ','‡∏â‡∏∞‡πÄ‡∏ä‡∏¥‡∏á‡πÄ‡∏ó‡∏£‡∏≤','‡∏°‡∏´‡∏≤‡∏™‡∏≤‡∏£‡∏Ñ‡∏≤‡∏°','‡∏£‡∏≤‡∏ä‡∏ö‡∏∏‡∏£‡∏µ','‡∏ï‡∏£‡∏±‡∏á','‡∏õ‡∏£‡∏≤‡∏à‡∏µ‡∏ô‡∏ö‡∏∏‡∏£‡∏µ','‡∏Å‡∏£‡∏∞‡∏ö‡∏µ‡πà','‡∏û‡∏¥‡∏à‡∏¥‡∏ï‡∏£',
        '‡∏¢‡∏∞‡∏•‡∏≤','‡∏•‡∏≥‡∏û‡∏π‡∏ô','‡∏ô‡∏£‡∏≤‡∏ò‡∏¥‡∏ß‡∏≤‡∏™','‡∏ä‡∏•‡∏ö‡∏∏‡∏£‡∏µ','‡∏°‡∏∏‡∏Å‡∏î‡∏≤‡∏´‡∏≤‡∏£','‡∏ö‡∏∂‡∏á‡∏Å‡∏≤‡∏¨','‡∏û‡∏±‡∏á‡∏á‡∏≤','‡∏¢‡πÇ‡∏™‡∏ò‡∏£','‡∏´‡∏ô‡∏≠‡∏á‡∏ö‡∏±‡∏ß‡∏•‡∏≥‡∏†‡∏π','‡∏™‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏µ',
        '‡∏£‡∏∞‡∏¢‡∏≠‡∏á','‡∏û‡∏±‡∏ó‡∏•‡∏∏‡∏á','‡∏£‡∏∞‡∏ô‡∏≠‡∏á','‡∏≠‡∏≥‡∏ô‡∏≤‡∏à‡πÄ‡∏à‡∏£‡∏¥‡∏ç','‡∏´‡∏ô‡∏≠‡∏á‡∏Ñ‡∏≤‡∏¢','‡∏ï‡∏£‡∏≤‡∏î','‡∏û‡∏£‡∏∞‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏≠‡∏¢‡∏∏‡∏ò‡∏¢‡∏≤','‡∏™‡∏ï‡∏π‡∏•','‡∏ä‡∏±‡∏¢‡∏ô‡∏≤‡∏ó','‡∏ô‡∏Ñ‡∏£‡∏õ‡∏ê‡∏°',
        '‡∏ô‡∏Ñ‡∏£‡∏ô‡∏≤‡∏¢‡∏Å','‡∏õ‡∏±‡∏ï‡∏ï‡∏≤‡∏ô‡∏µ','‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£','‡∏õ‡∏ó‡∏∏‡∏°‡∏ò‡∏≤‡∏ô‡∏µ','‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏õ‡∏£‡∏≤‡∏Å‡∏≤‡∏£','‡∏≠‡πà‡∏≤‡∏á‡∏ó‡∏≠‡∏á','‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏≤‡∏Ñ‡∏£','‡∏™‡∏¥‡∏á‡∏´‡πå‡∏ö‡∏∏‡∏£‡∏µ','‡∏ô‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ',
        '‡∏†‡∏π‡πÄ‡∏Å‡πá‡∏ï','‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏á‡∏Ñ‡∏£‡∏≤‡∏°']
        if self.values[0] == '1':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏ò‡∏£‡∏£‡∏°‡∏£‡∏≤‡∏ä',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '2':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏Å‡∏£‡∏∞‡∏ö‡∏µ‡πà',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '3':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏û‡∏±‡∏á‡∏á‡∏≤',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '4':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏†‡∏π‡πÄ‡∏Å‡πá‡∏ï',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '5':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏™‡∏∏‡∏£‡∏≤‡∏©‡∏è‡∏£‡πå‡∏ò‡∏≤‡∏ô‡∏µ',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '6':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏£‡∏∞‡∏ô‡∏≠‡∏á',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '7':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏ä‡∏∏‡∏°‡∏û‡∏£',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '8':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏™‡∏á‡∏Ç‡∏•‡∏≤',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '9':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏™‡∏ï‡∏π‡∏•',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '10':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏ï‡∏£‡∏±‡∏á',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '11':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏û‡∏±‡∏ó‡∏•‡∏∏‡∏á',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '12':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏õ‡∏±‡∏ï‡∏ï‡∏≤‡∏ô‡∏µ',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '13':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏¢‡∏∞‡∏•‡∏≤',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '14':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'province': '‡∏ô‡∏£‡∏≤‡∏ò‡∏¥‡∏ß‡∏≤‡∏™',
                    'unique': str(data['unique'])
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)

class South2(nextcord.ui.Select):
    def __init__(self):
        options = [
            nextcord.SelectOption(
                label='‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏ò‡∏£‡∏£‡∏°‡∏£‡∏≤‡∏ä',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏ò‡∏£‡∏£‡∏°‡∏£‡∏≤‡∏ä',
                emoji='üåç',
                value='1',
            ),
            nextcord.SelectOption(
                label='‡∏Å‡∏£‡∏∞‡∏ö‡∏µ‡πà',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏Å‡∏£‡∏∞‡∏ö‡∏µ‡πà',
                emoji='üåç',
                value='2',
            ),
            nextcord.SelectOption(
                label='‡∏û‡∏±‡∏á‡∏á‡∏≤',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏û‡∏±‡∏á‡∏á‡∏≤',
                emoji='üåç',
                value='3',
            ),
            nextcord.SelectOption(
                label='‡∏†‡∏π‡πÄ‡∏Å‡πá‡∏ï',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏†‡∏π‡πÄ‡∏Å‡πá‡∏ï',
                emoji='üåç',
                value='4',
            ),
            nextcord.SelectOption(
                label='‡∏™‡∏∏‡∏£‡∏≤‡∏©‡∏è‡∏£‡πå‡∏ò‡∏≤‡∏ô‡∏µ',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏™‡∏∏‡∏£‡∏≤‡∏©‡∏è‡∏£‡πå‡∏ò‡∏≤‡∏ô‡∏µ',
                emoji='üåç',
                value='5',
            ),
            nextcord.SelectOption(
                label='‡∏£‡∏∞‡∏ô‡∏≠‡∏á',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏£‡∏∞‡∏ô‡∏≠‡∏á',
                emoji='üåç',
                value='6',
            ),
            nextcord.SelectOption(
                label='‡∏ä‡∏∏‡∏°‡∏û‡∏£',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏ä‡∏∏‡∏°‡∏û‡∏£',
                emoji='üåç',
                value='7',
            ),
            nextcord.SelectOption(
                label='‡∏™‡∏á‡∏Ç‡∏•‡∏≤',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏™‡∏á‡∏Ç‡∏•‡∏≤',
                emoji='üåç',
                value='8',
            ),
            nextcord.SelectOption(
                label='‡∏™‡∏ï‡∏π‡∏•',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏™‡∏ï‡∏π‡∏•',
                emoji='üåç',
                value='9',
            ),
            nextcord.SelectOption(
                label='‡∏ï‡∏£‡∏±‡∏á',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏ï‡∏£‡∏±‡∏á',
                emoji='üåç',
                value='10',
            ),
            nextcord.SelectOption(
                label='‡∏û‡∏±‡∏ó‡∏•‡∏∏‡∏á',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏û‡∏±‡∏ó‡∏•‡∏∏‡∏á',
                emoji='üåç',
                value='11',
            ),
            nextcord.SelectOption(
                label='‡∏õ‡∏±‡∏ï‡∏ï‡∏≤‡∏ô‡∏µ',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏õ‡∏±‡∏ï‡∏ï‡∏≤‡∏ô‡∏µ',
                emoji='üåç',
                value='12',
            ),
            nextcord.SelectOption(
                label='‡∏¢‡∏∞‡∏•‡∏≤',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏¢‡∏∞‡∏•‡∏≤',
                emoji='üåç',
                value='13',
            ),
            nextcord.SelectOption(
                label='‡∏ô‡∏£‡∏≤‡∏ò‡∏¥‡∏ß‡∏≤‡∏™',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ‡∏ô‡∏£‡∏≤‡∏ò‡∏¥‡∏ß‡∏≤‡∏™',
                emoji='üåç',
                value='14',
            ),
        ]
        super().__init__(placeholder='‡πÇ‡∏õ‡∏£‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏π‡πà', options=options, custom_id='selected-contryzone')
        # embed = nextcord.Embed(color=0x00f7ff)
    
    async def callback(self, interaction: nextcord.Interaction):
        zonelist = ['‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà','‡∏ô‡∏Ñ‡∏£‡∏£‡∏≤‡∏ä‡∏™‡∏µ‡∏°‡∏≤','‡∏Å‡∏≤‡∏ç‡∏à‡∏ô‡∏ö‡∏∏‡∏£‡∏µ','‡∏ï‡∏≤‡∏Å','‡∏≠‡∏∏‡∏ö‡∏•‡∏£‡∏≤‡∏ä‡∏ò‡∏≤‡∏ô‡∏µ','‡∏™‡∏∏‡∏£‡∏≤‡∏©‡∏é‡∏£‡πå‡∏ò‡∏≤‡∏ô‡∏µ','‡∏ä‡∏±‡∏¢‡∏†‡∏π‡∏°‡∏¥','‡πÅ‡∏°‡πà‡∏Æ‡πà‡∏≠‡∏á‡∏™‡∏≠‡∏ô',
        '‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏π‡∏£‡∏ì‡πå','‡∏•‡∏≥‡∏õ‡∏≤‡∏á','‡∏≠‡∏∏‡∏î‡∏£‡∏ò‡∏≤‡∏ô‡∏µ','‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡∏£‡∏≤‡∏¢','‡∏ô‡πà‡∏≤‡∏ô','‡πÄ‡∏•‡∏¢','‡∏Ç‡∏≠‡∏ô‡πÅ‡∏Å‡πà‡∏ô','‡∏û‡∏¥‡∏©‡∏ì‡∏∏‡πÇ‡∏•‡∏Å','‡∏ö‡∏∏‡∏£‡∏µ‡∏£‡∏±‡∏°‡∏¢‡πå','‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏ò‡∏£‡∏£‡∏°‡∏£‡∏≤‡∏ä',
        '‡∏™‡∏Å‡∏•‡∏ô‡∏Ñ‡∏£','‡∏ô‡∏Ñ‡∏£‡∏™‡∏ß‡∏£‡∏£‡∏Ñ‡πå','‡∏®‡∏£‡∏µ‡∏™‡∏∞‡πÄ‡∏Å‡∏©','‡∏Å‡∏≥‡πÅ‡∏û‡∏á‡πÄ‡∏û‡∏ä‡∏£','‡∏£‡πâ‡∏≠‡∏¢‡πÄ‡∏≠‡πá‡∏î','‡∏™‡∏∏‡∏£‡∏¥‡∏ô‡∏ó‡∏£‡πå','‡∏≠‡∏∏‡∏ï‡∏£‡∏î‡∏¥‡∏ï‡∏ñ‡πå','‡∏™‡∏á‡∏Ç‡∏•‡∏≤','‡∏™‡∏£‡∏∞‡πÅ‡∏Å‡πâ‡∏ß',
        '‡∏Å‡∏≤‡∏¨‡∏™‡∏¥‡∏ô‡∏ò‡∏∏‡πå','‡∏≠‡∏∏‡∏ó‡∏±‡∏¢‡∏ò‡∏≤‡∏ô‡∏µ','‡∏™‡∏∏‡πÇ‡∏Ç‡∏ó‡∏±‡∏¢','‡πÅ‡∏û‡∏£‡πà','‡∏õ‡∏£‡∏∞‡∏à‡∏ß‡∏ö‡∏Ñ‡∏µ‡∏£‡∏µ‡∏Ç‡∏±‡∏ô‡∏ò‡πå','‡∏à‡∏±‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ','‡∏û‡∏∞‡πÄ‡∏¢‡∏≤','‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏∏‡∏£‡∏µ','‡∏•‡∏û‡∏ö‡∏∏‡∏£‡∏µ','‡∏ä‡∏∏‡∏°‡∏û‡∏£',
        '‡∏ô‡∏Ñ‡∏£‡∏û‡∏ô‡∏°','‡∏™‡∏∏‡∏û‡∏£‡∏£‡∏ì‡∏ö‡∏∏‡∏£‡∏µ','‡∏â‡∏∞‡πÄ‡∏ä‡∏¥‡∏á‡πÄ‡∏ó‡∏£‡∏≤','‡∏°‡∏´‡∏≤‡∏™‡∏≤‡∏£‡∏Ñ‡∏≤‡∏°','‡∏£‡∏≤‡∏ä‡∏ö‡∏∏‡∏£‡∏µ','‡∏ï‡∏£‡∏±‡∏á','‡∏õ‡∏£‡∏≤‡∏à‡∏µ‡∏ô‡∏ö‡∏∏‡∏£‡∏µ','‡∏Å‡∏£‡∏∞‡∏ö‡∏µ‡πà','‡∏û‡∏¥‡∏à‡∏¥‡∏ï‡∏£',
        '‡∏¢‡∏∞‡∏•‡∏≤','‡∏•‡∏≥‡∏û‡∏π‡∏ô','‡∏ô‡∏£‡∏≤‡∏ò‡∏¥‡∏ß‡∏≤‡∏™','‡∏ä‡∏•‡∏ö‡∏∏‡∏£‡∏µ','‡∏°‡∏∏‡∏Å‡∏î‡∏≤‡∏´‡∏≤‡∏£','‡∏ö‡∏∂‡∏á‡∏Å‡∏≤‡∏¨','‡∏û‡∏±‡∏á‡∏á‡∏≤','‡∏¢‡πÇ‡∏™‡∏ò‡∏£','‡∏´‡∏ô‡∏≠‡∏á‡∏ö‡∏±‡∏ß‡∏•‡∏≥‡∏†‡∏π','‡∏™‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏µ',
        '‡∏£‡∏∞‡∏¢‡∏≠‡∏á','‡∏û‡∏±‡∏ó‡∏•‡∏∏‡∏á','‡∏£‡∏∞‡∏ô‡∏≠‡∏á','‡∏≠‡∏≥‡∏ô‡∏≤‡∏à‡πÄ‡∏à‡∏£‡∏¥‡∏ç','‡∏´‡∏ô‡∏≠‡∏á‡∏Ñ‡∏≤‡∏¢','‡∏ï‡∏£‡∏≤‡∏î','‡∏û‡∏£‡∏∞‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏≠‡∏¢‡∏∏‡∏ò‡∏¢‡∏≤','‡∏™‡∏ï‡∏π‡∏•','‡∏ä‡∏±‡∏¢‡∏ô‡∏≤‡∏ó','‡∏ô‡∏Ñ‡∏£‡∏õ‡∏ê‡∏°',
        '‡∏ô‡∏Ñ‡∏£‡∏ô‡∏≤‡∏¢‡∏Å','‡∏õ‡∏±‡∏ï‡∏ï‡∏≤‡∏ô‡∏µ','‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£','‡∏õ‡∏ó‡∏∏‡∏°‡∏ò‡∏≤‡∏ô‡∏µ','‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏õ‡∏£‡∏≤‡∏Å‡∏≤‡∏£','‡∏≠‡πà‡∏≤‡∏á‡∏ó‡∏≠‡∏á','‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏≤‡∏Ñ‡∏£','‡∏™‡∏¥‡∏á‡∏´‡πå‡∏ö‡∏∏‡∏£‡∏µ','‡∏ô‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ',
        '‡∏†‡∏π‡πÄ‡∏Å‡πá‡∏ï','‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏á‡∏Ñ‡∏£‡∏≤‡∏°']
        if self.values[0] == '1':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏ò‡∏£‡∏£‡∏°‡∏£‡∏≤‡∏ä'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '2':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏Å‡∏£‡∏∞‡∏ö‡∏µ‡πà'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '3':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏û‡∏±‡∏á‡∏á‡∏≤'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '4':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏†‡∏π‡πÄ‡∏Å‡πá‡∏ï'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '5':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏™‡∏∏‡∏£‡∏≤‡∏©‡∏è‡∏£‡πå‡∏ò‡∏≤‡∏ô‡∏µ'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '6':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏£‡∏∞‡∏ô‡∏≠‡∏á'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '7':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏ä‡∏∏‡∏°‡∏û‡∏£'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '8':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏™‡∏á‡∏Ç‡∏•‡∏≤'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '9':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏™‡∏ï‡∏π‡∏•'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '10':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏ï‡∏£‡∏±‡∏á'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '11':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏û‡∏±‡∏ó‡∏•‡∏∏‡∏á'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '12':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏õ‡∏±‡∏ï‡∏ï‡∏≤‡∏ô‡∏µ'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '13':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏¢‡∏∞‡∏•‡∏≤'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)
        if self.values[0] == '14':
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as userNew:
                atk = {
                    'userid': str(interaction.user.id),
                    'sex': str(data['sex']),
                    'age': str(data['age']),
                    'age2': str(data['age2']),
                    'province': '‡∏ô‡∏£‡∏≤‡∏ò‡∏¥‡∏ß‡∏≤‡∏™'
                }
                json.dump(atk, userNew, indent=4, ensure_ascii=False)
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!',color=0xa2ff00)
            return await interaction.response.edit_message(embed=embed, view=None, delete_after=1)




class V1(nextcord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
        self.add_item(North())

class V2(nextcord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
        self.add_item(Central())

class V3(nextcord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
        self.add_item(Esan())

class V4(nextcord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
        self.add_item(Western())

class V5(nextcord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
        self.add_item(Eastern())

class V6(nextcord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
        self.add_item(South())

class V11(nextcord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
        self.add_item(North2())

class V22(nextcord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
        self.add_item(Central2())

class V33(nextcord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
        self.add_item(Esan2())

class V44(nextcord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
        self.add_item(Western2())

class V55(nextcord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
        self.add_item(Eastern2())

class V66(nextcord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
        self.add_item(South2())

class SelectContry1(nextcord.ui.Select):
    def __init__(self):
        options = [
            nextcord.SelectOption(
                label='‡∏†‡∏≤‡∏Ñ‡πÄ‡∏´‡∏ô‡∏∑‡∏≠',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‡∏†‡∏≤‡∏Ñ‡πÄ‡∏´‡∏ô‡∏∑‡∏≠',
                emoji='üåç',
                value='1',
            ),
            nextcord.SelectOption(
                label='‡∏†‡∏≤‡∏Ñ‡∏Å‡∏•‡∏≤‡∏á',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‡∏†‡∏≤‡∏Ñ‡∏Å‡∏•‡∏≤‡∏á',
                emoji='üåç',
                value='2',
            ),
            nextcord.SelectOption(
                label='‡∏†‡∏≤‡∏Ñ‡∏≠‡∏µ‡∏™‡∏≤‡∏ô',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‡∏†‡∏≤‡∏Ñ‡∏≠‡∏µ‡∏™‡∏≤‡∏ô',
                emoji='üåç',
                value='3',
            ),
            nextcord.SelectOption(
                label='‡∏†‡∏≤‡∏Ñ‡∏ï‡∏∞‡∏ß‡∏±‡∏ô‡∏ï‡∏Å',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‡∏†‡∏≤‡∏Ñ‡∏ï‡∏∞‡∏ß‡∏±‡∏ô‡∏ï‡∏Å',
                emoji='üåç',
                value='4',
            ),
            nextcord.SelectOption(
                label='‡∏†‡∏≤‡∏Ñ‡∏ï‡∏∞‡∏ß‡∏±‡∏ô‡∏≠‡∏≠‡∏Å',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‡∏†‡∏≤‡∏Ñ‡∏ï‡∏∞‡∏ß‡∏±‡∏ô‡∏≠‡∏≠‡∏Å',
                emoji='üåç',
                value='5',
            ),
            nextcord.SelectOption(
                label='‡∏†‡∏≤‡∏Ñ‡πÉ‡∏ï‡πâ',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‡∏†‡∏≤‡∏Ñ‡πÉ‡∏ï‡πâ',
                emoji='üåç',
                value='6',
            ),
        ]
        super().__init__(placeholder='‡πÇ‡∏õ‡∏£‡∏î - ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏†‡∏≤‡∏Ñ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì', options=options, custom_id='selected-contry')
        # embed = nextcord.Embed(color=0x00f7ff)
    
    async def callback(self, interaction: nextcord.Interaction):
        if self.values[0] == '1':
            return await interaction.response.edit_message(view=V1())
        if self.values[0] == '2':
            return await interaction.response.edit_message(view=V2())
        if self.values[0] == '3':
            return await interaction.response.edit_message(view=V3())
        if self.values[0] == '4':
            return await interaction.response.edit_message(view=V4())
        if self.values[0] == '5':
            return await interaction.response.edit_message(view=V5())
        if self.values[0] == '6':
            return await interaction.response.edit_message(view=V6())

class SelectContry2(nextcord.ui.Select):
    def __init__(self):
        options = [
            nextcord.SelectOption(
                label='‡∏†‡∏≤‡∏Ñ‡πÄ‡∏´‡∏ô‡∏∑‡∏≠',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‡∏†‡∏≤‡∏Ñ‡πÄ‡∏´‡∏ô‡∏∑‡∏≠',
                emoji='üåç',
                value='1',
            ),
            nextcord.SelectOption(
                label='‡∏†‡∏≤‡∏Ñ‡∏Å‡∏•‡∏≤‡∏á',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‡∏†‡∏≤‡∏Ñ‡∏Å‡∏•‡∏≤‡∏á',
                emoji='üåç',
                value='2',
            ),
            nextcord.SelectOption(
                label='‡∏†‡∏≤‡∏Ñ‡∏≠‡∏µ‡∏™‡∏≤‡∏ô',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‡∏†‡∏≤‡∏Ñ‡∏≠‡∏µ‡∏™‡∏≤‡∏ô',
                emoji='üåç',
                value='3',
            ),
            nextcord.SelectOption(
                label='‡∏†‡∏≤‡∏Ñ‡∏ï‡∏∞‡∏ß‡∏±‡∏ô‡∏ï‡∏Å',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‡∏†‡∏≤‡∏Ñ‡∏ï‡∏∞‡∏ß‡∏±‡∏ô‡∏ï‡∏Å',
                emoji='üåç',
                value='4',
            ),
            nextcord.SelectOption(
                label='‡∏†‡∏≤‡∏Ñ‡∏ï‡∏∞‡∏ß‡∏±‡∏ô‡∏≠‡∏≠‡∏Å',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‡∏†‡∏≤‡∏Ñ‡∏ï‡∏∞‡∏ß‡∏±‡∏ô‡∏≠‡∏≠‡∏Å',
                emoji='üåç',
                value='5',
            ),
            nextcord.SelectOption(
                label='‡∏†‡∏≤‡∏Ñ‡πÉ‡∏ï‡πâ',
                description='‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‡∏†‡∏≤‡∏Ñ‡πÉ‡∏ï‡πâ',
                emoji='üåç',
                value='6',
            ),
        ]
        super().__init__(placeholder='‡πÇ‡∏õ‡∏£‡∏î - ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏†‡∏≤‡∏Ñ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì', options=options, custom_id='selected-contry')
        # embed = nextcord.Embed(color=0x00f7ff)
    
    async def callback(self, interaction: nextcord.Interaction):
        if self.values[0] == '1':
            return await interaction.response.edit_message(view=V11())
        if self.values[0] == '2':
            return await interaction.response.edit_message(view=V22())
        if self.values[0] == '3':
            return await interaction.response.edit_message(view=V33())
        if self.values[0] == '4':
            return await interaction.response.edit_message(view=V44())
        if self.values[0] == '5':
            return await interaction.response.edit_message(view=V55())
        if self.values[0] == '6':
            return await interaction.response.edit_message(view=V66())
    
class ViewProvince(nextcord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
        self.add_item(SelectContry1())

class ViewProvince2(nextcord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
        self.add_item(SelectContry2())

class SelectSex(nextcord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
        self.add_item(SelectSexAuth())

class SelectSex2(nextcord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
        self.add_item(SelectSexAuth2())

class ProfileSetting(nextcord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
    
    @nextcord.ui.button(label='‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏û‡∏®', style=nextcord.ButtonStyle.primary, custom_id='sexselection')
    async def sexselection(self, button, interaction: nextcord.Interaction):
        return await interaction.response.send_message(view=SelectSex(), ephemeral=True)

    
    @nextcord.ui.button(label='‡∏≠‡∏≤‡∏¢‡∏∏', style=nextcord.ButtonStyle.green, custom_id='ageselection')
    async def ageselection(self, button, interaction: nextcord.Interaction):
        return await interaction.response.send_modal(SetAge())
    
    @nextcord.ui.button(label='‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î', style=nextcord.ButtonStyle.red, custom_id='provinceselection')
    async def provinceselection(self, button, interaction: nextcord.Interaction):
        return await interaction.response.send_message(view=ViewProvince(), ephemeral=True)
    
    @nextcord.ui.button(label='‡∏ô‡∏¥‡∏™‡∏±‡∏¢', style=nextcord.ButtonStyle.primary, custom_id='uniqueselection')
    async def uniqueselection(self, button, interaction: nextcord.Interaction):
        return await interaction.response.send_modal(SetUnique())
    
    @nextcord.ui.button(label='‡∏£‡∏µ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•', row=1, style=nextcord.ButtonStyle.primary, custom_id='reloadselection')
    async def reloadselection(self, button, interaction: nextcord.Interaction):
        try:
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
        except FileNotFoundError:
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as newuser:
                action = {
                    'userid': f'{interaction.user.id}',
                    'sex': '',
                    'age': '',
                    'province': '',
                    'unique': ''
                }
                json.dump(action, newuser, indent=4, ensure_ascii=False)
        except json.decoder.JSONDecodeError:
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as newuser:
                action = {
                    'userid': f'{interaction.user.id}',
                    'sex': '',
                    'age': '',
                    'province': '',
                    'unique': ''
                }
                json.dump(action, newuser, indent=4, ensure_ascii=False)

        data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
        sex = str(data['sex'])
        age = str(data['age'])
        province = str(data['province'])
        unique = str(data['unique'])
        if sex == '':
            sex = '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤'
        if age == '':
            age = '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤'
        if province == '':
            province = '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤'
        if unique == '':
            unique = '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤'
        embed = nextcord.Embed(
            title='‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß',
            description=f'‡πÄ‡∏û‡∏® : {sex}\n‡∏≠‡∏≤‡∏¢‡∏∏ : {age}\n‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î : {province}\n‡∏ô‡∏¥‡∏™‡∏±‡∏¢ : {unique}',
            color=0x4efc03
        )
        embed.set_thumbnail(interaction.user.avatar)
        return await interaction.response.edit_message(embed=embed, view=ProfileSetting())
    
    @nextcord.ui.button(label='‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•', row=1, style=nextcord.ButtonStyle.red, custom_id='resetselection')
    async def resetselection(self, button, interaction: nextcord.Interaction):
        try:
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
        except FileNotFoundError:
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as newuser:
                action = {
                    'userid': str(interaction.user.id),
                    'sex': '',
                    'age': '',
                    'province': '',
                    'unique': ''
                }
                json.dump(action, newuser, indent=4, ensure_ascii=False)
        except json.decoder.JSONDecodeError:
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as newuser:
                action = {
                    'userid': f'{interaction.user.id}',
                    'sex': '',
                    'age': '',
                    'province': '',
                    'unique': ''
                }
                json.dump(action, newuser, indent=4, ensure_ascii=False)
            
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏ä‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß', color=0x4efc03)
            return await interaction.response.send_message(embed=embed, ephemeral=True, delete_after=1)
        
        with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as newuser:
            action = {
                'userid': str(interaction.user.id),
                'sex': '',
                'age': '',
                'province': '',
                'unique': ''
            }
            json.dump(action, newuser, indent=4, ensure_ascii=False)
        
        data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
        sex = str(data['sex'])
        age = str(data['age'])
        province = str(data['province'])
        unique = str(data['unique'])
        if sex == '':
            sex = '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤'
        if age == '':
            age = '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤'
        if province == '':
            province = '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤'
        if unique == '':
            unique = '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤'
        embed = nextcord.Embed(
            title='‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß',
            description=f'‡πÄ‡∏û‡∏® : {sex}\n‡∏≠‡∏≤‡∏¢‡∏∏ : {age}\n‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î : {province}\n‡∏ô‡∏¥‡∏™‡∏±‡∏¢ : {unique}',
            color=0x4efc03
        )
        embed.set_thumbnail(interaction.user.avatar)
        return await interaction.response.edit_message(embed=embed)

class ProfileSetting2(nextcord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
    
    @nextcord.ui.button(label='‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏û‡∏®', style=nextcord.ButtonStyle.primary, custom_id='zasexselection')
    async def zasexselection(self, button, interaction: nextcord.Interaction):
        return await interaction.response.send_message(view=SelectSex2(), ephemeral=True)

    
    @nextcord.ui.button(label='‡∏≠‡∏≤‡∏¢‡∏∏', style=nextcord.ButtonStyle.green, custom_id='zaageselection')
    async def zaageselection(self, button, interaction: nextcord.Interaction):
        return await interaction.response.send_modal(SetAge2())
    
    @nextcord.ui.button(label='‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î', style=nextcord.ButtonStyle.red, custom_id='zaprovinceselection')
    async def zaprovinceselection(self, button, interaction: nextcord.Interaction):
        return await interaction.response.send_message(view=ViewProvince2(), ephemeral=True)
    
    @nextcord.ui.button(label='‡∏£‡∏µ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•', row=1, style=nextcord.ButtonStyle.primary, custom_id='zareloadselection')
    async def zareloadselection(self, button, interaction: nextcord.Interaction):
        try:
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
        except FileNotFoundError:
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as newuser:
                action = {
                    'userid': f'{interaction.user.id}',
                    'sex': '',
                    'age': '',
                    'age2': '',
                    'province': ''
                }
                json.dump(action, newuser, indent=4, ensure_ascii=False)
        except json.decoder.JSONDecodeError:
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as newuser:
                action = {
                    'userid': f'{interaction.user.id}',
                    'sex': '',
                    'age': '',
                    'age2': '',
                    'province': ''
                }
                json.dump(action, newuser, indent=4, ensure_ascii=False)

        data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
        sex = str(data['sex'])
        age = str(data['age'])
        age2 = str(data['age2'])
        province = str(data['province'])
        if sex == '':
            sex = '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤'
        if age == '' or age2 == '':
            age = '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤'
            age2 = '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤'
        if province == '':
            province = '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤'
        
        embed = nextcord.Embed(
            title='‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤',
            description=f'‡πÄ‡∏û‡∏® : {sex}\n‡∏≠‡∏≤‡∏¢‡∏∏ : {age} - {age2}\n‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î : {province}',
            color=0x4efc03
        )
        return await interaction.response.edit_message(embed=embed)
        
    
    @nextcord.ui.button(label='‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•', row=1, style=nextcord.ButtonStyle.red, custom_id='zaresetselection')
    async def zaresetselection(self, button, interaction: nextcord.Interaction):
        try:
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
        except FileNotFoundError:
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as newuser:
                action = {
                    'userid': str(interaction.user.id),
                    'sex': '',
                    'age': '',
                    'age2': '',
                    'province': ''
                }
                json.dump(action, newuser, indent=4, ensure_ascii=False)
        except json.decoder.JSONDecodeError:
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as newuser:
                action = {
                    'userid': f'{interaction.user.id}',
                    'sex': '',
                    'age': '',
                    'age2': '',
                    'province': ''
                }
                json.dump(action, newuser, indent=4, ensure_ascii=False)
            
            embed = nextcord.Embed(title='‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏ä‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß', color=0x4efc03)
            return await interaction.response.send_message(embed=embed, ephemeral=True, delete_after=1)
        
        with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as newuser:
            action = {
                'userid': str(interaction.user.id),
                'sex': '',
                'age': '',
                'age2': '',
                'province': ''
            }
            json.dump(action, newuser, indent=4, ensure_ascii=False)
        
        data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
        sex = str(data['sex'])
        age = str(data['age'])
        age2 = str(data['age2'])
        province = str(data['province'])
        if sex == '':
            sex = '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤'
        if age == '' or age2 == '':
            age = '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤'
            age2 = '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤'
        if province == '':
            province = '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤'
        embed = nextcord.Embed(
            title='‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤',
            description=f'‡πÄ‡∏û‡∏® : {sex}\n‡∏≠‡∏≤‡∏¢‡∏∏ : {age} - {age2}\n‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î : {province}',
            color=0x4efc03
        )
        return await interaction.response.edit_message(embed=embed)


class Button(nextcord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
    
    @nextcord.ui.button(label='‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß', style=nextcord.ButtonStyle.primary, custom_id='profile')
    async def profile(self, button, interaction: nextcord.Interaction):
        print(f'{interaction.user.name}')
        try:
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
        except FileNotFoundError:
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as newuser:
                action = {
                    'userid': f'{interaction.user.id}',
                    'sex': '',
                    'age': '',
                    'province': '',
                    'unique': ''
                }
                json.dump(action, newuser, indent=4, ensure_ascii=False)
        except json.decoder.JSONDecodeError:
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as newuser:
                action = {
                    'userid': f'{interaction.user.id}',
                    'sex': '',
                    'age': '',
                    'province': '',
                    'unique': ''
                }
                json.dump(action, newuser, indent=4, ensure_ascii=False)

        data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
        sex = str(data['sex'])
        age = str(data['age'])
        province = str(data['province'])
        unique = str(data['unique'])
        if sex == '':
            sex = '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤'
        if age == '':
            age = '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤'
        if province == '':
            province = '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤'
        if unique == '':
            unique = '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤'
        embed = nextcord.Embed(
            title='‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß',
            description=f'‡πÄ‡∏û‡∏® : {sex}\n‡∏≠‡∏≤‡∏¢‡∏∏ : {age}\n‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î : {province}\n‡∏ô‡∏¥‡∏™‡∏±‡∏¢ : {unique}',
            color=0x4efc03
        )
        embed.set_thumbnail(interaction.user.avatar)
        return await interaction.response.send_message(embed=embed, ephemeral=True, view=ProfileSetting())
    
    
    @nextcord.ui.button(label='‡∏Å‡∏£‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤', style=nextcord.ButtonStyle.grey, custom_id='filter')
    async def filter(self, button, interaction: nextcord.Interaction):
        try:
            data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
        except FileNotFoundError:
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as newuser:
                action = {
                    'userid': f'{interaction.user.id}',
                    'sex': '',
                    'age': '',
                    'age2': '',
                    'province': ''
                }
                json.dump(action, newuser, indent=4, ensure_ascii=False)
        except json.decoder.JSONDecodeError:
            with open(f'./database/data_profile/{interaction.user.name}_search.json', 'w+', encoding='utf-8') as newuser:
                action = {
                    'userid': f'{interaction.user.id}',
                    'sex': '',
                    'age': '',
                    'age2': '',
                    'province': ''
                }
                json.dump(action, newuser, indent=4, ensure_ascii=False)

        
        data = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
        userid = str(data['userid'])
        sex = str(data['sex'])
        age = str(data['age'])
        age2 = str(data['age2'])
        province = str(data['province'])
        if sex == '':
            sex = '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤'
        if age == '' or age2 == '':
            age = '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤'
            age2 = '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤'
        if province == '':
            province = '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤'
        embed = nextcord.Embed(
            title='‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤',
            description=f'‡πÄ‡∏û‡∏® : {sex}\n‡∏≠‡∏≤‡∏¢‡∏∏ : {age} - {age2}\n‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î : {province}',
            color=0x4efc03
        )
        return await interaction.response.send_message(embed=embed, view=ProfileSetting2(), ephemeral=True)

    
    @nextcord.ui.button(label='‡πÅ‡∏°‡∏ó‡∏ï‡πå', style=nextcord.ButtonStyle.red, custom_id='match')
    async def match(self, button, interaction: nextcord.Interaction):
        try:
            data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
        except FileNotFoundError:
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as newuser:
                action = {
                    'userid': f'{interaction.user.id}',
                    'sex': '',
                    'age': '',
                    'province': '',
                    'unique': ''
                }
                json.dump(action, newuser, indent=4, ensure_ascii=False)
        except json.decoder.JSONDecodeError:
            with open(f'./database/data_profile/{interaction.user.name}.json', 'w+', encoding='utf-8') as newuser:
                action = {
                    'userid': f'{interaction.user.id}',
                    'sex': '',
                    'age': '',
                    'province': '',
                    'unique': ''
                }
                json.dump(action, newuser, indent=4, ensure_ascii=False)

            embed = nextcord.Embed(description='> ‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•', color=0xff0000)
            return await interaction.response.send_message(embed=embed, ephemeral=True)

        data = json.load(open(f'./database/data_profile/{interaction.user.name}.json', 'r', encoding='utf-8'))
        sex = str(data['sex'])
        age = str(data['age'])
        province = str(data['province'])
        unique = str(data['unique'])
        if sex == '' or age == '' or province == '' or unique == '':
            embed = nextcord.Embed(description='> ‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏Å‡πà‡∏≠‡∏ô!', color=0xff0000)
            return await interaction.response.send_message(embed=embed, ephemeral=True)
        else:
            try:
                data2 = json.load(open(f'./database/data_profile/{interaction.user.name}_search.json', 'r', encoding='utf-8'))
                sex = str(data2['sex'])
                age = str(data2['age'])
                age2 = str(data2['age2'])
                province = str(data2['province'])
                if sex == '' or age == '' or age2 == '' or province == '':
                    while True:
                        pathDatabase = './database/data_profile'
                        db = os.listdir(pathDatabase)
                        result = random.choice(db)
                        if 'search' in result:
                            continue
                        print(f'{pathDatabase}/{result}')
                        optz = json.load(open(f'{pathDatabase}/{result}', 'r', encoding='utf-8'))
                        userid = int(optz['userid'])
                        sex2 = str(optz['sex'])
                        age2 = str(optz['age'])
                        province2 = str(optz['province'])
                        unique = str(optz['unique'])
                        if sex2 == '' or age2 == '' or province2 == '' or unique == '':
                            continue
                        else:
                            if str(optz['userid']) == str(interaction.user.id):
                                continue
                            else:
                                member = interaction.guild.get_member(int(optz['userid']))
                                embed = nextcord.Embed(color=0x00f2ff)
                                embed.add_field(name='‡∏≠‡∏≤‡∏¢‡∏∏', value=f'{age2} ‡∏õ‡∏µ', inline=True)
                                embed.add_field(name='‡πÄ‡∏û‡∏®', value=f'{sex2}', inline=True)
                                embed.add_field(name='‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î', value=f'{province2}', inline=True)
                                embed.add_field(name='‡∏ô‡∏¥‡∏™‡∏±‡∏¢', value=f'{unique}', inline=False)
                                embed.set_thumbnail(member.avatar)
                                return await interaction.response.send_message(content=f'‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏ö‡∏Ñ‡∏π‡πà‡∏Å‡∏±‡∏ö {member.mention} ‡πÉ‡∏ä‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?', embed=embed, ephemeral=True, view=Send(str(interaction.user.id), str(optz['userid'])))
                else:
                    fetch_error = 0
                    while True:
                        if fetch_error == 20:
                            fetch_error = 0
                            embed = nextcord.Embed(description='> ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ï‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á‡∏î‡∏±‡∏á‡∏Å‡∏•‡πà‡∏≤‡∏ß!', color=0xff0000)
                            return await interaction.response.send_message(embed=embed, ephemeral=True)
                        pathDatabase = './database/data_profile'
                        db = os.listdir(pathDatabase)
                        result = random.choice(db)
                        if 'search' in result:
                            continue
                        print(f'{pathDatabase}/{result}')
                        optz = json.load(open(f'{pathDatabase}/{result}', 'r', encoding='utf-8'))
                        userid = int(optz['userid'])
                        sex2 = str(optz['sex'])
                        age12 = str(optz['age'])
                        province2 = str(optz['province'])
                        unique = str(optz['unique'])
                        if sex2 == '' or age == '' or province2 == '' or unique == '':
                            continue
                        else:
                            if str(optz['userid']) == str(interaction.user.id):
                                continue
                            else:
                                if int(str(age12)) >= int(str(age)) and int(str(age12)) <= int(str(age2)):
                                    if str(sex) == '‡∏ä‡∏≤‡∏¢':
                                        if str(sex2) == '‡∏ä‡∏≤‡∏¢':
                                            if str(province2) == str(province):
                                                member = interaction.guild.get_member(int(optz['userid']))
                                                embed = nextcord.Embed(color=0x00f2ff)
                                                embed.add_field(name='‡∏≠‡∏≤‡∏¢‡∏∏', value=f'{age12} ‡∏õ‡∏µ', inline=True)
                                                embed.add_field(name='‡πÄ‡∏û‡∏®', value=f'{sex2}', inline=True)
                                                embed.add_field(name='‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î', value=f'{province2}', inline=True)
                                                embed.add_field(name='‡∏ô‡∏¥‡∏™‡∏±‡∏¢', value=f'{unique}', inline=False)
                                                embed.set_thumbnail(member.avatar)
                                                return await interaction.response.send_message(content=f'‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏ö‡∏Ñ‡∏π‡πà‡∏Å‡∏±‡∏ö {member.mention} ‡πÉ‡∏ä‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?', embed=embed, ephemeral=True, view=Send2(str(interaction.user.id), str(optz['userid'])))
                                            else:
                                                fetch_error += 1
                                                continue
                                        else:
                                            fetch_error += 1
                                            continue
                                    if str(sex) == '‡∏´‡∏ç‡∏¥‡∏á':
                                        if str(sex2) == '‡∏´‡∏ç‡∏¥‡∏á':
                                            if str(province2) == str(province):
                                                member = interaction.guild.get_member(int(optz['userid']))
                                                embed = nextcord.Embed(color=0x00f2ff)
                                                embed.add_field(name='‡∏≠‡∏≤‡∏¢‡∏∏', value=f'{age12} ‡∏õ‡∏µ', inline=True)
                                                embed.add_field(name='‡πÄ‡∏û‡∏®', value=f'{sex2}', inline=True)
                                                embed.add_field(name='‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î', value=f'{province2}', inline=True)
                                                embed.add_field(name='‡∏ô‡∏¥‡∏™‡∏±‡∏¢', value=f'{unique}', inline=False)
                                                embed.set_thumbnail(member.avatar)
                                                return await interaction.response.send_message(content=f'‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏ö‡∏Ñ‡∏π‡πà‡∏Å‡∏±‡∏ö {member.mention} ‡πÉ‡∏ä‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?', embed=embed, ephemeral=True, view=Send2(str(interaction.user.id), str(optz['userid'])))
                                            else:
                                                fetch_error += 1
                                                continue
                                else:
                                    fetch_error += 1
                                    continue

                
            except FileNotFoundError:
                error = 0
                while True:
                    if error == 20:
                        embed = nextcord.Embed(description='> ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ!', color=0xff0000)
                        return await interaction.response.send_message(embed=embed, ephemeral=True)
                    pathDatabase = './database/data_profile'
                    db = os.listdir(pathDatabase)
                    result = random.choice(db)
                    if 'search' in result:
                        continue
                    matchAuth = json.load(open(f'{pathDatabase}/{result}', 'r', encoding='utf-8'))
                    userid = int(matchAuth['userid'])
                    sex2 = str(matchAuth['sex'])
                    age2 = str(matchAuth['age'])
                    province2 = str(matchAuth['province'])
                    unique2 = str(matchAuth['unique'])
                    if sex2 == '' or age2 == '' or province2 == '' or unique2 == '':
                        continue
                    else:
                        if str(matchAuth['userid']) == str(interaction.user.id):
                            error += 1
                            continue
                        else:
                            member = interaction.guild.get_member(int(matchAuth['userid']))
                            embed = nextcord.Embed(color=0x00f2ff)
                            embed.add_field(name='‡∏≠‡∏≤‡∏¢‡∏∏', value=f'{age2} ‡∏õ‡∏µ', inline=True)
                            embed.add_field(name='‡πÄ‡∏û‡∏®', value=f'{sex2}', inline=True)
                            embed.add_field(name='‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î', value=f'{province2}', inline=True)
                            embed.add_field(name='‡∏ô‡∏¥‡∏™‡∏±‡∏¢', value=f'{unique2}', inline=False)
                            embed.set_thumbnail(member.avatar)
                            return await interaction.response.send_message(content=f'‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏ö‡∏Ñ‡∏π‡πà‡∏Å‡∏±‡∏ö {member.mention} ‡πÉ‡∏ä‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?', embed=embed, ephemeral=True, view=Send(str(interaction.user.id), str(matchAuth['userid'])))


@bot.event
async def on_connect():
    bot.add_view(Button())
    bot.add_view(ProfileSetting())

@bot.command(name="setuplove2")
async def setuplove2(ctx):
        embed = nextcord.Embed(
            color=nextcord.Color.blue())
        embed.set_image(url='https://cdn.discordapp.com/attachments/1210590999055962213/1212956900270936135/1.png?ex=65f3b924&is=65e14424&hm=0b1ab4ee901d42504588e8e0bab4b2a72d8664b9335c3dcf4471a542fe1efeb1&')
        await ctx.channel.send(embed=embed, view=Button())

bot.run(token)
